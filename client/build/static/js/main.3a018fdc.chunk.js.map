{"version":3,"sources":["components/books.jpg","AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","md5.js","components/LoginPage.js","components/FloatingButton.js","components/RecipesTable.js","components/RecipeForm.js","components/Recipes.js","components/PantryPage.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","AppMode","LOGIN","RECIPES","RECIPES_ADDRECIPE","RECIPES_EDITRECIPE","PANTRY","Object","freeze","NavBar","handleMenuBtnClick","props","mode","BOOKS_ADDBOOK","BOOKS_EDITBOOK","changeMode","BOOKS","toggleMenuOpen","getMenuBtnIcon","menuOpen","className","onClick","this","id","title","React","Component","SideMenu","renderModeMenuItems","REVIEWS","src","user","profileImageUrl","height","width","displayName","userId","showAbout","ModeBar","handleModeBtnClick","newMode","md5cycle","x","k","a","b","c","d","ff","gg","hh","ii","add32","cmn","q","s","t","md5blk","i","md5blks","charCodeAt","hex_chr","split","rhex","n","j","md5","length","join","hex","state","substring","tail","md51","LoginPage","handleLogin","setState","loginBtnIcon","loginBtnLabel","setUser","emailInputRef","current","value","username","provider","setAuthenticated","handleLoginSubmit","event","preventDefault","url","passwordInputRef","fetch","method","res","status","window","open","text","resText","loginMsg","setTimeout","hideErrorMsg","handleOAuthLogin","handleOAuthLoginClick","checkAccountValidity","accountPassword","accountPasswordRepeat","repeatPassRef","setCustomValidity","handleNewAccountChange","target","name","handleCreateAccount","loginInfo","accountName","password","securityQuestion","accountSecurityQuestion","securityAnswer","accountSecurityAnswer","headers","Accept","body","JSON","stringify","alert","showAccountDialog","renderAccountDialog","role","onSubmit","type","size","placeholder","pattern","ref","newUserRef","required","onChange","rows","cols","maxLength","handleLookUpAccount","accountEmailRef","focus","json","result","select","question","resetEmail","resetQuestion","showLookUpAccountDialog","showSecurityQuestionDialog","renderLookUpAccountDialog","handleSecurityQuestionResponse","securityAnswerRef","resetAnswer","showPasswordResetDialog","renderSecurityQuestionDialog","readOnly","handleResetPassword","resetPasswordRef","resetPasswordRepeatRef","resetInfo","answer","newPassword","renderPasswordResetDialog","createRef","googleIcon","googleLabel","htmlFor","FloatingButton","handleClick","icon","RecipesTable","editBook","setEditId","confirmDelete","setDeleteId","doDelete","deleteBook","cancelDelete","renderConfirmDeleteDialog","renderTable","table","push","key","books","bookName","author","genere","pages","scope","keys","colSpan","style","fontStyle","RecipeForm","handleChange","console","log","handleSubmit","faIcon","btnLabel","bookData","saveBook","startData","class","pagesRef","min","max","fontSize","zindex","Recipes","fetchBooks","msg","parse","val","deleteId","editId","newData","_id","addBook","Fragment","PantryPage","align","modeTitle","RECIPES_ADDBOOK","RECIPES_EDITBOOK","modeToPage","App","handleChangeMode","openMenu","closeMenu","prevState","userObj","auth","authenticated","stopPropagation","toggleAbout","renderAbout","require","addEventListener","then","response","obj","isAuthenticated","data","localStorage","getItem","hasOwnProperty","accountInfo","setItem","removeEventListener","ModePage","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a018fdc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/books.26746953.jpg\";","/* AppMode: The enumerated type for AppMode. If we were using TypeScript, we could\r\nuse the predefined enum type; see\r\nhttps://www.typescriptlang.org/docs/handbook/enums.html. Declaring an enumerated\r\ntype as a JavaScript object has important limitations (see\r\nhttps://stackoverflow.com/questions/287903/what-is-the-preferred-syntax-for-defining-enums-in-javascript),\r\nbut it will do for our purposes*/\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    RECIPES: \"RecipeMode\",\r\n    RECIPES_ADDRECIPE: \"RecipeMode-AddRecipe\",\r\n    RECIPES_EDITRECIPE: \"RecipeMode-EditRecipe\",\r\n    PANTRY: \"PantryMode\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from \"react\";\r\nimport AppMode from \"../AppMode.js\";\r\n\r\nclass NavBar extends React.Component {\r\n  handleMenuBtnClick = () => {\r\n    if (\r\n      this.props.mode === AppMode.BOOKS_ADDBOOK ||\r\n      this.props.mode === AppMode.BOOKS_EDITBOOK\r\n    ) {\r\n      this.props.changeMode(AppMode.BOOKS);\r\n    } else if (this.props.mode != AppMode.LOGIN) {\r\n      this.props.toggleMenuOpen();\r\n    }\r\n  };\r\n\r\n  getMenuBtnIcon = () => {\r\n    if (\r\n      this.props.mode === AppMode.BOOKS_ADDBOOK ||\r\n      this.props.mode === AppMode.BOOKS_EDITBOOK\r\n    )\r\n      return \"fa fa-arrow-left\";\r\n    if (this.props.menuOpen) return \"fa fa-times\";\r\n    return \"fa fa-bars\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <span className=\"navbar-items\">\r\n          <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\r\n            <span\r\n              id=\"sidemenu-btn-icon\"\r\n              className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}\r\n            ></span>\r\n          </button>\r\n          &nbsp;<i className=\"fa fa-book bookIcon\"></i>&nbsp;\r\n          <span id=\"topBarTitle\" className=\"navbar-title\">\r\n            &nbsp;{this.props.title}\r\n          </span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport AppMode from \"../AppMode.js\";\r\n\r\nclass SideMenu extends React.Component {\r\n  //renderModeItems -- Renders correct subset of mode menu items based on\r\n  //current mode, which is stored in this.prop.mode. Uses switch statement to\r\n  //determine mode.\r\n  renderModeMenuItems = () => {\r\n    switch (this.props.mode) {\r\n      case AppMode.BOOKS:\r\n        return (\r\n          <div>\r\n            <a\r\n              className=\"sidemenu-item\"\r\n              onClick={() => this.props.changeMode(AppMode.BOOKS_ADDBOOK)}\r\n            >\r\n              <span className=\"fa fa-plus\"></span>&nbsp;Add Book\r\n            </a>\r\n          </div>\r\n        );\r\n        break;\r\n      case AppMode.REVIEWS:\r\n        return <div></div>;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"sidemenu \" +\r\n          (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")\r\n        }\r\n      >\r\n        {/* SIDE MENU TITLE */}\r\n        <div className=\"sidemenu-title\">\r\n          <div className=\"sidemenu-title\">\r\n            <img src={this.props.user.profileImageUrl} height=\"50\" width=\"50\" />\r\n            <span className=\"sidemenu-userID\">\r\n              &nbsp;{this.props.user.displayName}\r\n            </span>\r\n          </div>\r\n          <span className=\"sidemenu-userID\">&nbsp;{this.props.userId}</span>\r\n        </div>\r\n        {/* MENU CONTENT */}\r\n        {/*Mode-based menu items */}\r\n        {this.renderModeMenuItems()}\r\n        {/* Always-there menu items */}\r\n        <a className=\"sidemenu-item\" onClick={this.props.showAbout}>\r\n          <span className=\"fa fa-info-circle\"></span>&nbsp;About\r\n        </a>\r\n        <a\r\n          className=\"sidemenu-item\"\r\n          onClick={() => this.props.changeMode(AppMode.LOGIN)}\r\n        >\r\n          <span className=\"fa fa-sign-out\"></span>&nbsp;Log Out\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from \"react\";\r\nimport AppMode from \"../AppMode.js\";\r\n\r\nclass ModeBar extends React.Component {\r\n  handleModeBtnClick = newMode => {\r\n    if (this.props.mode != newMode) {\r\n      this.props.changeMode(newMode);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"modebar\" +\r\n          (this.props.mode === AppMode.LOGIN ? \" invisible\" : \" visible\") +\r\n          (this.props.mode === AppMode.BOOKS_ADDBOOK ||\r\n          this.props.mode === AppMode.BOOKS_EDITBOOK\r\n            ? \" disabledButton\"\r\n            : \"\")\r\n        }\r\n        id=\"bottomBar\"\r\n      >\r\n        <a\r\n          className={\r\n            \"modebar-btn\" +\r\n            (this.props.mode === AppMode.BOOKS ? \" modebar-item-selected\" : \"\")\r\n          }\r\n          onClick={\r\n            this.props.menuOpen\r\n              ? null\r\n              : () => this.handleModeBtnClick(AppMode.BOOKS)\r\n          }\r\n        >\r\n          <span className=\"modebar-icon fa fa-th-list\"></span>\r\n          <span className=\"modebar-text\">Books</span>\r\n        </a>\r\n        <a\r\n          className={\r\n            \"modebar-btn\" +\r\n            (this.props.mode === AppMode.REVIEWS\r\n              ? \" modebar-item-selected\"\r\n              : \"\")\r\n          }\r\n          onClick={\r\n            this.props.menuOpen\r\n              ? null\r\n              : () => this.handleModeBtnClick(AppMode.REVIEWS)\r\n          }\r\n        >\r\n          <span className=\"modebar-icon fa fa-book\"></span>\r\n          <span className=\"modebar-text\">Reviews</span>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModeBar;\r\n","function md5cycle(x, k) {\r\n    var a = x[0], b = x[1], c = x[2], d = x[3];\r\n    \r\n    a = ff(a, b, c, d, k[0], 7, -680876936);\r\n    d = ff(d, a, b, c, k[1], 12, -389564586);\r\n    c = ff(c, d, a, b, k[2], 17,  606105819);\r\n    b = ff(b, c, d, a, k[3], 22, -1044525330);\r\n    a = ff(a, b, c, d, k[4], 7, -176418897);\r\n    d = ff(d, a, b, c, k[5], 12,  1200080426);\r\n    c = ff(c, d, a, b, k[6], 17, -1473231341);\r\n    b = ff(b, c, d, a, k[7], 22, -45705983);\r\n    a = ff(a, b, c, d, k[8], 7,  1770035416);\r\n    d = ff(d, a, b, c, k[9], 12, -1958414417);\r\n    c = ff(c, d, a, b, k[10], 17, -42063);\r\n    b = ff(b, c, d, a, k[11], 22, -1990404162);\r\n    a = ff(a, b, c, d, k[12], 7,  1804603682);\r\n    d = ff(d, a, b, c, k[13], 12, -40341101);\r\n    c = ff(c, d, a, b, k[14], 17, -1502002290);\r\n    b = ff(b, c, d, a, k[15], 22,  1236535329);\r\n    \r\n    a = gg(a, b, c, d, k[1], 5, -165796510);\r\n    d = gg(d, a, b, c, k[6], 9, -1069501632);\r\n    c = gg(c, d, a, b, k[11], 14,  643717713);\r\n    b = gg(b, c, d, a, k[0], 20, -373897302);\r\n    a = gg(a, b, c, d, k[5], 5, -701558691);\r\n    d = gg(d, a, b, c, k[10], 9,  38016083);\r\n    c = gg(c, d, a, b, k[15], 14, -660478335);\r\n    b = gg(b, c, d, a, k[4], 20, -405537848);\r\n    a = gg(a, b, c, d, k[9], 5,  568446438);\r\n    d = gg(d, a, b, c, k[14], 9, -1019803690);\r\n    c = gg(c, d, a, b, k[3], 14, -187363961);\r\n    b = gg(b, c, d, a, k[8], 20,  1163531501);\r\n    a = gg(a, b, c, d, k[13], 5, -1444681467);\r\n    d = gg(d, a, b, c, k[2], 9, -51403784);\r\n    c = gg(c, d, a, b, k[7], 14,  1735328473);\r\n    b = gg(b, c, d, a, k[12], 20, -1926607734);\r\n    \r\n    a = hh(a, b, c, d, k[5], 4, -378558);\r\n    d = hh(d, a, b, c, k[8], 11, -2022574463);\r\n    c = hh(c, d, a, b, k[11], 16,  1839030562);\r\n    b = hh(b, c, d, a, k[14], 23, -35309556);\r\n    a = hh(a, b, c, d, k[1], 4, -1530992060);\r\n    d = hh(d, a, b, c, k[4], 11,  1272893353);\r\n    c = hh(c, d, a, b, k[7], 16, -155497632);\r\n    b = hh(b, c, d, a, k[10], 23, -1094730640);\r\n    a = hh(a, b, c, d, k[13], 4,  681279174);\r\n    d = hh(d, a, b, c, k[0], 11, -358537222);\r\n    c = hh(c, d, a, b, k[3], 16, -722521979);\r\n    b = hh(b, c, d, a, k[6], 23,  76029189);\r\n    a = hh(a, b, c, d, k[9], 4, -640364487);\r\n    d = hh(d, a, b, c, k[12], 11, -421815835);\r\n    c = hh(c, d, a, b, k[15], 16,  530742520);\r\n    b = hh(b, c, d, a, k[2], 23, -995338651);\r\n    \r\n    a = ii(a, b, c, d, k[0], 6, -198630844);\r\n    d = ii(d, a, b, c, k[7], 10,  1126891415);\r\n    c = ii(c, d, a, b, k[14], 15, -1416354905);\r\n    b = ii(b, c, d, a, k[5], 21, -57434055);\r\n    a = ii(a, b, c, d, k[12], 6,  1700485571);\r\n    d = ii(d, a, b, c, k[3], 10, -1894986606);\r\n    c = ii(c, d, a, b, k[10], 15, -1051523);\r\n    b = ii(b, c, d, a, k[1], 21, -2054922799);\r\n    a = ii(a, b, c, d, k[8], 6,  1873313359);\r\n    d = ii(d, a, b, c, k[15], 10, -30611744);\r\n    c = ii(c, d, a, b, k[6], 15, -1560198380);\r\n    b = ii(b, c, d, a, k[13], 21,  1309151649);\r\n    a = ii(a, b, c, d, k[4], 6, -145523070);\r\n    d = ii(d, a, b, c, k[11], 10, -1120210379);\r\n    c = ii(c, d, a, b, k[2], 15,  718787259);\r\n    b = ii(b, c, d, a, k[9], 21, -343485551);\r\n    \r\n    x[0] = add32(a, x[0]);\r\n    x[1] = add32(b, x[1]);\r\n    x[2] = add32(c, x[2]);\r\n    x[3] = add32(d, x[3]);\r\n    \r\n    }\r\n    \r\n    function cmn(q, a, b, x, s, t) {\r\n    a = add32(add32(a, q), add32(x, t));\r\n    return add32((a << s) | (a >>> (32 - s)), b);\r\n    }\r\n    \r\n    function ff(a, b, c, d, x, s, t) {\r\n    return cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n    }\r\n    \r\n    function gg(a, b, c, d, x, s, t) {\r\n    return cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n    }\r\n    \r\n    function hh(a, b, c, d, x, s, t) {\r\n    return cmn(b ^ c ^ d, a, b, x, s, t);\r\n    }\r\n    \r\n    function ii(a, b, c, d, x, s, t) {\r\n    return cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n    }\r\n    \r\n    function md51(s) {\r\n    var txt = '';\r\n    var n = s.length,\r\n    state = [1732584193, -271733879, -1732584194, 271733878], i;\r\n    for (i=64; i<=s.length; i+=64) {\r\n    md5cycle(state, md5blk(s.substring(i-64, i)));\r\n    }\r\n    s = s.substring(i-64);\r\n    var tail = [0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0];\r\n    for (i=0; i<s.length; i++)\r\n    tail[i>>2] |= s.charCodeAt(i) << ((i%4) << 3);\r\n    tail[i>>2] |= 0x80 << ((i%4) << 3);\r\n    if (i > 55) {\r\n    md5cycle(state, tail);\r\n    for (i=0; i<16; i++) tail[i] = 0;\r\n    }\r\n    tail[14] = n*8;\r\n    md5cycle(state, tail);\r\n    return state;\r\n    }\r\n    \r\n    /* there needs to be support for Unicode here,\r\n     * unless we pretend that we can redefine the MD-5\r\n     * algorithm for multi-byte characters (perhaps\r\n     * by adding every four 16-bit characters and\r\n     * shortening the sum to 32 bits). Otherwise\r\n     * I suggest performing MD-5 as if every character\r\n     * was two bytes--e.g., 0040 0025 = @%--but then\r\n     * how will an ordinary MD-5 sum be matched?\r\n     * There is no way to standardize text to something\r\n     * like UTF-8 before transformation; speed cost is\r\n     * utterly prohibitive. The JavaScript standard\r\n     * itself needs to look at this: it should start\r\n     * providing access to strings as preformed UTF-8\r\n     * 8-bit unsigned value arrays.\r\n     */\r\n    function md5blk(s) { /* I figured global was faster.   */\r\n    var md5blks = [], i; /* Andy King said do it this way. */\r\n    for (i=0; i<64; i+=4) {\r\n    md5blks[i>>2] = s.charCodeAt(i)\r\n    + (s.charCodeAt(i+1) << 8)\r\n    + (s.charCodeAt(i+2) << 16)\r\n    + (s.charCodeAt(i+3) << 24);\r\n    }\r\n    return md5blks;\r\n    }\r\n    \r\n    var hex_chr = '0123456789abcdef'.split('');\r\n    \r\n    function rhex(n)\r\n    {\r\n    var s='', j=0;\r\n    for(; j<4; j++)\r\n    s += hex_chr[(n >> (j * 8 + 4)) & 0x0F]\r\n    + hex_chr[(n >> (j * 8)) & 0x0F];\r\n    return s;\r\n    }\r\n    \r\n    function hex(x) {\r\n    for (var i=0; i<x.length; i++)\r\n    x[i] = rhex(x[i]);\r\n    return x.join('');\r\n    }\r\n    \r\n    export default function md5(s) {\r\n      return hex(md51(s));\r\n    }\r\n    \r\n    /* this function is much faster,\r\n    so if possible we use it. Some IEs\r\n    are the only ones I know of that\r\n    need the idiotic second function,\r\n    generated by an if clause.  */\r\n    \r\n    function add32(a, b) {\r\n    return (a + b) & 0xFFFFFFFF;\r\n    }\r\n    \r\n    if (md5('hello') != '5d41402abc4b2a76b9719d911017c592') {\r\n    function add32(x, y) {\r\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF),\r\n    msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xFFFF);\r\n    }\r\n    }","import React from \"react\";\r\nimport AppMode from \"./../AppMode.js\";\r\nimport md5 from \"../md5.js\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Create a ref for the email input DOM element\r\n    this.emailInputRef = React.createRef();\r\n    this.passwordInputRef = React.createRef();\r\n    this.repeatPassRef = React.createRef();\r\n    this.newUserRef = React.createRef();\r\n    this.accountEmailRef = React.createRef();\r\n    this.securityAnswerRef = React.createRef();\r\n    this.resetPasswordRef = React.createRef();\r\n    this.resetPasswordRepeatRef = React.createRef();\r\n    this.state = {\r\n      loginBtnIcon: \"fa fa-sign-in\",\r\n      loginBtnLabel: \"Log In\",\r\n      googleIcon: \"fa fa-google\",\r\n      googleLabel: \"Sign in with Google\",\r\n      showAccountDialog: false,\r\n      showLookUpAccountDialog: false,\r\n      showSecurityQuestionDialog: false,\r\n      showPasswordResetDialog: false,\r\n      resetEmail: \"\",\r\n      resetQuestion: \"\",\r\n      resetAnswer: \"\",\r\n      accountName: \"\",\r\n      accountPassword: \"\",\r\n      accountPasswordRepeat: \"\",\r\n      accountSecurityQuestion: \"\",\r\n      accountSecurityAnswer: \"\"\r\n    };\r\n  }\r\n\r\n  //Focus cursor in email input field when mounted\r\n  componentDidMount() {\r\n    this.emailInputRef.current.focus();\r\n  }\r\n\r\n  //handleLogin -- Callback function that sets up initial app state upon login.\r\n  handleLogin = () => {\r\n    //Stop spinner and set authStrategy to local\r\n    this.setState({ loginBtnIcon: \"fa fa-sign-in\", loginBtnLabel: \"Log In\" });\r\n    //Set current user in parent component\r\n    //With local authentication all we have is an email\r\n    //address; we do not have additional info\r\n    //We'll grab profile pic from the gravatar service. User can create account\r\n    //at http://gravatar.com and define their profile pic.\r\n    this.props.setUser({\r\n      id: this.emailInputRef.current.value,\r\n      username: this.emailInputRef.current.value,\r\n      provider: \"local\",\r\n      profileImageUrl: `https://www.gravatar.com/avatar/${md5(\r\n        this.emailInputRef.current.value\r\n      )}`\r\n    });\r\n    //Set authenticated state in parent component\r\n    this.props.setAuthenticated(true);\r\n    //Trigger switch to FEED mode (default app landing page)\r\n    this.props.changeMode(AppMode.BOOKS);\r\n  };\r\n\r\n  //handleLoginSubmit -- Called when user clicks on login button. Initiate spinner\r\n  //for 1 second and call handleLogin to do the work.\r\n  handleLoginSubmit = async event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n      loginBtnLabel: \"Logging In...\"\r\n    });\r\n\r\n    const url =\r\n      \"/login?username=\" +\r\n      this.emailInputRef.current.value +\r\n      \"&password=\" +\r\n      this.passwordInputRef.current.value;\r\n    const res = await fetch(url, { method: \"POST\" });\r\n    if (res.status == 200) {\r\n      //successful login!\r\n      //Force componentDidMount to execute.\r\n      //authenticated state will be updated and\r\n      //Session will be deserialized.\r\n      window.open(\"/\", \"_self\");\r\n    } else {\r\n      //Unsuccessful login\r\n      //Grab textual error message\r\n      const resText = await res.text();\r\n      //Display error message for 3 seconds and invite another login attempt\r\n      this.setState(\r\n        {\r\n          loginBtnIcon: \"fa fa-sign-in\",\r\n          loginBtnLabel: \"Log In\",\r\n          loginMsg: resText\r\n        },\r\n        () => setTimeout(this.hideErrorMsg, 3000)\r\n      );\r\n    }\r\n  };\r\n\r\n  hideErrorMsg = () => {\r\n    this.emailInputRef.current.value = \"\";\r\n    this.passwordInputRef.current.value = \"\";\r\n    this.setState({ loginMsg: \"\" });\r\n  };\r\n\r\n  //handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n  //provider\r\n\r\n  handleOAuthLogin = provider => {\r\n    window.open(`/auth/${provider}`, \"_self\");\r\n  };\r\n\r\n  //handleOAuthLoginClick -- Called whent the user clicks on button to\r\n  //authenticate via a third-party OAuth service. The name of the provider is\r\n  //passed in as a parameter.\r\n\r\n  handleOAuthLoginClick = provider => {\r\n    this.setState({\r\n      [provider + \"Icon\"]: \"fa fa-spin fa-spinner\",\r\n\r\n      [provider + \"Label\"]: \"Connecting...\"\r\n    });\r\n\r\n    setTimeout(() => this.handleOAuthLogin(provider), 1000);\r\n  };\r\n\r\n  //checkAccountValidity -- Callback function invoked after a form element in\r\n  //the 'Create Account' dialog box changes and component state has been\r\n  //updated. We need to check whether the passwords match and whether an\r\n  //account is already associated with the email address entered. If so, we\r\n  //set a custom validity message to be displayed when the user clicks the\r\n  //'Create Account' button. Otherwise, we reset the custom validity message\r\n  //to empty so that it will NOT fire when the user clicks 'Create Account'.\r\n  checkAccountValidity = () => {\r\n    if (this.state.accountPassword != this.state.accountPasswordRepeat) {\r\n      //Passwords don't match\r\n      this.repeatPassRef.current.setCustomValidity(\r\n        \"This password must match original password.\"\r\n      );\r\n    } else {\r\n      this.repeatPassRef.current.setCustomValidity(\"\");\r\n    }\r\n    // let data = JSON.parse(localStorage.getItem(\"yourLibraryUserData\"));\r\n    // if (data != null && data.hasOwnProperty(this.state.accountName)) {\r\n    //   //The user name is already taken\r\n    //   this.newUserRef.current.setCustomValidity(\r\n    //     \"An account already exists under this email address. Use 'Reset password' to recover the password.\"\r\n    //   );\r\n    // } else {\r\n    //   this.newUserRef.current.setCustomValidity(\"\");\r\n    // }\r\n  };\r\n\r\n  //handleNewAccountChange -- Called when a field in a dialog box form changes.\r\n  //Update corresponding state variable and potentially update the custom\r\n  //message.\r\n  handleNewAccountChange = event => {\r\n    this.setState(\r\n      { [event.target.name]: event.target.value },\r\n      this.checkAccountValidity\r\n    );\r\n  };\r\n\r\n  handleCreateAccount = async event => {\r\n    event.preventDefault();\r\n    const loginInfo = {\r\n      userId: this.state.accountName,\r\n      password: this.state.accountPassword,\r\n      securityQuestion: this.state.accountSecurityQuestion,\r\n      securityAnswer: this.state.accountSecurityAnswer\r\n    };\r\n    const res = await fetch(\"/newaccount\", {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(loginInfo)\r\n    });\r\n    if (res.status == 200) {\r\n      //successful account creation!\r\n      alert(\r\n        \"Your account was successfully created. Please log in using your email and password to continue.\"\r\n      );\r\n      this.setState({ showAccountDialog: false });\r\n    } else {\r\n      //Unsuccessful account creation\r\n      //Grab textual error message\r\n      const resText = await res.text();\r\n      alert(resText); //most likely the username is already taken\r\n    }\r\n  };\r\n\r\n  renderAccountDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Create New Account</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({ showAccountDialog: false });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleCreateAccount}>\r\n                <label>\r\n                  Email:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountName\"\r\n                    type=\"email\"\r\n                    size=\"35\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                    ref={this.newUserRef}\r\n                    required={true}\r\n                    value={this.state.accountName}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n\r\n                <label>\r\n                  Password:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountPassword\"\r\n                    type=\"password\"\r\n                    size=\"35\"\r\n                    placeholder=\"Enter Password\"\r\n                    pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                    required={true}\r\n                    ref={this.repeatPassRef}\r\n                    value={this.state.accountPassword}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n\r\n                <label>\r\n                  Repeat Password:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountPasswordRepeat\"\r\n                    type=\"password\"\r\n                    size=\"35\"\r\n                    placeholder=\"Repeat Password\"\r\n                    required={true}\r\n                    ref={this.repeatPassRef}\r\n                    value={this.state.accountPasswordRepeat}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n\r\n                <label>\r\n                  Security Question:\r\n                  <textarea\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountSecurityQuestion\"\r\n                    size=\"35\"\r\n                    placeholder=\"Security Question\"\r\n                    rows=\"2\"\r\n                    cols=\"35\"\r\n                    maxLength=\"100\"\r\n                    required={true}\r\n                    value={this.state.accountSecurityQuestion}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Answer to Security Question:\r\n                  <textarea\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountSecurityAnswer\"\r\n                    type=\"text\"\r\n                    placeholder=\"Answer\"\r\n                    rows=\"2\"\r\n                    cols=\"35\"\r\n                    maxLength=\"100\"\r\n                    required={true}\r\n                    value={this.state.accountSecurityAnswer}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n                <button\r\n                  role=\"submit\"\r\n                  className=\"loginBtn btn btn-primary\r\n                  btn-block btncolortheme\"\r\n                >\r\n                  <span className=\"fa fa-user-plus\"></span>&nbsp;Create Account\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\r\n  //button, we check whether the account exists. If it does, we update the state,\r\n  //setting the resetEmail var to the email entered, hiding the current dialog box\r\n  //and showing the security question dialog box.\r\n  handleLookUpAccount = async event => {\r\n    event.preventDefault();\r\n    let url = \"/accountexists?userId=\" + this.accountEmailRef.current.value;\r\n    let res = await fetch(url, { method: \"GET\" });\r\n    let body;\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"Sorry, there was a problem communicating with the server. Please try again.\"\r\n      );\r\n      this.accountEmailRef.current.focus();\r\n      return;\r\n    }\r\n    body = await res.json();\r\n    if (!body.result) {\r\n      alert(\"Sorry, there is no account associated with this email address.\");\r\n      this.accountEmailRef.current.select();\r\n      return;\r\n    }\r\n    //if here, account exists -- grab security question\r\n    url = \"/securityquestion?userId=\" + this.accountEmailRef.current.value;\r\n    res = await fetch(url, { method: \"GET\" });\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"Sorry, there was a problem communicating with the server. Please try again.\"\r\n      );\r\n      this.accountEmailRef.current.focus();\r\n      return;\r\n    }\r\n    let question = await res.text();\r\n    this.setState({\r\n      resetEmail: this.accountEmailRef.current.value,\r\n      resetQuestion: question,\r\n      showLookUpAccountDialog: false,\r\n      showSecurityQuestionDialog: true\r\n    });\r\n    this.emailInputRef.current.value = \"\"; //clear out field\r\n  };\r\n\r\n  //renderLookUpAccountDialog -- Present a dialog box for user to enter the email address\r\n  //associated with their account in case where they want to reset password\r\n  renderLookUpAccountDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Look Up Account</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({ showLookUpAccountDialog: false });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleLookUpAccount}>\r\n                <label>\r\n                  Account Email Address:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    type=\"email\"\r\n                    size=\"35\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                    ref={this.accountEmailRef}\r\n                    required={true}\r\n                  />\r\n                </label>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"loginBtn btn btn-primary\r\n                  btn-block btncolortheme\"\r\n                >\r\n                  <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //handleSecurityQuestionResponse: When the user clicks on the \"Check Answer\" dialog box\r\n  //button, we check whether the security question answer is correct. If it is,\r\n  //present dialog box for resetting the password.\r\n  handleSecurityQuestionResponse = async event => {\r\n    event.preventDefault();\r\n    let url =\r\n      \"verifysecurityanswer/?userId=\" +\r\n      this.state.resetEmail +\r\n      \"&answer=\" +\r\n      this.securityAnswerRef.current.value;\r\n    let res = await fetch(url, { method: \"GET\" });\r\n    if (res.status != 200) {\r\n      alert(\"There was a problem communicating with the server. Try again.\");\r\n      return;\r\n    }\r\n    let body = await res.json();\r\n    if (!body.result) {\r\n      alert(\"Sorry, that is not the correct answer to the security question.\");\r\n      this.securityAnswerRef.current.select();\r\n      return;\r\n    }\r\n    this.setState({\r\n      resetAnswer: this.securityAnswerRef.current.value,\r\n      showSecurityQuestionDialog: false,\r\n      showPasswordResetDialog: true\r\n    });\r\n    this.securityAnswerRef.current.value = \"\"; //clear out field\r\n  };\r\n\r\n  //renderSecurityQuestionDialog -- Present a dialog box for user to enter answer\r\n  //to their security question.\r\n  renderSecurityQuestionDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Answer Security Question</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      resetEmail: \"\",\r\n                      resetQuestion: \"\",\r\n                      resetAnswer: \"\",\r\n                      showSecurityQuestionDialog: false\r\n                    });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleSecurityQuestionResponse}>\r\n                <label>\r\n                  Security Question:\r\n                  <textarea\r\n                    readOnly={true}\r\n                    value={this.state.resetQuestion}\r\n                    className=\"form-control form-text\"\r\n                    rows=\"3\"\r\n                    cols=\"35\"\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Security Answer:\r\n                  <textarea\r\n                    className=\"form-control form-text\"\r\n                    placeholder=\"Enter Security Question Answer\"\r\n                    ref={this.securityAnswerRef}\r\n                    rows=\"3\"\r\n                    cols=\"35\"\r\n                  />\r\n                </label>\r\n                <p></p>\r\n                <button\r\n                  role=\"submit\"\r\n                  className=\"loginBtn btn btn-primary btn-color-theme form-submit-btn\"\r\n                >\r\n                  <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //handleResetPassword: When the user clicks on the \"Reset Password\" dialog box\r\n  //button, we need check whether the passwords match. If they do,\r\n  //we reset the password and log the user in.\r\n  handleResetPassword = async event => {\r\n    event.preventDefault();\r\n    if (\r\n      this.resetPasswordRef.current.value !=\r\n      this.resetPasswordRepeatRef.current.value\r\n    ) {\r\n      alert(\"Sorry, The passwords you entered do not match. Please try again.\");\r\n      this.resetPasswordRepeatRef.current.select();\r\n      return;\r\n    }\r\n    const resetInfo = {\r\n      userId: this.state.resetEmail,\r\n      answer: this.state.resetAnswer,\r\n      newPassword: this.resetPasswordRef.current.value\r\n    };\r\n    const res = await fetch(\"/resetpassword\", {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(resetInfo)\r\n    });\r\n    const text = await res.text();\r\n    alert(text);\r\n    this.resetPasswordRef.current.value = \"\";\r\n    this.resetPasswordRepeatRef.current.value = \"\";\r\n    this.setState({ showPasswordResetDialog: false });\r\n  };\r\n\r\n  //renderPasswordResetDialog -- Present a dialog box for user to enter answer\r\n  //to their security question.\r\n  renderPasswordResetDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Reset Password</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      resetEmail: \"\",\r\n                      resetQuestion: \"\",\r\n                      resetAnswer: \"\",\r\n                      showPasswordResetDialog: false\r\n                    });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleResetPassword}>\r\n                <label>\r\n                  New Password:\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter new password\"\r\n                    pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                    className=\"form-control form-text\"\r\n                    ref={this.resetPasswordRef}\r\n                  />\r\n                </label>\r\n                &nbsp;&nbsp;\r\n                <label>\r\n                  Repeat New Password:\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Repeat new password\"\r\n                    className=\"form-control form-text\"\r\n                    ref={this.resetPasswordRepeatRef}\r\n                  />\r\n                </label>\r\n                &nbsp;&nbsp;\r\n                <button\r\n                  role=\"submit\"\r\n                  className=\"loginBtn btn btn-primary\r\n                  btn-block btncolortheme\"\r\n                >\r\n                  <span className=\"fa fa-key\"></span>&nbsp;Reset Password\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"login-mode-div\" className=\"padded-page\">\r\n        <center>\r\n          <form id=\"loginForm\" onSubmit={this.handleLoginSubmit}>\r\n            <p className=\"greeting\">Welcome To Your Recipe App</p>\r\n            <label htmlFor=\"emailInput\">\r\n              Email:\r\n              <input\r\n                ref={this.emailInputRef}\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                id=\"emailInput\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n              />\r\n            </label>\r\n            <p></p>\r\n            <label htmlFor=\"passwordInput\">\r\n              Password:\r\n              <input\r\n                ref={this.passwordInputRef}\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                id=\"passwordInput\"\r\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                required={true}\r\n              />\r\n            </label>\r\n            <p className=\"login-error-msg-text\">{this.state.loginMsg}</p>\r\n            <button\r\n              type=\"submit\"\r\n              id=\"loginBtn\"\r\n              className=\"loginBtn btn btn-primary\r\n             btn-block btncolortheme\"\r\n            >\r\n              <span id=\"loginBtnIcon\"></span>\r\n              Log In\r\n            </button>\r\n            <br />\r\n            <p>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn account-link\"\r\n                onClick={() => {\r\n                  this.setState({ showAccountDialog: true });\r\n                }}\r\n              >\r\n                Create an account\r\n              </button>{\" \"}\r\n              |\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn account-link\"\r\n                onClick={() => {\r\n                  this.setState({ showLookUpAccountDialog: true });\r\n                }}\r\n              >\r\n                Reset your password\r\n              </button>\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"loginBtn btn btn-primary\r\n              btn-block btncolortheme\"\r\n              onClick={() => this.handleOAuthLoginClick(\"google\")}\r\n            >\r\n              <span className={this.state.googleIcon}></span>&nbsp;\r\n              {this.state.googleLabel}\r\n            </button>\r\n          </form>\r\n          {this.state.showAccountDialog ? this.renderAccountDialog() : null}\r\n          {this.state.showLookUpAccountDialog\r\n            ? this.renderLookUpAccountDialog()\r\n            : null}\r\n          {this.state.showSecurityQuestionDialog\r\n            ? this.renderSecurityQuestionDialog()\r\n            : null}\r\n          {this.state.showPasswordResetDialog\r\n            ? this.renderPasswordResetDialog()\r\n            : null}\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\nclass FloatingButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a\r\n          className=\"floatbtn\"\r\n          onClick={this.props.menuOpen ? null : this.props.handleClick}\r\n        >\r\n          <span className={\"floatbtn-icon \" + this.props.icon}></span>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FloatingButton;\r\n","import React from \"react\";\r\nimport \"../styles/modal.css\";\r\nimport AppMode from \"../AppMode.js\";\r\n\r\nclass RecipesTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //confirmDelete state variable determines whether to show or hide the\r\n    //confirm delete dialog box\r\n    this.state = { confirmDelete: false };\r\n  }\r\n\r\n  //editbook -- Triggered when the user clicks the edit button for a given\r\n  //book. The id param is the unique property that identifies the book.\r\n  //Set the state variable representing the id of the book to be edited and\r\n  //then switch to the bookS_EDITbook mode to allow the user to edit the\r\n  //chosen book.\r\n  editBook = id => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.BOOKS_EDITBOOK);\r\n  };\r\n\r\n  //confirmDelete -- Triggered when the user clicks on the delete button\r\n  //associated with a given book. The id param is the unique property that\r\n  //identifies the book. Set the state variable representing the id\r\n  //of the item to be deleted and set the confirmDelete state variable to true\r\n  //to force a re-render with the confirm delete modal dialog box showing.\r\n  confirmDelete = id => {\r\n    this.props.setDeleteId(id);\r\n    this.setState({ confirmDelete: true });\r\n  };\r\n\r\n  //doDelete -- Triggered when the user clicks on the \"Yes Delete\" button in\r\n  //the confirm delete dialog box. Call upon parent component's deletebook to\r\n  //to actually performt he deletion of the book currently flagged for\r\n  //deletion and toggle the confirmDelete state variable to hide the confirm\r\n  //dialog box.\r\n  doDelete = () => {\r\n    this.props.deleteBook();\r\n    this.setState({ confirmDelete: false });\r\n  };\r\n\r\n  //cancelDelete -- Triggered when the user chooses to cancel a delete\r\n  //operation. We just need to update state to toggle confirmDelete to false\r\n  cancelDelete = () => {\r\n    this.props.setDeleteId(\"\");\r\n    this.setState({ confirmDelete: false });\r\n  };\r\n\r\n  // renderConfirmDeleteDialog: presents user with dialog to confirm deletion\r\n  // of book. Credit: https://getbootstrap.com/docs/4.0/components/modal/\r\n  renderConfirmDeleteDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <p className=\"modal-title\">Confirm Book Deletion</p>\r\n            <button className=\"close-modal-button\" onClick={this.cancelDelete}>\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <center>\r\n              <h4>Are you sure that you want to delete this book?</h4>\r\n            </center>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"loginBtn btn btn-primary btn-color-scheme\"\r\n                onClick={this.doDelete}\r\n              >\r\n                YES\r\n              </button>\r\n              <button\r\n                className=\"loginBtn btn btn-secondary\"\r\n                onClick={this.cancelDelete}\r\n              >\r\n                NO\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //renderTable -- render an HTML table displaying the books logged\r\n  //by the current user and providing buttons to view/edit and delete each book.\r\n  renderTable = () => {\r\n    let table = [];\r\n    for (let b = 0; b < this.props.books.length; ++b) {\r\n      table.push(\r\n        <tr key={b}>\r\n          <td>{this.props.books[b].bookName}</td>\r\n          <td>{this.props.books[b].author}</td>\r\n          <td>{this.props.books[b].genere}</td>\r\n          <td>{this.props.books[b].pages}</td>\r\n          <td>\r\n            <button\r\n              onClick={this.props.menuOpen ? null : () => this.editBook(b)}\r\n            >\r\n              <span className=\"fa fa-binoculars\"></span>\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button\r\n              onClick={this.props.menuOpen ? null : () => this.confirmDelete(b)}\r\n            >\r\n              <span className=\"fa fa-trash\"></span>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    return table;\r\n  };\r\n\r\n  //render--render the entire books table with header, displaying a \"No\r\n  //books Logged\" message in case the table is empty.\r\n  render() {\r\n    return (\r\n      <div className=\"paddedPage\">\r\n        <center>\r\n          <h1>Your Library</h1>\r\n        </center>\r\n\r\n        <table className=\"table table-hover booksTable\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Author</th>\r\n              <th scope=\"col\">Genere</th>\r\n              <th scope=\"col\">Pages</th>\r\n              <th scope=\"col\">View/Edit</th>\r\n              <th scope=\"col\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.keys(this.props.books).length === 0 ? (\r\n              <tr>\r\n                <td colSpan=\"6\" style={{ fontStyle: \"italic\" }}>\r\n                  No data recorded\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              this.renderTable()\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        {this.state.confirmDelete ? this.renderConfirmDeleteDialog() : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipesTable;\r\n","import React from \"react\";\r\nimport AppMode from \"../AppMode.js\";\r\n\r\n//bookForm -- this component presents a controlled form through which the user\r\n//can enter a new book or edit an existing book.\r\nclass RecipeForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (this.props.mode === AppMode.BOOKS_ADDBOOK) {\r\n      this.state = {\r\n        bookName: \"\",\r\n        author: \"\",\r\n        genere: \"Realistic Fiction\",\r\n        pages: null,\r\n        faIcon: \"fa fa-save\",\r\n        btnLabel: \"Save Book Data\"\r\n      };\r\n    } else {\r\n      this.state = this.props.startData;\r\n      this.state.faIcon = \"fa fa-edit\";\r\n      this.state.btnLabel = \"Update Book Data\";\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    const name = event.target.name;\r\n    console.log(\"event.target.select\");\r\n    console.log(event.target.select);\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  //handleSubmit -- When the user clicks on the button to save/update the\r\n  //book, start the spinner and invoke the parent component's savebook\r\n  //method to do the actual work. Note that savebook is set to the correct\r\n  //parent method based on whether the user is logging a new book or editing\r\n  //an existing book.\r\n  handleSubmit = event => {\r\n    //start spinner\r\n    this.setState({\r\n      faIcon: \"fa fa-spin fa-spinner\",\r\n      btnLabel:\r\n        this.props.mode === AppMode.BOOKS_ADDBOOK ? \"Saving...\" : \"Updating...\"\r\n    });\r\n    //Prepare current book data to be saved\r\n    let bookData = this.state;\r\n    delete bookData.faIcon;\r\n    delete bookData.btnLabel;\r\n    //call savebook on 1 second delay to show spinning icon\r\n    setTimeout(this.props.saveBook, 1000, bookData);\r\n    event.preventDefault();\r\n  };\r\n\r\n  //render -- renders the form to enter book data.\r\n  render() {\r\n    return (\r\n      <div className=\"paddedPage\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <p></p>\r\n          <center>\r\n            <label htmlFor=\"bookName\">\r\n              Book Name:\r\n              <input\r\n              value={this.state.bookName}\r\n                name=\"bookName\"\r\n                id=\"bookName\"\r\n                class=\"form-control form-center \"\r\n                type=\"text\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            &nbsp;\r\n            <label htmlFor=\"author\">\r\n              Author:\r\n              <input\r\n              value={this.state.author}\r\n                name=\"author\"\r\n                id=\"author\"\r\n                class=\"form-control form-center \"\r\n                type=\"text\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            &nbsp;\r\n            <label htmlFor=\"genere\">\r\n              Genere:\r\n              <select\r\n              value={this.state.genere}\r\n                name=\"genere\"\r\n                id=\"genere\"\r\n                class=\"form-control form-center \"\r\n                required\r\n                onChange={this.handleChange}\r\n              >\r\n                <option value=\"Realistic Fiction\">Realistic Fiction</option>\r\n                <option value=\"Non Fiction\">Non Fiction</option>\r\n                <option value=\"Mystery\">Mystery</option>\r\n                <option value=\"Other\">Other</option>\r\n              </select>\r\n            </label>\r\n            &nbsp;\r\n            <label htmlFor=\"numPages\">\r\n              Number of Pages:\r\n              <input\r\n              value={this.state.pages}\r\n                name=\"pages\"\r\n                ref={this.pagesRef}\r\n                id=\"numPages\"\r\n                class=\"form-control form-center\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"1000\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <p></p>\r\n            <button\r\n              id=\"submitBookBtn\"\r\n              type=\"submit\"\r\n              className=\"loginBtn btn btn-primary\r\n                    btn-block btncolortheme\"\r\n              style={{ width: \"230px\", fontSize: \"20px\", zindex: 110 }}\r\n            >\r\n              <span className={this.state.faIcon} />\r\n              &nbsp;{this.state.btnLabel}\r\n            </button>\r\n          </center>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeForm;\r\n","//books -- A parent component for the app's \"books\" mode.sidemenu-user\r\n//Manages the books data for the current user and conditionally renders the\r\n//appropriate books mode page based on App's mode, which is passed in as a\r\n//prop.\r\n\r\nimport React from \"react\";\r\nimport FloatingButton from \"./FloatingButton.js\";\r\nimport AppMode from \"../AppMode.js\";\r\nimport RecipesTable from \"./RecipesTable.js\";\r\nimport RecipeForm from \"./RecipeForm.js\";\r\n\r\nclass Recipes extends React.Component {\r\n  //Initialize a books object based on local storage\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      deleteId: \"\",\r\n      editId: \"\"\r\n    };\r\n  }\r\n\r\n  fetchBooks = async () => {\r\n    let url = \"/books/\" + this.props.user.id;\r\n    let res = await fetch(url, {method: 'GET'});\r\n    if (res.status != 200) {\r\n        let msg = await res.text();\r\n        alert(\"Sorry, there was an error obtaining books data for this user: \" + msg);\r\n        return;\r\n    } \r\n    let body = await res.json();\r\n    this.setState({books: JSON.parse(body)}, this.props.changeMode(AppMode.BOOKS));\r\n}\r\n\r\n  componentDidMount() {\r\n    this.fetchBooks();\r\n  }\r\n\r\n  //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n  //the user is considering deleting.\r\n  setDeleteId = val => {\r\n    this.setState({ deleteId: val });\r\n  };\r\n\r\n  //setEditId -- Capture in this.state.editId the unique id of the item\r\n  //the user is considering editing.\r\n  setEditId = val => {\r\n    this.setState({ editId: val });\r\n  };\r\n\r\n  //editbook -- Given an object newData containing updated data on an\r\n  //existing book, update the current user's book uniquely identified by\r\n  //this.state.editId, commit to local storage, reset editId to empty and\r\n  //toggle the mode back to AppMode.bookS since the user is done editing the\r\n  //book.\r\n  editBook = async newData => {\r\n    let url =\r\n      \"/books/\" +\r\n      this.props.user.id +\r\n      \"/\" +\r\n      this.state.books[this.state.editId]._id;\r\n    let res = await fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(newData)\r\n    });\r\n    let msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to update a book in the database: \" +\r\n          msg\r\n      );\r\n    } else {\r\n      //Push update into component state:\r\n      this.fetchBooks();\r\n    }\r\n  };\r\n\r\n  //deleteBook -- Delete the current user's book uniquely identified by\r\n  //this.state.deleteId, commit to local storage, and reset deleteId to empty.\r\n  deleteBook = async () => {\r\n    let url =\r\n      \"/books/\" +\r\n      this.props.user.id +\r\n      \"/\" +\r\n      this.state.books[this.state.deleteId]._id;\r\n    let res = await fetch(url, { method: \"DELETE\" });\r\n    let msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to delete book from database: \" + msg\r\n      );\r\n    } else {\r\n      //Push update into component state:\r\n      this.fetchBooks();\r\n    }\r\n  };\r\n\r\n  //addbook -- Given an object newData containing a new book, add the book\r\n  //to the current user's list of books, commit to local storage, and toggle\r\n  //the mode back to AppMode.bookS since the user is done adding a book.\r\n  addBook = async newData => {\r\n    const url = \"/books/\" + this.props.user.id;\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(newData)\r\n    });\r\n    const msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to add new book to database: \" + msg\r\n      );\r\n    } else {\r\n      //Push update into component state:\r\n      this.fetchBooks();\r\n    }\r\n  };\r\n\r\n  //render -- Conditionally render the books mode page as either the books\r\n  //table, the books form set to obtain a new book, or the books form set\r\n  //to edit an existing book.\r\n  render() {\r\n    switch (this.props.mode) {\r\n      case AppMode.BOOKS:\r\n        return (\r\n          <React.Fragment>\r\n            <RecipesTable\r\n              books={this.state.books}\r\n              setEditId={this.setEditId}\r\n              setDeleteId={this.setDeleteId}\r\n              deleteBook={this.deleteBook}\r\n              changeMode={this.props.changeMode}\r\n              menuOpen={this.props.menuOpen}\r\n            />\r\n            <FloatingButton\r\n              handleClick={() => this.props.changeMode(AppMode.BOOKS_ADDBOOK)}\r\n              menuOpen={this.props.menuOpen}\r\n              icon={\"fa fa-plus\"}\r\n            />\r\n          </React.Fragment>\r\n        );\r\n      case AppMode.BOOKS_ADDBOOK:\r\n        return <RecipeForm mode={this.props.mode} saveBook={this.addBook} />;\r\n      case AppMode.BOOKS_EDITBOOK:\r\n        return (\r\n          <RecipeForm\r\n            mode={this.props.mode}\r\n            startData={this.state.books[this.state.editId]}\r\n            saveBook={this.editBook}\r\n          />\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Recipes;\r\n","import React from \"react\";\r\n\r\nclass PantryPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"paddedPage center\">\r\n        <h1 align=\"center\">Reviews</h1>\r\n        <center>\r\n          <h2>This page is under construction.</h2>\r\n          <i className=\"fa fa-book reviewsIcon\"></i>\r\n          <br />\r\n          <p>&copy; 2020 Your Library. All rights reserved.</p>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PantryPage;\r\n","import React from \"react\";\r\nimport NavBar from \"./NavBar.js\";\r\nimport SideMenu from \"./SideMenu.js\";\r\nimport ModeBar from \"./ModeBar.js\";\r\nimport LoginPage from \"./LoginPage.js\";\r\nimport Recipes from \"./Recipes.js\";\r\nimport PantryPage from \"./PantryPage.js\";\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome to Your Library\";\r\nmodeTitle[AppMode.RECIPES] = \"Your Recipes\";\r\nmodeTitle[AppMode.RECIPES_ADDBOOK] = \"Add New Recipe\";\r\nmodeTitle[AppMode.RECIPES_EDITBOOK] = \"Edit Recipe\";\r\nmodeTitle[AppMode.REVIEWS] = \"Reviews\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.RECIPES] = Recipes;\r\nmodeToPage[AppMode.RECIPES_ADDBOOK] = Recipes;\r\nmodeToPage[AppMode.RECIPES_EDITBOOK] = Recipes;\r\nmodeToPage[AppMode.PANTRY] = PantryPage;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: AppMode.LOGIN,\r\n      menuOpen: false,\r\n      user: \"\",\r\n      showAbout: false,\r\n      authenticated: false\r\n    };\r\n  }\r\n\r\n  handleChangeMode = newMode => {\r\n    this.setState({ mode: newMode });\r\n  };\r\n\r\n  openMenu = () => {\r\n    this.setState({ menuOpen: true });\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({ menuOpen: false });\r\n  };\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({ menuOpen: !prevState.menuOpen }));\r\n  };\r\n\r\n  setUser = (userObj) => {\r\n    this.setState({ user: userObj });\r\n  };\r\n\r\n   //setAuthenticated -- Given auth (true or false), update authentication state.\r\n   setAuthenticated = (auth) => {\r\n    this.setState({authenticated: auth});\r\n  }\r\n\r\n  //When App component mounts, add a window-level click handler to close the\r\n  //side menu if it is open. This event should fire only if no other lower-level\r\n  //events intercept the click.\r\n  componentDidMount() {\r\n    window.addEventListener(\"click\", this.handleClick);\r\n\r\n    if (!this.state.authenticated) {\r\n      //Use /auth/test route to (re)-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then(response => response.json())\r\n        .then(obj => {\r\n          if (obj.isAuthenticated) {\r\n            let data = JSON.parse(localStorage.getItem(\"yourRecipeUserData\"));\r\n            if (data == null) {\r\n              data = {}; //create empty database (localStorage)\r\n            }\r\n\r\n            if (!data.hasOwnProperty(obj.user.id)) {\r\n              //create new user with this id in database (localStorage)\r\n              data[obj.user.id] = {\r\n                accountInfo: {\r\n                  provider: obj.user.provider,\r\n                  password: \"\",\r\n                  securityQuestion: \"\",\r\n                  securityAnswer: \"\"\r\n                },\r\n\r\n                Recipes: {},\r\n              };\r\n\r\n              //Commit to localStorage:\r\n              localStorage.setItem(\"yourLibraryUserData\", JSON.stringify(data));\r\n            }\r\n\r\n            //Update current user\r\n            this.setState({\r\n              authenticated: true,\r\n              user: obj.user,\r\n              mode: AppMode.RECIPES //We're authenticated so can get into the app.\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  //We remove the event listener when the component\r\n  //unmounts. This is a best practice.\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"click\", this.handleClick);\r\n  }\r\n\r\n  //When the user clicks anywhere on the app and the menu is open, close it.\r\n  //This function takes advantage of event bubbling.\r\n  handleClick = event => {\r\n    if (this.state.menuOpen) {\r\n      this.closeMenu();\r\n    }\r\n    event.stopPropagation();\r\n  };\r\n\r\n  toggleAbout = () => {\r\n    this.setState(prevState => ({ showAbout: !prevState.showAbout }));\r\n  };\r\n\r\n  renderAbout = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>About Your Recipe App</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={this.toggleAbout}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body \">\r\n              <center>\r\n                <img\r\n                  src={require(\"./books.jpg\")}\r\n                  height=\"280px\"\r\n                  width=\"370px\"\r\n                  className=\"aboutBody\"\r\n                />\r\n                <h3>Build Your Own Personal Library!</h3>\r\n                <p>\r\n                  <em>\r\n                    Version 1 (Live), Build 20.6.2018 <br />\r\n                    &copy; 2020 Madeline Anderson. All rights reserved.\r\n                  </em>\r\n                </p>\r\n              </center>\r\n              <p>\r\n                <b>Your Library app supports</b>\r\n              </p>\r\n              <ul className=\"yourRecipesSupports\">\r\n                <li>Adding and removing RECIPES in your personal library</li>\r\n                <li>Viewing your library</li>\r\n              </ul>\r\n              <p>\r\n                Your Library was first developed by Madeline Anderson, a\r\n                Computer Science Major at Washington State University. She is\r\n                currently a Junior, Developing this for CptS 489. She is an\r\n                intern at SEL in Pullman.\r\n              </p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"loginBtn btn btn-primary btn-color-theme\"\r\n                onClick={this.toggleAbout}\r\n              >\r\n                OK\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div onClick={this.handleClick}>\r\n        {this.state.mode != AppMode.LOGIN &&\r\n          <NavBar\r\n          title={modeTitle[this.state.mode]}\r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}\r\n        />}\r\n        <SideMenu\r\n          mode={this.state.mode}\r\n          menuOpen={this.state.menuOpen}\r\n          changeMode={this.handleChangeMode}\r\n          user={this.state.user}\r\n          showAbout={this.toggleAbout}\r\n        />\r\n        <ModeBar\r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n        />\r\n        <ModePage\r\n          menuOpen={this.state.menuOpen}\r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          setAuthenticated={this.setAuthenticated}\r\n          user={this.state.user}\r\n          setUser={this.setUser}\r\n        />\r\n        {this.state.showAbout ? this.renderAbout() : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './styles/index.css';\nimport './styles/modal.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}