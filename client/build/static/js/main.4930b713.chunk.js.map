{"version":3,"sources":["styles/pancakes.jpg","AppMode.js","components/NavBar.js","md5.js","components/LoginPage.js","components/FloatingButton.js","components/RecipesTable.js","components/RecipeForm.js","components/Recipes.js","components/PantryPage.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","AppMode","LOGIN","RECIPES","RECIPES_ADDRECIPE","RECIPES_EDITRECIPE","PANTRY","Object","freeze","NavBar","Nav","className","Item","Link","this","props","mode","onClick","changeMode","Dropdown","as","NavItem","Toggle","src","user","profileImageURL","height","width","Menu","disabled","displayName","showAbout","Divider","React","Component","md5cycle","x","k","a","b","c","d","ff","gg","hh","ii","add32","cmn","q","s","t","md5blk","i","md5blks","charCodeAt","hex_chr","split","rhex","n","j","md5","length","join","hex","state","substring","tail","md51","LoginPage","handleLogin","setState","loginBtnIcon","loginBtnLabel","setUser","id","emailInputRef","current","value","username","provider","setAuthenticated","console","log","Recipes","handleLoginSubmit","event","preventDefault","url","passwordInputRef","fetch","method","res","status","window","open","text","resText","loginMsg","setTimeout","hideErrorMsg","handleOAuthLogin","handleOAuthLoginClick","checkAccountValidity","accountPassword","accountPasswordRepeat","repeatPassRef","setCustomValidity","handleNewAccountChange","target","name","handleCreateAccount","accountName","loginInfo","password","securityQuestion","accountSecurityQuestion","securityAnswer","accountSecurityAnswer","headers","body","JSON","stringify","alert","showAccountDialog","renderAccountDialog","role","onSubmit","type","size","placeholder","pattern","ref","newUserRef","required","onChange","rows","cols","maxLength","handleLookUpAccount","accountEmailRef","focus","json","parse","resetEmail","resetQuestion","resetAnswer","showLookUpAccountDialog","showSecurityQuestionDialog","renderLookUpAccountDialog","handleSecurityQuestionResponse","securityAnswerRef","select","showPasswordResetDialog","renderSecurityQuestionDialog","readOnly","handleResetPassword","resetPasswordRef","resetPasswordRepeatRef","resetInfo","renderPasswordResetDialog","createRef","googleIcon","googleLabel","htmlFor","FloatingButton","handleClick","icon","RecipesTable","editRecipe","setEditId","confirmDelete","setDeleteId","doDelete","deleteRecipe","cancelDelete","renderConfirmDeleteDialog","renderTable","table","push","key","recipes","cookTime","menuOpen","scope","keys","colSpan","style","fontStyle","RecipeForm","handleChange","handleSubmit","faIcon","btnLabel","recipeData","saveRecipe","ingredients","directions","pictureURL","dateAdded","favorited","startData","e","index","splice","class","map","step","handleChange3","handleRemove2","addIngredient","handleChange2","handleRemove","addDirection","fontSize","zindex","fetchRecipes","msg","val","deleteId","editId","newData","_id","Accept","addRecipe","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","Fragment","PantryPage","align","modeTitle","REVIEWS","modeToPage","App","handleChangeMode","newMode","openMenu","closeMenu","toggleMenuOpen","prevState","userObj","auth","authenticated","stopPropagation","toggleAbout","renderAbout","require","addEventListener","then","response","obj","isAuthenticated","data","localStorage","getItem","hasOwnProperty","accountInfo","setItem","removeEventListener","ModePage","title","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4930b713.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pancakes.305293f5.jpg\";","/* AppMode: The enumerated type for AppMode. If we were using TypeScript, we could\r\nuse the predefined enum type; see\r\nhttps://www.typescriptlang.org/docs/handbook/enums.html. Declaring an enumerated\r\ntype as a JavaScript object has important limitations (see\r\nhttps://stackoverflow.com/questions/287903/what-is-the-preferred-syntax-for-defining-enums-in-javascript),\r\nbut it will do for our purposes*/\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    RECIPES: \"RecipeMode\",\r\n    RECIPES_ADDRECIPE: \"RecipeMode-AddRecipe\",\r\n    RECIPES_EDITRECIPE: \"RecipeMode-EditRecipe\",\r\n    PANTRY: \"PantryMode\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from \"react\";\r\nimport AppMode from \"../AppMode.js\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { NavItem } from \"react-bootstrap\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport {NavDropdown, Form, FormControl, Button} from 'react-bootstrap';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Nav className=\"navbar-base\">\r\n        &nbsp;\r\n        <Nav.Item className=\"navbar-brand-custom\">\r\n          <span className=\"modebar-icon fa fa-th-list\"></span>\r\n          &nbsp;&nbsp;&nbsp;My Recipe App\r\n        </Nav.Item>\r\n\r\n          <div className=\"navbar-items ml-auto\">\r\n            <Nav.Item>\r\n              <Nav.Link\r\n                className={\r\n                  this.props.mode == AppMode.RECIPES\r\n                    ? \"navlink navlink-selected\"\r\n                    : \"navlink\"\r\n                }\r\n                onClick={() => this.props.changeMode(AppMode.RECIPES)}\r\n              >\r\n                Recipe List\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <Nav.Link\r\n                onClick={() => this.props.changeMode(AppMode.PANTRY)}\r\n                className={\r\n                  this.props.mode == AppMode.PANTRY\r\n                    ? \"navlink navlink-grocery navlink-selected\"\r\n                    : \"navlink navlink-grocery\"\r\n                }\r\n              >\r\n                Groccery Management\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Dropdown as={NavItem}>\r\n              <Dropdown.Toggle as={NavItem}>\r\n                <img\r\n                  src={this.props.user.profileImageURL}\r\n                  height=\"40\"\r\n                  width=\"40\"\r\n                />\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item disabled>\r\n                  Logged In as <b>{this.props.user.displayName}</b>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={this.props.showAbout}>\r\n                  About Recipe App\r\n                </Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item\r\n                  onClick={() => this.props.changeMode(AppMode.LOGIN)}\r\n                >\r\n                  Log Out\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","function md5cycle(x, k) {\r\n    var a = x[0], b = x[1], c = x[2], d = x[3];\r\n    \r\n    a = ff(a, b, c, d, k[0], 7, -680876936);\r\n    d = ff(d, a, b, c, k[1], 12, -389564586);\r\n    c = ff(c, d, a, b, k[2], 17,  606105819);\r\n    b = ff(b, c, d, a, k[3], 22, -1044525330);\r\n    a = ff(a, b, c, d, k[4], 7, -176418897);\r\n    d = ff(d, a, b, c, k[5], 12,  1200080426);\r\n    c = ff(c, d, a, b, k[6], 17, -1473231341);\r\n    b = ff(b, c, d, a, k[7], 22, -45705983);\r\n    a = ff(a, b, c, d, k[8], 7,  1770035416);\r\n    d = ff(d, a, b, c, k[9], 12, -1958414417);\r\n    c = ff(c, d, a, b, k[10], 17, -42063);\r\n    b = ff(b, c, d, a, k[11], 22, -1990404162);\r\n    a = ff(a, b, c, d, k[12], 7,  1804603682);\r\n    d = ff(d, a, b, c, k[13], 12, -40341101);\r\n    c = ff(c, d, a, b, k[14], 17, -1502002290);\r\n    b = ff(b, c, d, a, k[15], 22,  1236535329);\r\n    \r\n    a = gg(a, b, c, d, k[1], 5, -165796510);\r\n    d = gg(d, a, b, c, k[6], 9, -1069501632);\r\n    c = gg(c, d, a, b, k[11], 14,  643717713);\r\n    b = gg(b, c, d, a, k[0], 20, -373897302);\r\n    a = gg(a, b, c, d, k[5], 5, -701558691);\r\n    d = gg(d, a, b, c, k[10], 9,  38016083);\r\n    c = gg(c, d, a, b, k[15], 14, -660478335);\r\n    b = gg(b, c, d, a, k[4], 20, -405537848);\r\n    a = gg(a, b, c, d, k[9], 5,  568446438);\r\n    d = gg(d, a, b, c, k[14], 9, -1019803690);\r\n    c = gg(c, d, a, b, k[3], 14, -187363961);\r\n    b = gg(b, c, d, a, k[8], 20,  1163531501);\r\n    a = gg(a, b, c, d, k[13], 5, -1444681467);\r\n    d = gg(d, a, b, c, k[2], 9, -51403784);\r\n    c = gg(c, d, a, b, k[7], 14,  1735328473);\r\n    b = gg(b, c, d, a, k[12], 20, -1926607734);\r\n    \r\n    a = hh(a, b, c, d, k[5], 4, -378558);\r\n    d = hh(d, a, b, c, k[8], 11, -2022574463);\r\n    c = hh(c, d, a, b, k[11], 16,  1839030562);\r\n    b = hh(b, c, d, a, k[14], 23, -35309556);\r\n    a = hh(a, b, c, d, k[1], 4, -1530992060);\r\n    d = hh(d, a, b, c, k[4], 11,  1272893353);\r\n    c = hh(c, d, a, b, k[7], 16, -155497632);\r\n    b = hh(b, c, d, a, k[10], 23, -1094730640);\r\n    a = hh(a, b, c, d, k[13], 4,  681279174);\r\n    d = hh(d, a, b, c, k[0], 11, -358537222);\r\n    c = hh(c, d, a, b, k[3], 16, -722521979);\r\n    b = hh(b, c, d, a, k[6], 23,  76029189);\r\n    a = hh(a, b, c, d, k[9], 4, -640364487);\r\n    d = hh(d, a, b, c, k[12], 11, -421815835);\r\n    c = hh(c, d, a, b, k[15], 16,  530742520);\r\n    b = hh(b, c, d, a, k[2], 23, -995338651);\r\n    \r\n    a = ii(a, b, c, d, k[0], 6, -198630844);\r\n    d = ii(d, a, b, c, k[7], 10,  1126891415);\r\n    c = ii(c, d, a, b, k[14], 15, -1416354905);\r\n    b = ii(b, c, d, a, k[5], 21, -57434055);\r\n    a = ii(a, b, c, d, k[12], 6,  1700485571);\r\n    d = ii(d, a, b, c, k[3], 10, -1894986606);\r\n    c = ii(c, d, a, b, k[10], 15, -1051523);\r\n    b = ii(b, c, d, a, k[1], 21, -2054922799);\r\n    a = ii(a, b, c, d, k[8], 6,  1873313359);\r\n    d = ii(d, a, b, c, k[15], 10, -30611744);\r\n    c = ii(c, d, a, b, k[6], 15, -1560198380);\r\n    b = ii(b, c, d, a, k[13], 21,  1309151649);\r\n    a = ii(a, b, c, d, k[4], 6, -145523070);\r\n    d = ii(d, a, b, c, k[11], 10, -1120210379);\r\n    c = ii(c, d, a, b, k[2], 15,  718787259);\r\n    b = ii(b, c, d, a, k[9], 21, -343485551);\r\n    \r\n    x[0] = add32(a, x[0]);\r\n    x[1] = add32(b, x[1]);\r\n    x[2] = add32(c, x[2]);\r\n    x[3] = add32(d, x[3]);\r\n    \r\n    }\r\n    \r\n    function cmn(q, a, b, x, s, t) {\r\n    a = add32(add32(a, q), add32(x, t));\r\n    return add32((a << s) | (a >>> (32 - s)), b);\r\n    }\r\n    \r\n    function ff(a, b, c, d, x, s, t) {\r\n    return cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n    }\r\n    \r\n    function gg(a, b, c, d, x, s, t) {\r\n    return cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n    }\r\n    \r\n    function hh(a, b, c, d, x, s, t) {\r\n    return cmn(b ^ c ^ d, a, b, x, s, t);\r\n    }\r\n    \r\n    function ii(a, b, c, d, x, s, t) {\r\n    return cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n    }\r\n    \r\n    function md51(s) {\r\n    var txt = '';\r\n    var n = s.length,\r\n    state = [1732584193, -271733879, -1732584194, 271733878], i;\r\n    for (i=64; i<=s.length; i+=64) {\r\n    md5cycle(state, md5blk(s.substring(i-64, i)));\r\n    }\r\n    s = s.substring(i-64);\r\n    var tail = [0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0];\r\n    for (i=0; i<s.length; i++)\r\n    tail[i>>2] |= s.charCodeAt(i) << ((i%4) << 3);\r\n    tail[i>>2] |= 0x80 << ((i%4) << 3);\r\n    if (i > 55) {\r\n    md5cycle(state, tail);\r\n    for (i=0; i<16; i++) tail[i] = 0;\r\n    }\r\n    tail[14] = n*8;\r\n    md5cycle(state, tail);\r\n    return state;\r\n    }\r\n    \r\n    /* there needs to be support for Unicode here,\r\n     * unless we pretend that we can redefine the MD-5\r\n     * algorithm for multi-byte characters (perhaps\r\n     * by adding every four 16-bit characters and\r\n     * shortening the sum to 32 bits). Otherwise\r\n     * I suggest performing MD-5 as if every character\r\n     * was two bytes--e.g., 0040 0025 = @%--but then\r\n     * how will an ordinary MD-5 sum be matched?\r\n     * There is no way to standardize text to something\r\n     * like UTF-8 before transformation; speed cost is\r\n     * utterly prohibitive. The JavaScript standard\r\n     * itself needs to look at this: it should start\r\n     * providing access to strings as preformed UTF-8\r\n     * 8-bit unsigned value arrays.\r\n     */\r\n    function md5blk(s) { /* I figured global was faster.   */\r\n    var md5blks = [], i; /* Andy King said do it this way. */\r\n    for (i=0; i<64; i+=4) {\r\n    md5blks[i>>2] = s.charCodeAt(i)\r\n    + (s.charCodeAt(i+1) << 8)\r\n    + (s.charCodeAt(i+2) << 16)\r\n    + (s.charCodeAt(i+3) << 24);\r\n    }\r\n    return md5blks;\r\n    }\r\n    \r\n    var hex_chr = '0123456789abcdef'.split('');\r\n    \r\n    function rhex(n)\r\n    {\r\n    var s='', j=0;\r\n    for(; j<4; j++)\r\n    s += hex_chr[(n >> (j * 8 + 4)) & 0x0F]\r\n    + hex_chr[(n >> (j * 8)) & 0x0F];\r\n    return s;\r\n    }\r\n    \r\n    function hex(x) {\r\n    for (var i=0; i<x.length; i++)\r\n    x[i] = rhex(x[i]);\r\n    return x.join('');\r\n    }\r\n    \r\n    export default function md5(s) {\r\n      return hex(md51(s));\r\n    }\r\n    \r\n    /* this function is much faster,\r\n    so if possible we use it. Some IEs\r\n    are the only ones I know of that\r\n    need the idiotic second function,\r\n    generated by an if clause.  */\r\n    \r\n    function add32(a, b) {\r\n    return (a + b) & 0xFFFFFFFF;\r\n    }\r\n    \r\n    if (md5('hello') != '5d41402abc4b2a76b9719d911017c592') {\r\n    function add32(x, y) {\r\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF),\r\n    msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xFFFF);\r\n    }\r\n    }","import React from \"react\";\r\nimport AppMode from \"./../AppMode.js\";\r\nimport md5 from \"../md5.js\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Create a ref for the email input DOM element\r\n    this.emailInputRef = React.createRef();\r\n    this.passwordInputRef = React.createRef();\r\n    this.repeatPassRef = React.createRef();\r\n    this.newUserRef = React.createRef();\r\n    this.accountEmailRef = React.createRef();\r\n    this.securityAnswerRef = React.createRef();\r\n    this.resetPasswordRef = React.createRef();\r\n    this.resetPasswordRepeatRef = React.createRef();\r\n    this.state = {\r\n      loginBtnIcon: \"fa fa-sign-in\",\r\n      loginBtnLabel: \"Log In\",\r\n      googleIcon: \"fa fa-google\",\r\n      googleLabel: \"Sign in with Google\",\r\n      showAccountDialog: false,\r\n      showLookUpAccountDialog: false,\r\n      showSecurityQuestionDialog: false,\r\n      showPasswordResetDialog: false,\r\n      resetEmail: \"\",\r\n      resetQuestion: \"\",\r\n      resetAnswer: \"\",\r\n      accountName: \"\",\r\n      accountPassword: \"\",\r\n      accountPasswordRepeat: \"\",\r\n      accountSecurityQuestion: \"\",\r\n      accountSecurityAnswer: \"\"\r\n    };\r\n  }\r\n\r\n  //Focus cursor in email input field when mounted\r\n  componentDidMount() {\r\n    this.emailInputRef.current.focus();\r\n  }\r\n\r\n  //handleLogin -- Callback function that sets up initial app state upon login.\r\n  handleLogin = () => {\r\n    //Stop spinner and set authStrategy to local\r\n    this.setState({ loginBtnIcon: \"fa fa-sign-in\", loginBtnLabel: \"Log In\" });\r\n    //Set current user in parent component\r\n    //With local authentication all we have is an email\r\n    //address; we do not have additional info\r\n    //We'll grab profile pic from the gravatar service. User can create account\r\n    //at http://gravatar.com and define their profile pic.\r\n    this.props.setUser({\r\n      id: this.emailInputRef.current.value,\r\n      username: this.emailInputRef.current.value,\r\n      provider: \"local\",\r\n      profileImageURL: `https://www.gravatar.com/avatar/${md5(\r\n        this.emailInputRef.current.value\r\n      )}`\r\n    });\r\n    //Set authenticated state in parent component\r\n    this.props.setAuthenticated(true);\r\n    console.log(this.props.user.username);\r\n    //Trigger switch to FEED mode (default app landing page)\r\n    this.props.changeMode(AppMode.Recipes);\r\n  };\r\n\r\n  //handleLoginSubmit -- Called when user clicks on login button. Initiate spinner\r\n  //for 1 second and call handleLogin to do the work.\r\n  handleLoginSubmit = async event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n      loginBtnLabel: \"Logging In...\"\r\n    });\r\n\r\n    const url =\r\n      \"/auth/login?username=\" +\r\n      this.emailInputRef.current.value +\r\n      \"&password=\" +\r\n      this.passwordInputRef.current.value;\r\n    const res = await fetch(url, { method: \"POST\" });\r\n    if (res.status == 200) {\r\n      //successful login!\r\n      //Force componentDidMount to execute.\r\n      //authenticated state will be updated and\r\n      //Session will be deserialized.\r\n      window.open(\"/\", \"_self\");\r\n    } else {\r\n      //Unsuccessful login\r\n      //Grab textual error message\r\n      const resText = await res.text();\r\n      //Display error message for 3 seconds and invite another login attempt\r\n      this.setState(\r\n        {\r\n          loginBtnIcon: \"fa fa-sign-in\",\r\n          loginBtnLabel: \"Log In\",\r\n          loginMsg: resText\r\n        },\r\n        () => setTimeout(this.hideErrorMsg, 3000)\r\n      );\r\n    }\r\n  };\r\n\r\n  hideErrorMsg = () => {\r\n    this.emailInputRef.current.value = \"\";\r\n    this.passwordInputRef.current.value = \"\";\r\n    this.setState({ loginMsg: \"\" });\r\n  };\r\n\r\n  //handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n  //provider\r\n\r\n  handleOAuthLogin = provider => {\r\n    window.open(`/auth/${provider}`, \"_self\");\r\n  };\r\n\r\n  //handleOAuthLoginClick -- Called whent the user clicks on button to\r\n  //authenticate via a third-party OAuth service. The name of the provider is\r\n  //passed in as a parameter.\r\n\r\n  handleOAuthLoginClick = provider => {\r\n    this.setState({\r\n      [provider + \"Icon\"]: \"fa fa-spin fa-spinner\",\r\n\r\n      [provider + \"Label\"]: \"Connecting...\"\r\n    });\r\n\r\n    setTimeout(() => this.handleOAuthLogin(provider), 1000);\r\n  };\r\n\r\n  //checkAccountValidity -- Callback function invoked after a form element in\r\n  //the 'Create Account' dialog box changes and component state has been\r\n  //updated. We need to check whether the passwords match and whether an\r\n  //account is already associated with the email address entered. If so, we\r\n  //set a custom validity message to be displayed when the user clicks the\r\n  //'Create Account' button. Otherwise, we reset the custom validity message\r\n  //to empty so that it will NOT fire when the user clicks 'Create Account'.\r\n  checkAccountValidity = () => {\r\n    if (this.state.accountPassword != this.state.accountPasswordRepeat) {\r\n      //Passwords don't match\r\n      this.repeatPassRef.current.setCustomValidity(\r\n        \"This password must match original password.\"\r\n      );\r\n    } else {\r\n      this.repeatPassRef.current.setCustomValidity(\"\");\r\n    }\r\n    // let data = JSON.parse(localStorage.getItem(\"yourLibraryUserData\"));\r\n    // if (data != null && data.hasOwnProperty(this.state.accountName)) {\r\n    //   //The user name is already taken\r\n    //   this.newUserRef.current.setCustomValidity(\r\n    //     \"An account already exists under this email address. Use 'Reset password' to recover the password.\"\r\n    //   );\r\n    // } else {\r\n    //   this.newUserRef.current.setCustomValidity(\"\");\r\n    // }\r\n  };\r\n\r\n  //handleNewAccountChange -- Called when a field in a dialog box form changes.\r\n  //Update corresponding state variable and potentially update the custom\r\n  //message.\r\n  handleNewAccountChange = event => {\r\n    this.setState(\r\n      { [event.target.name]: event.target.value },\r\n      this.checkAccountValidity\r\n    );\r\n  };\r\n\r\n  handleCreateAccount = async event => {\r\n    event.preventDefault();\r\n    const url = '/users/' + this.state.accountName;\r\n\r\n    const loginInfo = {\r\n        password: this.state.accountPassword,\r\n        securityQuestion: this.state.accountSecurityQuestion,\r\n        securityAnswer: this.state.accountSecurityAnswer\r\n    };\r\n\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        'Accept': \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(loginInfo)\r\n    });\r\n    if (res.status == 200) {\r\n      //successful account creation!\r\n      alert(\r\n        \"Your account was successfully created. Please log in using your email and password to continue.\"\r\n      );\r\n      this.setState({ showAccountDialog: false });\r\n    } else {\r\n      //Unsuccessful account creation\r\n      //Grab textual error message\r\n      const resText = await res.text();\r\n      alert(resText); //most likely the username is already taken\r\n    }\r\n  };\r\n\r\n  renderAccountDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Create New Account</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({ showAccountDialog: false });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleCreateAccount}>\r\n                <label>\r\n                  Email:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountName\"\r\n                    type=\"email\"\r\n                    size=\"35\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                    ref={this.newUserRef}\r\n                    required={true}\r\n                    value={this.state.accountName}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n\r\n                <label>\r\n                  Password:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountPassword\"\r\n                    type=\"password\"\r\n                    size=\"35\"\r\n                    placeholder=\"Enter Password\"\r\n                    pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                    required={true}\r\n                    ref={this.repeatPassRef}\r\n                    value={this.state.accountPassword}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n\r\n                <label>\r\n                  Repeat Password:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountPasswordRepeat\"\r\n                    type=\"password\"\r\n                    size=\"35\"\r\n                    placeholder=\"Repeat Password\"\r\n                    required={true}\r\n                    ref={this.repeatPassRef}\r\n                    value={this.state.accountPasswordRepeat}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n\r\n                <label>\r\n                  Security Question:\r\n                  <textarea\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountSecurityQuestion\"\r\n                    size=\"35\"\r\n                    placeholder=\"Security Question\"\r\n                    rows=\"2\"\r\n                    cols=\"35\"\r\n                    maxLength=\"100\"\r\n                    required={true}\r\n                    value={this.state.accountSecurityQuestion}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Answer to Security Question:\r\n                  <textarea\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountSecurityAnswer\"\r\n                    type=\"text\"\r\n                    placeholder=\"Answer\"\r\n                    rows=\"2\"\r\n                    cols=\"35\"\r\n                    maxLength=\"100\"\r\n                    required={true}\r\n                    value={this.state.accountSecurityAnswer}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n                <button\r\n                  role=\"submit\"\r\n                  className=\"loginBtn btn btn-primary\r\n                  btn-block btncolortheme\"\r\n                >\r\n                  <span className=\"fa fa-user-plus\"></span>&nbsp;Create Account\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\r\n  //button, we check whether the account exists. If it does, we update the state,\r\n  //setting the resetEmail var to the email entered, hiding the current dialog box\r\n  //and showing the security question dialog box.\r\n  handleLookUpAccount = async event => {\r\n    event.preventDefault();\r\n    let url = \"/users/\" + this.accountEmailRef.current.value;\r\n    let res = await fetch(url, { method: \"GET\" });\r\n    let body;\r\n    if (res.status != 200) {\r\n      alert(\"Sorry, there is no account associated with this email address.\");\r\n      this.accountEmailRef.current.focus();\r\n      return;\r\n    }\r\n    body = await res.json();\r\n    body = JSON.parse(body);\r\n    alert(\"Body: \" + body)\r\n    //if here, account exists -- user account info and push to state vars\r\n    this.setState({resetEmail: this.accountEmailRef.current.value, \r\n                   resetQuestion:  body.securityQuestion,\r\n                   resetAnswer: body.securityAnswer,\r\n                   showLookUpAccountDialog: false, \r\n                   showSecurityQuestionDialog: true});\r\n    this.emailInputRef.current.value = \"\"; //clear out field\r\n  };\r\n\r\n  //renderLookUpAccountDialog -- Present a dialog box for user to enter the email address\r\n  //associated with their account in case where they want to reset password\r\n  renderLookUpAccountDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Look Up Account</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({ showLookUpAccountDialog: false });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleLookUpAccount}>\r\n                <label>\r\n                  Account Email Address:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    type=\"email\"\r\n                    size=\"35\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                    ref={this.accountEmailRef}\r\n                    required={true}\r\n                  />\r\n                </label>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"loginBtn btn btn-primary\r\n                  btn-block btncolortheme\"\r\n                >\r\n                  <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //handleSecurityQuestionResponse: When the user clicks on the \"Check Answer\" dialog box\r\n  //button, we check whether the security question answer is correct. If it is,\r\n  //present dialog box for resetting the password.\r\n  handleSecurityQuestionResponse = async event => {\r\n    event.preventDefault();\r\n    if (this.securityAnswerRef.current.value != this.state.resetAnswer) {\r\n      alert(\"Sorry, that is not the correct answer to the security question.\");\r\n      this.securityAnswerRef.current.select();\r\n      return;\r\n    } \r\n    this.setState({showSecurityQuestionDialog: false, \r\n                showPasswordResetDialog: true});\r\n    this.securityAnswerRef.current.value = \"\"; //clear out field\r\n  };\r\n\r\n  //renderSecurityQuestionDialog -- Present a dialog box for user to enter answer\r\n  //to their security question.\r\n  renderSecurityQuestionDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Answer Security Question</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      resetEmail: \"\",\r\n                      resetQuestion: \"\",\r\n                      resetAnswer: \"\",\r\n                      showSecurityQuestionDialog: false\r\n                    });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleSecurityQuestionResponse}>\r\n                <label>\r\n                  Security Question:\r\n                  <textarea\r\n                    readOnly={true}\r\n                    value={this.state.resetQuestion}\r\n                    className=\"form-control form-text\"\r\n                    rows=\"3\"\r\n                    cols=\"35\"\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Security Answer:\r\n                  <textarea\r\n                    className=\"form-control form-text\"\r\n                    placeholder=\"Enter Security Question Answer\"\r\n                    ref={this.securityAnswerRef}\r\n                    rows=\"3\"\r\n                    cols=\"35\"\r\n                  />\r\n                </label>\r\n                <p></p>\r\n                <button\r\n                  role=\"submit\"\r\n                  className=\"loginBtn btn btn-primary btn-color-theme form-submit-btn\"\r\n                >\r\n                  <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //handleResetPassword: When the user clicks on the \"Reset Password\" dialog box\r\n  //button, we need check whether the passwords match. If they do,\r\n  //we reset the password and log the user in.\r\n  handleResetPassword = async event => {\r\n    event.preventDefault();\r\n    if (\r\n      this.resetPasswordRef.current.value !=\r\n      this.resetPasswordRepeatRef.current.value\r\n    ) {\r\n      alert(\"Sorry, The passwords you entered do not match. Please try again.\");\r\n      this.resetPasswordRepeatRef.current.select();\r\n      return;\r\n    }\r\n    const url = '/users/' + this.state.resetEmail;\r\n    const resetInfo = {password: this.resetPasswordRef.current.value};\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        'Accept': \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(resetInfo)\r\n    });\r\n    const text = await res.text();\r\n    alert(text);\r\n    this.resetPasswordRef.current.value = \"\";\r\n    this.resetPasswordRepeatRef.current.value = \"\";\r\n    this.setState({ showPasswordResetDialog: false });\r\n  };\r\n\r\n  //renderPasswordResetDialog -- Present a dialog box for user to enter answer\r\n  //to their security question.\r\n  renderPasswordResetDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Reset Password</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      resetEmail: \"\",\r\n                      resetQuestion: \"\",\r\n                      resetAnswer: \"\",\r\n                      showPasswordResetDialog: false\r\n                    });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleResetPassword}>\r\n                <label>\r\n                  New Password:\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter new password\"\r\n                    pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                    className=\"form-control form-text\"\r\n                    ref={this.resetPasswordRef}\r\n                  />\r\n                </label>\r\n                &nbsp;&nbsp;\r\n                <label>\r\n                  Repeat New Password:\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Repeat new password\"\r\n                    className=\"form-control form-text\"\r\n                    ref={this.resetPasswordRepeatRef}\r\n                  />\r\n                </label>\r\n                &nbsp;&nbsp;\r\n                <button\r\n                  role=\"submit\"\r\n                  className=\"loginBtn btn btn-primary\r\n                  btn-block btncolortheme\"\r\n                >\r\n                  <span className=\"fa fa-key\"></span>&nbsp;Reset Password\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"login-mode-div\" className=\"padded-page\">\r\n        <center>\r\n          <form id=\"loginForm\" onSubmit={this.handleLoginSubmit}>\r\n            <p className=\"greeting\">Welcome To Your Recipe App</p>\r\n            <label htmlFor=\"emailInput\">\r\n              Email:\r\n              <input\r\n                ref={this.emailInputRef}\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                id=\"emailInput\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n              />\r\n            </label>\r\n            <p></p>\r\n            <label htmlFor=\"passwordInput\">\r\n              Password:\r\n              <input\r\n                ref={this.passwordInputRef}\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                id=\"passwordInput\"\r\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                required={true}\r\n              />\r\n            </label>\r\n            <p className=\"login-error-msg-text\">{this.state.loginMsg}</p>\r\n            <button\r\n              type=\"submit\"\r\n              id=\"loginBtn\"\r\n              className=\"loginBtn btn btn-primary\r\n             btn-block btncolortheme\"\r\n            >\r\n              <span id=\"loginBtnIcon\"></span>\r\n              Log In\r\n            </button>\r\n            <br />\r\n            <p>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn account-link\"\r\n                onClick={() => {\r\n                  this.setState({ showAccountDialog: true });\r\n                }}\r\n              >\r\n                Create an account\r\n              </button>{\" \"}\r\n              |\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn account-link\"\r\n                onClick={() => {\r\n                  this.setState({ showLookUpAccountDialog: true });\r\n                }}\r\n              >\r\n                Reset your password\r\n              </button>\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"loginBtn btn btn-primary\r\n              btn-block btncolortheme\"\r\n              onClick={() => this.handleOAuthLoginClick(\"google\")}\r\n            >\r\n              <span className={this.state.googleIcon}></span>&nbsp;\r\n              {this.state.googleLabel}\r\n            </button>\r\n          </form>\r\n          {this.state.showAccountDialog ? this.renderAccountDialog() : null}\r\n          {this.state.showLookUpAccountDialog\r\n            ? this.renderLookUpAccountDialog()\r\n            : null}\r\n          {this.state.showSecurityQuestionDialog\r\n            ? this.renderSecurityQuestionDialog()\r\n            : null}\r\n          {this.state.showPasswordResetDialog\r\n            ? this.renderPasswordResetDialog()\r\n            : null}\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\nclass FloatingButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a className=\"floatbtn\" onClick={this.props.handleClick}>\r\n          <span className={\"floatbtn-icon \" + this.props.icon}></span>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FloatingButton;\r\n","import React from \"react\";\r\nimport \"../styles/modal.css\";\r\nimport AppMode from \"../AppMode.js\";\r\n\r\nclass RecipesTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //confirmDelete state variable determines whether to show or hide the\r\n    //confirm delete dialog box\r\n    this.state = { confirmDelete: false };\r\n  }\r\n\r\n  editRecipe = id => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.RECIPES_EDITRECIPE);\r\n  };\r\n\r\n  confirmDelete = id => {\r\n    this.props.setDeleteId(id);\r\n    this.setState({ confirmDelete: true });\r\n  };\r\n\r\n  doDelete = () => {\r\n    this.props.deleteRecipe();\r\n    this.setState({ confirmDelete: false });\r\n  };\r\n\r\n  //cancelDelete -- Triggered when the user chooses to cancel a delete\r\n  //operation. We just need to update state to toggle confirmDelete to false\r\n  cancelDelete = () => {\r\n    this.props.setDeleteId(\"\");\r\n    this.setState({ confirmDelete: false });\r\n  };\r\n\r\n  renderConfirmDeleteDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <p className=\"modal-title\">Confirm Recipe Deletion</p>\r\n            <button className=\"close-modal-button\" onClick={this.cancelDelete}>\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <center>\r\n              <h4>Are you sure that you want to delete this recipe?</h4>\r\n            </center>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"loginBtn btn btn-primary btn-color-scheme\"\r\n                onClick={this.doDelete}\r\n              >\r\n                YES\r\n              </button>\r\n              <button\r\n                className=\"loginBtn btn btn-secondary\"\r\n                onClick={this.cancelDelete}\r\n              >\r\n                NO\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderTable = () => {\r\n    let table = [];\r\n    for (let b = 0; b < this.props.recipes.length; ++b) {\r\n      table.push(\r\n        <tr key={b}>\r\n          <td>{this.props.recipes[b].name}</td>\r\n          <td>{this.props.recipes[b].cookTime}</td>\r\n          <td>\r\n            <button\r\n              onClick={this.props.menuOpen ? null : () => this.editRecipe(b)}\r\n            >\r\n              <span className=\"fa fa-binoculars\"></span>\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button\r\n              onClick={this.props.menuOpen ? null : () => this.confirmDelete(b)}\r\n            >\r\n              <span className=\"fa fa-trash\"></span>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    return table;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"paddedPage\">\r\n        <center>\r\n          <h1>Your Recipes</h1>\r\n        </center>\r\n\r\n        <table className=\"table table-hover recipesTable\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Cook Time</th>\r\n              <th scope=\"col\">View/Edit</th>\r\n              <th scope=\"col\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.keys(this.props.recipes).length === 0 ? (\r\n              <tr>\r\n                <td colSpan=\"6\" style={{ fontStyle: \"italic\" }}>\r\n                  No data recorded\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              this.renderTable()\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        {this.state.confirmDelete ? this.renderConfirmDeleteDialog() : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipesTable;\r\n","import React from \"react\";\r\nimport AppMode from \"../AppMode.js\";\r\n\r\nclass RecipeForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (this.props.mode === AppMode.RECIPES_ADDRECIPE) {\r\n      this.state = {\r\n        name: \"\",\r\n        ingredients: [],\r\n        directions: [],\r\n        cookTime: 0,\r\n        pictureURL: \"\",\r\n        dateAdded: \"\",\r\n        favorited: false,\r\n        faIcon: \"fa fa-save\",\r\n        btnLabel: \"Save Recipe\",\r\n      };\r\n    } else {\r\n      this.state = this.props.startData;\r\n      this.state.faIcon = \"fa fa-edit\";\r\n      this.state.btnLabel = \"Update Recipe\";\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const name = event.target.name;\r\n    console.log(event.target.select);\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    //start spinner\r\n    this.setState({\r\n      faIcon: \"fa fa-spin fa-spinner\",\r\n      btnLabel:\r\n        this.props.mode === AppMode.RECIPES_ADDRECIPE\r\n          ? \"Saving...\"\r\n          : \"Updating...\",\r\n    });\r\n    //to be saved\r\n    let recipeData = this.state;\r\n    delete recipeData.faIcon;\r\n    delete recipeData.btnLabel;\r\n    //1 second delay to show spinning icon\r\n    setTimeout(this.props.saveRecipe, 1000, recipeData);\r\n    event.preventDefault();\r\n  };\r\n\r\n  addDirection(e) {\r\n    e.preventDefault();\r\n    this.setState({ directions: [...this.state.directions, \"\"] });\r\n  }\r\n\r\n  addIngredient(e) {\r\n    e.preventDefault();\r\n    this.setState({ ingredients: [...this.state.ingredients, \"\"] });\r\n  }\r\n\r\n  handleChange2(e, index) {\r\n    this.state.directions[index] = e.target.value;\r\n    this.setState({ directions: this.state.directions });\r\n  }\r\n\r\n  handleChange3(e, index) {\r\n    this.state.ingredients[index] = e.target.value;\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  handleRemove(e, index) {\r\n    e.preventDefault();\r\n    this.state.directions.splice(index, 1);\r\n    this.setState({ directions: this.state.directions });\r\n  }\r\n\r\n  handleRemove2(e, index) {\r\n    e.preventDefault();\r\n    this.state.ingredients.splice(index, 1);\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"paddedPage\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <p></p>\r\n          <center>\r\n            <label htmlFor=\"name\">\r\n              Recipe Name:\r\n              <input\r\n                value={this.state.name}\r\n                name=\"name\"\r\n                id=\"name\"\r\n                class=\"form-control form-center \"\r\n                type=\"text\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <p />\r\n            <label htmlFor=\"cookTime\">\r\n              Cook Time (minutes):\r\n              <input\r\n                value={this.state.cookTime}\r\n                name=\"cookTime\"\r\n                id=\"cookTime\"\r\n                class=\"form-control form-center\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <p />\r\n            <div className=\"list-groupings\">\r\n              <div className=\"ingredient-grouping\">\r\n                <label>Ingredients:</label>\r\n                {this.state.ingredients.map((step, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <div className=\"direction-item\">\r\n                        <input\r\n                          onChange={(e) => this.handleChange3(e, index)}\r\n                          value={step}\r\n                        />\r\n                        &nbsp;&nbsp;\r\n                        <button\r\n                          className=\"loginBtn btn\r\n                    btn-block btncolortheme\"\r\n                          onClick={(e) => this.handleRemove2(e, index)}\r\n                        >\r\n                          X\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n\r\n                <button\r\n                  className=\"addBtn\"\r\n                  onClick={(e) => this.addIngredient(e)}\r\n                >\r\n                  <span className=\"fa fa-plus\"></span>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"direction-grouping\">\r\n                <label>Directions:</label>\r\n                {this.state.directions.map((step, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <div className=\"direction-item\">\r\n                        {index + 1}.&nbsp;\r\n                        <input\r\n                          onChange={(e) => this.handleChange2(e, index)}\r\n                          value={step}\r\n                        />\r\n                        &nbsp;&nbsp;\r\n                        <button\r\n                          className=\"loginBtn btn\r\n                    btn-block btncolortheme\"\r\n                          onClick={(e) => this.handleRemove(e, index)}\r\n                        >\r\n                          X\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <button\r\n                  className=\"addBtn\"\r\n                  onClick={(e) => this.addDirection(e)}\r\n                >\r\n                  <span className=\"fa fa-plus\"></span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <p />\r\n            <label className=\"pictureURL-form\" htmlFor=\"pictureURL\">\r\n              Picture URL:\r\n              <input\r\n                value={this.state.pictureURL}\r\n                name=\"pictureURL\"\r\n                id=\"pictureURL\"\r\n                class=\"form-control form-center\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <p/>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={this.props.handleChange}\r\n              className=\"loginBtn btn btn-primary\r\n                    btn-block btncolortheme\"\r\n              style={{ width: \"230px\", fontSize: \"20px\", zindex: 110 }}\r\n            >\r\n              <span className={this.state.faIcon} />\r\n              &nbsp;{this.state.btnLabel}\r\n            </button>\r\n          </center>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeForm;\r\n","import React from \"react\";\r\nimport FloatingButton from \"./FloatingButton.js\";\r\nimport AppMode from \"../AppMode.js\";\r\nimport RecipesTable from \"./RecipesTable.js\";\r\nimport RecipeForm from \"./RecipeForm.js\";\r\n\r\nclass Recipes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      recipes: [],\r\n      deleteId: \"\",\r\n      editId: \"\",\r\n    };\r\n  }\r\n\r\n  fetchRecipes = async () => {\r\n    let url = \"/recipes/\" + this.props.user.id;\r\n    let res = await fetch(url, { method: \"GET\" });\r\n    if (res.status != 200) {\r\n      let msg = await res.text();\r\n      alert(\r\n        \"Sorry, there was an error obtaining books data for this user: \" + msg\r\n      );\r\n      return;\r\n    }\r\n    let body = await res.json();\r\n    this.setState(\r\n      { recipes: JSON.parse(body) },\r\n      this.props.changeMode(AppMode.RECIPES)\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchRecipes();\r\n  }\r\n\r\n  //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n  //the user is considering deleting.\r\n  setDeleteId = (val) => {\r\n    this.setState({ deleteId: val });\r\n  };\r\n\r\n  //setEditId -- Capture in this.state.editId the unique id of the item\r\n  //the user is considering editing.\r\n  setEditId = (val) => {\r\n    this.setState({ editId: val });\r\n  };\r\n\r\n  editRecipe = async (newData) => {\r\n    let url =\r\n      \"/recipes/\" +\r\n      this.props.user.id +\r\n      \"/\" +\r\n      this.state.recipes[this.state.editId]._id;\r\n    let res = await fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(newData),\r\n    });\r\n    let msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to update a recipe in the database: \" +\r\n          msg\r\n      );\r\n    } else {\r\n      //Push update into component state:\r\n      this.fetchRecipes();\r\n    }\r\n  };\r\n\r\n  deleteRecipe = async () => {\r\n    let url =\r\n      \"/recipes/\" +\r\n      this.props.user.id +\r\n      \"/\" +\r\n      this.state.recipes[this.state.deleteId]._id;\r\n    let res = await fetch(url, { method: \"DELETE\" });\r\n    let msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to delete recipe from database: \" +\r\n          msg\r\n      );\r\n    } else {\r\n      //Push update into component state:\r\n      this.fetchRecipes();\r\n    }\r\n  };\r\n\r\n  addRecipe = async (newData) => {\r\n    \r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, \"0\");\r\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    today = mm + \"/\" + dd + \"/\" + yyyy;\r\n    newData.dateAdded = today;\r\n\r\n    const url = \"/recipes/\" + this.props.user.id;\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(newData),\r\n    });\r\n    const msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to add new recipe to database: \" +\r\n          msg\r\n      );\r\n    } else {\r\n      //Push update into component state:\r\n      this.fetchRecipes();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    switch (this.props.mode) {\r\n      case AppMode.RECIPES:\r\n        return (\r\n          <React.Fragment>\r\n            <RecipesTable\r\n              recipes={this.state.recipes}\r\n              setEditId={this.setEditId}\r\n              setDeleteId={this.setDeleteId}\r\n              deleteRecipe={this.deleteRecipe}\r\n              changeMode={this.props.changeMode}\r\n              menuOpen={this.props.menuOpen}\r\n            />\r\n            <div className=\"floatbtn-location\">\r\n              <FloatingButton\r\n                handleClick={() =>\r\n                  this.props.changeMode(AppMode.RECIPES_ADDRECIPE)\r\n                }\r\n                icon={\"fa fa-plus\"}\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      case AppMode.RECIPES_ADDRECIPE:\r\n        return (\r\n          <RecipeForm mode={this.props.mode} saveRecipe={this.addRecipe} />\r\n        );\r\n      case AppMode.RECIPES_EDITRECIPE:\r\n        return (\r\n          <RecipeForm\r\n            mode={this.props.mode}\r\n            startData={this.state.recipes[this.state.editId]}\r\n            saveRecipe={this.editRecipe}\r\n          />\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Recipes;\r\n","import React from \"react\";\r\n\r\nclass PantryPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"paddedPage center\">\r\n        <h1 align=\"center\">Grocery Management</h1>\r\n        <center>\r\n          <h2>This page is under construction. TODO: implement functionality</h2>\r\n          <i className=\"fa fa-bacon reviewsIcon\"></i>\r\n          <br />\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PantryPage;\r\n","import React from \"react\";\r\nimport NavBar from \"./NavBar.js\";\r\nimport LoginPage from \"./LoginPage.js\";\r\nimport Recipes from \"./Recipes.js\";\r\nimport PantryPage from \"./PantryPage.js\";\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome to Your Library\";\r\nmodeTitle[AppMode.RECIPES] = \"Your Recipes\";\r\nmodeTitle[AppMode.RECIPES_ADDRECIPE] = \"Add New Recipe\";\r\nmodeTitle[AppMode.RECIPES_EDITRECIPE] = \"Edit Recipe\";\r\nmodeTitle[AppMode.REVIEWS] = \"Reviews\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.RECIPES] = Recipes;\r\nmodeToPage[AppMode.RECIPES_ADDRECIPE] = Recipes;\r\nmodeToPage[AppMode.RECIPES_EDITRECIPE] = Recipes;\r\nmodeToPage[AppMode.PANTRY] = PantryPage;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: AppMode.LOGIN,\r\n      menuOpen: false,\r\n      user: \"\",\r\n      showAbout: false,\r\n      authenticated: false\r\n    };\r\n  }\r\n\r\n  handleChangeMode = newMode => {\r\n    this.setState({ mode: newMode });\r\n  };\r\n\r\n  openMenu = () => {\r\n    this.setState({ menuOpen: true });\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({ menuOpen: false });\r\n  };\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({ menuOpen: !prevState.menuOpen }));\r\n  };\r\n\r\n  setUser = (userObj) => {\r\n    this.setState({ user: userObj });\r\n  };\r\n\r\n   //setAuthenticated -- Given auth (true or false), update authentication state.\r\n   setAuthenticated = (auth) => {\r\n    this.setState({authenticated: auth});\r\n  }\r\n\r\n  //When App component mounts, add a window-level click handler to close the\r\n  //side menu if it is open. This event should fire only if no other lower-level\r\n  //events intercept the click.\r\n  componentDidMount() {\r\n    window.addEventListener(\"click\", this.handleClick);\r\n\r\n    if (!this.state.authenticated) {\r\n      //Use /auth/test route to (re)-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then(response => response.json())\r\n        .then(obj => {\r\n          if (obj.isAuthenticated) {\r\n            let data = JSON.parse(localStorage.getItem(\"yourRecipeUserData\"));\r\n            if (data == null) {\r\n              data = {}; //create empty database (localStorage)\r\n            }\r\n\r\n            if (!data.hasOwnProperty(obj.user.id)) {\r\n              //create new user with this id in database (localStorage)\r\n              data[obj.user.id] = {\r\n                accountInfo: {\r\n                  provider: obj.user.provider,\r\n                  password: \"\",\r\n                  securityQuestion: \"\",\r\n                  securityAnswer: \"\"\r\n                },\r\n\r\n                Recipes: {},\r\n              };\r\n\r\n              //Commit to localStorage:\r\n              localStorage.setItem(\"yourLibraryUserData\", JSON.stringify(data));\r\n            }\r\n\r\n            //Update current user\r\n            this.setState({\r\n              authenticated: true,\r\n              user: obj.user,\r\n              mode: AppMode.RECIPES //We're authenticated so can get into the app.\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  //We remove the event listener when the component\r\n  //unmounts. This is a best practice.\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"click\", this.handleClick);\r\n  }\r\n\r\n  //When the user clicks anywhere on the app and the menu is open, close it.\r\n  //This function takes advantage of event bubbling.\r\n  handleClick = event => {\r\n    if (this.state.menuOpen) {\r\n      this.closeMenu();\r\n    }\r\n    event.stopPropagation();\r\n  };\r\n\r\n  toggleAbout = () => {\r\n    this.setState(prevState => ({ showAbout: !prevState.showAbout }));\r\n  };\r\n\r\n  renderAbout = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>About Your Recipe App</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={this.toggleAbout}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body \">\r\n              <center>\r\n                <img\r\n                  src={require(\"./../styles/pancakes.jpg\")}\r\n                  height=\"280px\"\r\n                  width=\"370px\"\r\n                  className=\"aboutBody\"\r\n                />\r\n                <h3>Store Your Recipes Online!</h3>\r\n                <p>\r\n                  <em>\r\n                    Version 1 (Live), Build 20.6.2018 <br />\r\n                    &copy; 2020 Recipe Team. All rights reserved.\r\n                  </em>\r\n                </p>\r\n              </center>\r\n              <p>\r\n                <b>Your Recipe App supports</b>\r\n              </p>\r\n              <ul className=\"yourRecipesSupports\">\r\n                <li>Adding and removing recipes in your personal cook book</li>\r\n                <li>Managing your groceries</li>\r\n              </ul>\r\n              <br/>\r\n              <p>\r\n                Your Recipe App was first developed by The Recipe Team, which is\r\n                composed of two teams. They are doing this for a CptS 489 project.\r\n              </p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"loginBtn btn btn-primary btn-color-theme\"\r\n                onClick={this.toggleAbout}\r\n              >\r\n                OK\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div onClick={this.handleClick}>\r\n        {this.state.mode != AppMode.LOGIN &&\r\n          <NavBar\r\n          title={modeTitle[this.state.mode]}\r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          user={this.state.user}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}\r\n          showAbout={this.toggleAbout}\r\n        />}\r\n        <ModePage\r\n          menuOpen={this.state.menuOpen}\r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          setAuthenticated={this.setAuthenticated}\r\n          user={this.state.user}\r\n          setUser={this.setUser}\r\n        />\r\n        {this.state.showAbout ? this.renderAbout() : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './styles/index.css';\r\nimport './styles/modal.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}