{"version":3,"sources":["styles/pancakes.jpg","AppMode.js","components/NavBar.js","md5.js","components/LoginPage.js","components/FloatingButton.js","components/RecipeSearch.js","components/Card.jsx","components/RecipeSort.js","components/RecipeForm.js","components/RecipesTable.js","components/ViewRecipePage.js","components/Recipes.js","components/PantryTable.js","components/GroceryTable.js","components/PantryForm.js","components/PantryPage.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","AppMode","LOGIN","RECIPES","RECIPES_ADDRECIPE","RECIPES_EDITRECIPE","RECIPES_VIEWRECIPE","PANTRY","PANTRY_EDITINGREDIENT","PANTRY_ADDINGREDIENT","GROCERY_ADDINGREDIENT","Object","freeze","NavBar","addOrEditMode","this","props","mode","Nav","className","Item","onClick","changeMode","disabled","style","marginLeft","marginTop","Link","id","Dropdown","as","NavItem","Toggle","src","user","profileImageURL","height","width","Menu","displayName","showAbout","showEditDialog","Divider","React","Component","md5cycle","x","k","a","b","c","d","ff","gg","hh","ii","add32","cmn","q","s","t","md5blk","i","md5blks","charCodeAt","hex_chr","split","rhex","n","j","md5","length","join","hex","state","substring","tail","md51","LoginPage","handleLogin","setState","loginBtnIcon","loginBtnLabel","setUser","emailInputRef","current","value","username","provider","setAuthenticated","Recipes","handleLoginSubmit","event","preventDefault","url","passwordInputRef","fetch","method","res","status","window","open","text","resText","loginMsg","setTimeout","hideErrorMsg","handleOAuthLogin","handleOAuthLoginClick","checkAccountValidity","accountPassword","accountPasswordRepeat","repeatPassRef","setCustomValidity","handleNewAccountChange","target","name","handleCreateAccount","accountName","loginInfo","password","securityQuestion","accountSecurityQuestion","securityAnswer","accountSecurityAnswer","headers","body","JSON","stringify","alert","showAccountDialog","renderAccountDialog","role","onSubmit","type","size","placeholder","pattern","ref","newUserRef","required","onChange","rows","cols","maxLength","handleLookUpAccount","accountEmailRef","focus","json","parse","resetEmail","resetQuestion","resetAnswer","showLookUpAccountDialog","showSecurityQuestionDialog","renderLookUpAccountDialog","handleSecurityQuestionResponse","securityAnswerRef","select","showPasswordResetDialog","renderSecurityQuestionDialog","readOnly","handleResetPassword","resetPasswordRef","resetPasswordRepeatRef","resetInfo","renderPasswordResetDialog","createRef","googleIcon","googleLabel","githubIcon","githubLabel","htmlFor","FloatingButton","handleClick","icon","RecipeSearch","toggleVisible","prevState","visible","handleChangeFilter","e","filter","handleSearchChange","search","filteredList","lowerSearch","toLowerCase","allRecipes","item","includes","ingredients","lowerItem","updateFilteredRecipes","handleClickOutside","domNode","ReactDOM","findDOMNode","contains","document","addEventListener","removeEventListener","display","background","border","fontSize","paddingBottom","paddingTop","paddingRight","hidden","borderRadius","paddingLeft","outline","list","Card","favoriteClicked","stopPropagation","newData","favorited","saveRecipe","renderRecipeImageError","data","pictureURL","SortBtn","asc","selected","sortFunction","switch","customIcon","RecipeSort","nameSort","recipes","recipeList","sort","nameA","nameB","result","timeSort","timeA","cookTime","timeB","favoriteSort","favA","favB","onBtnClick","btnIndex","selectedSort","float","RecipeForm","handleChange","handleSubmit","faIcon","btnLabel","recipeData","confirmDelete","directions","dateAdded","expiration","startData","ingredientObj","index","quantity","parseFloat","unit","splice","calories","map","step","key","handleChangeIngredientName","handleChangeIngredientexpiration","handleChangeIngredientQuantity","min","handleChangeIngredientUnit","handleChangeIngredientCalories","handleRemoveIngredient","addIngredient","handleChangeDirection","handleRemoveDirection","addDirection","zindex","RecipesTable","viewRecipe","setViewId","setEditId","renderCards","col","push","indexOf","filtered","menuOpen","newFilteredList","forceUpdate","textAlign","position","left","keys","ViewRecipePage","doDelete","deleteRecipe","cancelDelete","viewMode","changeToEditMode","servings","getTotalCalories","totalCals","cals","NaN","parseInt","addServing","removeServing","renderConfirmDeleteDialog","renderRecipeImage","alt","onError","ingredientCalories","renderIngredients","ingredientid","updateIngredientOrder","newOrder","ingrArr","renderIngredientsEditMode","handle","tag","setList","newState","ingredient","renderDirections","updateDirectionOrder","dirArr","renderDirectionsEditMode","direction","isNaN","class","fetchRecipes","redirectPage","msg","setDeleteId","val","deleteId","editId","viewId","editRecipe","_id","Accept","addRecipe","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","Fragment","PantryTable","editPantry","renderTable","table","r","pantry","colSpan","fontStyle","GroceryTable","shopCart","units","PantryForm","pantryData","savePantry","PantryPage","fetchPantry","fetchGroceryList","groceryList","deleteIngredient","setDeleteId2","groceryDeleteId","deleteGrocery","editIngredient","addGrocery","align","saveGrocery","modeTitle","modeToPage","App","handleChangeMode","newMode","openMenu","closeMenu","toggleMenuOpen","userObj","showEditUser","auth","authenticated","handleNewEditChange","userData","toggleAbout","handleEditAccount","userId","renderEditAccountDialog","renderAbout","require","then","response","obj","isAuthenticated","localStorage","getItem","hasOwnProperty","accountInfo","setItem","ModePage","title","Boolean","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4edf836c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pancakes.305293f5.jpg\";","/* AppMode: The enumerated type for AppMode. If we were using TypeScript, we could\r\nuse the predefined enum type; see\r\nhttps://www.typescriptlang.org/docs/handbook/enums.html. Declaring an enumerated\r\ntype as a JavaScript object has important limitations (see\r\nhttps://stackoverflow.com/questions/287903/what-is-the-preferred-syntax-for-defining-enums-in-javascript),\r\nbut it will do for our purposes*/\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    RECIPES: \"RecipeMode\",\r\n    RECIPES_ADDRECIPE: \"RecipeMode-AddRecipe\",\r\n    RECIPES_EDITRECIPE: \"RecipeMode-EditRecipe\",\r\n    RECIPES_VIEWRECIPE: \"RecipeMode-ViewRecipe\",\r\n    PANTRY: \"PantryMode\",\r\n    PANTRY_EDITINGREDIENT: \"PantryMode-EditIngredient\",\r\n    PANTRY_ADDINGREDIENT: \"PantryMode-AddIngredient\",\r\n    GROCERY_ADDINGREDIENT: \"GroceryMode-AddIngredient\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from \"react\";\r\nimport AppMode from \"../AppMode.js\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { NavItem } from \"react-bootstrap\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport {NavDropdown, Form, FormControl, Button} from 'react-bootstrap';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  render() {\r\n    var addOrEditMode = this.props.mode === AppMode.RECIPES_ADDRECIPE || this.props.mode === AppMode.RECIPES_EDITRECIPE || this.props.mode === AppMode.RECIPES_VIEWRECIPE\r\n\r\n    return (\r\n      <Nav className=\"navbar-base\">\r\n        &nbsp;\r\n        <Nav.Item className=\"navbar-brand-custom\">\r\n            <span onClick={addOrEditMode ? () => this.props.changeMode(AppMode.RECIPES) : null}\r\n            className={addOrEditMode ? \"modebar-icon fa fa-arrow-left favorited\" : \"modebar-icon fa fa-cutlery\"}\r\n            disabled={!addOrEditMode} style={{marginLeft: \"8px\", marginTop:\"3px\"}}/>\r\n          &nbsp;&nbsp;&nbsp;My Recipe App\r\n        </Nav.Item>\r\n\r\n          <div className=\"navbar-items ml-auto\">\r\n            <Nav.Item>\r\n              <Nav.Link\r\n                className={\r\n                  this.props.mode == AppMode.RECIPES\r\n                    ? \"navlink navlink-selected\"\r\n                    : \"navlink\"\r\n                }\r\n                onClick={() => this.props.changeMode(AppMode.RECIPES)}\r\n              >\r\n                Recipe List\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <Nav.Link\r\n                id=\"groceryNav\"\r\n                onClick={() => this.props.changeMode(AppMode.PANTRY)}\r\n                className={\r\n                  this.props.mode == AppMode.PANTRY\r\n                    ? \"navlink navlink-grocery navlink-selected\"\r\n                    : \"navlink navlink-grocery\"\r\n                }\r\n              >\r\n                Groccery Management\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Dropdown as={NavItem}>\r\n              <Dropdown.Toggle as={NavItem}>\r\n                <img\r\n                  src={this.props.user.profileImageURL}\r\n                  height=\"40\"\r\n                  width=\"40\"\r\n                />\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item disabled>\r\n                  Logged In as <b>{this.props.user.displayName}</b>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={this.props.showAbout}>\r\n                  About Recipe App\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={this.props.showEditDialog}>\r\n                  Edit User Information\r\n                </Dropdown.Item>\r\n\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item\r\n                  onClick={() => this.props.changeMode(AppMode.LOGIN)}\r\n                >\r\n                  Log Out\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","function md5cycle(x, k) {\r\n    var a = x[0], b = x[1], c = x[2], d = x[3];\r\n    \r\n    a = ff(a, b, c, d, k[0], 7, -680876936);\r\n    d = ff(d, a, b, c, k[1], 12, -389564586);\r\n    c = ff(c, d, a, b, k[2], 17,  606105819);\r\n    b = ff(b, c, d, a, k[3], 22, -1044525330);\r\n    a = ff(a, b, c, d, k[4], 7, -176418897);\r\n    d = ff(d, a, b, c, k[5], 12,  1200080426);\r\n    c = ff(c, d, a, b, k[6], 17, -1473231341);\r\n    b = ff(b, c, d, a, k[7], 22, -45705983);\r\n    a = ff(a, b, c, d, k[8], 7,  1770035416);\r\n    d = ff(d, a, b, c, k[9], 12, -1958414417);\r\n    c = ff(c, d, a, b, k[10], 17, -42063);\r\n    b = ff(b, c, d, a, k[11], 22, -1990404162);\r\n    a = ff(a, b, c, d, k[12], 7,  1804603682);\r\n    d = ff(d, a, b, c, k[13], 12, -40341101);\r\n    c = ff(c, d, a, b, k[14], 17, -1502002290);\r\n    b = ff(b, c, d, a, k[15], 22,  1236535329);\r\n    \r\n    a = gg(a, b, c, d, k[1], 5, -165796510);\r\n    d = gg(d, a, b, c, k[6], 9, -1069501632);\r\n    c = gg(c, d, a, b, k[11], 14,  643717713);\r\n    b = gg(b, c, d, a, k[0], 20, -373897302);\r\n    a = gg(a, b, c, d, k[5], 5, -701558691);\r\n    d = gg(d, a, b, c, k[10], 9,  38016083);\r\n    c = gg(c, d, a, b, k[15], 14, -660478335);\r\n    b = gg(b, c, d, a, k[4], 20, -405537848);\r\n    a = gg(a, b, c, d, k[9], 5,  568446438);\r\n    d = gg(d, a, b, c, k[14], 9, -1019803690);\r\n    c = gg(c, d, a, b, k[3], 14, -187363961);\r\n    b = gg(b, c, d, a, k[8], 20,  1163531501);\r\n    a = gg(a, b, c, d, k[13], 5, -1444681467);\r\n    d = gg(d, a, b, c, k[2], 9, -51403784);\r\n    c = gg(c, d, a, b, k[7], 14,  1735328473);\r\n    b = gg(b, c, d, a, k[12], 20, -1926607734);\r\n    \r\n    a = hh(a, b, c, d, k[5], 4, -378558);\r\n    d = hh(d, a, b, c, k[8], 11, -2022574463);\r\n    c = hh(c, d, a, b, k[11], 16,  1839030562);\r\n    b = hh(b, c, d, a, k[14], 23, -35309556);\r\n    a = hh(a, b, c, d, k[1], 4, -1530992060);\r\n    d = hh(d, a, b, c, k[4], 11,  1272893353);\r\n    c = hh(c, d, a, b, k[7], 16, -155497632);\r\n    b = hh(b, c, d, a, k[10], 23, -1094730640);\r\n    a = hh(a, b, c, d, k[13], 4,  681279174);\r\n    d = hh(d, a, b, c, k[0], 11, -358537222);\r\n    c = hh(c, d, a, b, k[3], 16, -722521979);\r\n    b = hh(b, c, d, a, k[6], 23,  76029189);\r\n    a = hh(a, b, c, d, k[9], 4, -640364487);\r\n    d = hh(d, a, b, c, k[12], 11, -421815835);\r\n    c = hh(c, d, a, b, k[15], 16,  530742520);\r\n    b = hh(b, c, d, a, k[2], 23, -995338651);\r\n    \r\n    a = ii(a, b, c, d, k[0], 6, -198630844);\r\n    d = ii(d, a, b, c, k[7], 10,  1126891415);\r\n    c = ii(c, d, a, b, k[14], 15, -1416354905);\r\n    b = ii(b, c, d, a, k[5], 21, -57434055);\r\n    a = ii(a, b, c, d, k[12], 6,  1700485571);\r\n    d = ii(d, a, b, c, k[3], 10, -1894986606);\r\n    c = ii(c, d, a, b, k[10], 15, -1051523);\r\n    b = ii(b, c, d, a, k[1], 21, -2054922799);\r\n    a = ii(a, b, c, d, k[8], 6,  1873313359);\r\n    d = ii(d, a, b, c, k[15], 10, -30611744);\r\n    c = ii(c, d, a, b, k[6], 15, -1560198380);\r\n    b = ii(b, c, d, a, k[13], 21,  1309151649);\r\n    a = ii(a, b, c, d, k[4], 6, -145523070);\r\n    d = ii(d, a, b, c, k[11], 10, -1120210379);\r\n    c = ii(c, d, a, b, k[2], 15,  718787259);\r\n    b = ii(b, c, d, a, k[9], 21, -343485551);\r\n    \r\n    x[0] = add32(a, x[0]);\r\n    x[1] = add32(b, x[1]);\r\n    x[2] = add32(c, x[2]);\r\n    x[3] = add32(d, x[3]);\r\n    \r\n    }\r\n    \r\n    function cmn(q, a, b, x, s, t) {\r\n    a = add32(add32(a, q), add32(x, t));\r\n    return add32((a << s) | (a >>> (32 - s)), b);\r\n    }\r\n    \r\n    function ff(a, b, c, d, x, s, t) {\r\n    return cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n    }\r\n    \r\n    function gg(a, b, c, d, x, s, t) {\r\n    return cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n    }\r\n    \r\n    function hh(a, b, c, d, x, s, t) {\r\n    return cmn(b ^ c ^ d, a, b, x, s, t);\r\n    }\r\n    \r\n    function ii(a, b, c, d, x, s, t) {\r\n    return cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n    }\r\n    \r\n    function md51(s) {\r\n    var txt = '';\r\n    var n = s.length,\r\n    state = [1732584193, -271733879, -1732584194, 271733878], i;\r\n    for (i=64; i<=s.length; i+=64) {\r\n    md5cycle(state, md5blk(s.substring(i-64, i)));\r\n    }\r\n    s = s.substring(i-64);\r\n    var tail = [0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0];\r\n    for (i=0; i<s.length; i++)\r\n    tail[i>>2] |= s.charCodeAt(i) << ((i%4) << 3);\r\n    tail[i>>2] |= 0x80 << ((i%4) << 3);\r\n    if (i > 55) {\r\n    md5cycle(state, tail);\r\n    for (i=0; i<16; i++) tail[i] = 0;\r\n    }\r\n    tail[14] = n*8;\r\n    md5cycle(state, tail);\r\n    return state;\r\n    }\r\n    \r\n    /* there needs to be support for Unicode here,\r\n     * unless we pretend that we can redefine the MD-5\r\n     * algorithm for multi-byte characters (perhaps\r\n     * by adding every four 16-bit characters and\r\n     * shortening the sum to 32 bits). Otherwise\r\n     * I suggest performing MD-5 as if every character\r\n     * was two bytes--e.g., 0040 0025 = @%--but then\r\n     * how will an ordinary MD-5 sum be matched?\r\n     * There is no way to standardize text to something\r\n     * like UTF-8 before transformation; speed cost is\r\n     * utterly prohibitive. The JavaScript standard\r\n     * itself needs to look at this: it should start\r\n     * providing access to strings as preformed UTF-8\r\n     * 8-bit unsigned value arrays.\r\n     */\r\n    function md5blk(s) { /* I figured global was faster.   */\r\n    var md5blks = [], i; /* Andy King said do it this way. */\r\n    for (i=0; i<64; i+=4) {\r\n    md5blks[i>>2] = s.charCodeAt(i)\r\n    + (s.charCodeAt(i+1) << 8)\r\n    + (s.charCodeAt(i+2) << 16)\r\n    + (s.charCodeAt(i+3) << 24);\r\n    }\r\n    return md5blks;\r\n    }\r\n    \r\n    var hex_chr = '0123456789abcdef'.split('');\r\n    \r\n    function rhex(n)\r\n    {\r\n    var s='', j=0;\r\n    for(; j<4; j++)\r\n    s += hex_chr[(n >> (j * 8 + 4)) & 0x0F]\r\n    + hex_chr[(n >> (j * 8)) & 0x0F];\r\n    return s;\r\n    }\r\n    \r\n    function hex(x) {\r\n    for (var i=0; i<x.length; i++)\r\n    x[i] = rhex(x[i]);\r\n    return x.join('');\r\n    }\r\n    \r\n    export default function md5(s) {\r\n      return hex(md51(s));\r\n    }\r\n    \r\n    /* this function is much faster,\r\n    so if possible we use it. Some IEs\r\n    are the only ones I know of that\r\n    need the idiotic second function,\r\n    generated by an if clause.  */\r\n    \r\n    function add32(a, b) {\r\n    return (a + b) & 0xFFFFFFFF;\r\n    }\r\n    \r\n    if (md5('hello') != '5d41402abc4b2a76b9719d911017c592') {\r\n    function add32(x, y) {\r\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF),\r\n    msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xFFFF);\r\n    }\r\n    }","import React from \"react\";\r\nimport AppMode from \"./../AppMode.js\";\r\nimport md5 from \"../md5.js\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Create a ref for the email input DOM element\r\n    this.emailInputRef = React.createRef();\r\n    this.passwordInputRef = React.createRef();\r\n    this.repeatPassRef = React.createRef();\r\n    this.newUserRef = React.createRef();\r\n    this.accountEmailRef = React.createRef();\r\n    this.securityAnswerRef = React.createRef();\r\n    this.resetPasswordRef = React.createRef();\r\n    this.resetPasswordRepeatRef = React.createRef();\r\n    this.state = {\r\n      loginBtnIcon: \"fa fa-sign-in\",\r\n      loginBtnLabel: \"Log In\",\r\n      googleIcon: \"fa fa-google\",\r\n      googleLabel: \"Sign in with Google\",\r\n      githubIcon: \"fa fa-github\",\r\n      githubLabel: \"Sign in with GitHub\",\r\n      showAccountDialog: false,\r\n      showLookUpAccountDialog: false,\r\n      showSecurityQuestionDialog: false,\r\n      showPasswordResetDialog: false,\r\n      resetEmail: \"\",\r\n      resetQuestion: \"\",\r\n      resetAnswer: \"\",\r\n      accountName: \"\",\r\n      accountPassword: \"\",\r\n      accountPasswordRepeat: \"\",\r\n      accountSecurityQuestion: \"\",\r\n      accountSecurityAnswer: \"\"\r\n    };\r\n  }\r\n\r\n  //Focus cursor in email input field when mounted\r\n  componentDidMount() {\r\n    this.emailInputRef.current.focus();\r\n  }\r\n\r\n  //handleLogin -- Callback function that sets up initial app state upon login.\r\n  handleLogin = () => {\r\n    //Stop spinner and set authStrategy to local\r\n    this.setState({ loginBtnIcon: \"fa fa-sign-in\", loginBtnLabel: \"Log In\" });\r\n    //Set current user in parent component\r\n    //With local authentication all we have is an email\r\n    //address; we do not have additional info\r\n    //We'll grab profile pic from the gravatar service. User can create account\r\n    //at http://gravatar.com and define their profile pic.\r\n    this.props.setUser({\r\n      id: this.emailInputRef.current.value,\r\n      username: this.emailInputRef.current.value,\r\n      provider: \"local\",\r\n      profileImageURL: `https://www.gravatar.com/avatar/${md5(\r\n        this.emailInputRef.current.value\r\n      )}`\r\n    });\r\n    //Set authenticated state in parent component\r\n    this.props.setAuthenticated(true);\r\n    //Trigger switch to FEED mode (default app landing page)\r\n    this.props.changeMode(AppMode.Recipes);\r\n  };\r\n\r\n  //handleLoginSubmit -- Called when user clicks on login button. Initiate spinner\r\n  //for 1 second and call handleLogin to do the work.\r\n  handleLoginSubmit = async event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n      loginBtnLabel: \"Logging In...\"\r\n    });\r\n\r\n    const url =\r\n      \"/auth/login?username=\" +\r\n      this.emailInputRef.current.value +\r\n      \"&password=\" +\r\n      this.passwordInputRef.current.value;\r\n    const res = await fetch(url, { method: \"POST\" });\r\n    if (res.status == 200) {\r\n      //successful login!\r\n      //Force componentDidMount to execute.\r\n      //authenticated state will be updated and\r\n      //Session will be deserialized.\r\n      window.open(\"/\", \"_self\");\r\n    } else {\r\n      //Unsuccessful login\r\n      //Grab textual error message\r\n      const resText = await res.text();\r\n      //Display error message for 3 seconds and invite another login attempt\r\n      this.setState(\r\n        {\r\n          loginBtnIcon: \"fa fa-sign-in\",\r\n          loginBtnLabel: \"Log In\",\r\n          loginMsg: resText\r\n        },\r\n        () => setTimeout(this.hideErrorMsg, 3000)\r\n      );\r\n    }\r\n  };\r\n\r\n  hideErrorMsg = () => {\r\n    this.emailInputRef.current.value = \"\";\r\n    this.passwordInputRef.current.value = \"\";\r\n    this.setState({ loginMsg: \"\" });\r\n  };\r\n\r\n  //handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n  //provider\r\n\r\n  handleOAuthLogin = provider => {\r\n    window.open(`/auth/${provider}`, \"_self\");\r\n  };\r\n\r\n  //handleOAuthLoginClick -- Called whent the user clicks on button to\r\n  //authenticate via a third-party OAuth service. The name of the provider is\r\n  //passed in as a parameter.\r\n\r\n  handleOAuthLoginClick = provider => {\r\n    this.setState({\r\n      [provider + \"Icon\"]: \"fa fa-spin fa-spinner\",\r\n\r\n      [provider + \"Label\"]: \"Connecting...\"\r\n    });\r\n\r\n    setTimeout(() => this.handleOAuthLogin(provider), 1000);\r\n  };\r\n\r\n  //checkAccountValidity -- Callback function invoked after a form element in\r\n  //the 'Create Account' dialog box changes and component state has been\r\n  //updated. We need to check whether the passwords match and whether an\r\n  //account is already associated with the email address entered. If so, we\r\n  //set a custom validity message to be displayed when the user clicks the\r\n  //'Create Account' button. Otherwise, we reset the custom validity message\r\n  //to empty so that it will NOT fire when the user clicks 'Create Account'.\r\n  checkAccountValidity = () => {\r\n    if (this.state.accountPassword != this.state.accountPasswordRepeat) {\r\n      //Passwords don't match\r\n      this.repeatPassRef.current.setCustomValidity(\r\n        \"This password must match original password.\"\r\n      );\r\n    } else {\r\n      this.repeatPassRef.current.setCustomValidity(\"\");\r\n    }\r\n    // let data = JSON.parse(localStorage.getItem(\"yourLibraryUserData\"));\r\n    // if (data != null && data.hasOwnProperty(this.state.accountName)) {\r\n    //   //The user name is already taken\r\n    //   this.newUserRef.current.setCustomValidity(\r\n    //     \"An account already exists under this email address. Use 'Reset password' to recover the password.\"\r\n    //   );\r\n    // } else {\r\n    //   this.newUserRef.current.setCustomValidity(\"\");\r\n    // }\r\n  };\r\n\r\n  //handleNewAccountChange -- Called when a field in a dialog box form changes.\r\n  //Update corresponding state variable and potentially update the custom\r\n  //message.\r\n  handleNewAccountChange = event => {\r\n    this.setState(\r\n      { [event.target.name]: event.target.value },\r\n      this.checkAccountValidity\r\n    );\r\n  };\r\n\r\n  handleCreateAccount = async event => {\r\n    event.preventDefault();\r\n    const url = '/users/' + this.state.accountName;\r\n\r\n    const loginInfo = {\r\n        password: this.state.accountPassword,\r\n        securityQuestion: this.state.accountSecurityQuestion,\r\n        securityAnswer: this.state.accountSecurityAnswer\r\n    };\r\n\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        'Accept': \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(loginInfo)\r\n    });\r\n    if (res.status == 200) {\r\n      //successful account creation!\r\n      alert(\r\n        \"Your account was successfully created. Please log in using your email and password to continue.\"\r\n      );\r\n      this.setState({ showAccountDialog: false });\r\n    } else {\r\n      //Unsuccessful account creation\r\n      //Grab textual error message\r\n      const resText = await res.text();\r\n      alert(resText); //most likely the username is already taken\r\n    }\r\n  };\r\n\r\n  renderAccountDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Create New Account</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({ showAccountDialog: false });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleCreateAccount}>\r\n                <label>\r\n                  Email:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountName\"\r\n                    type=\"email\"\r\n                    size=\"35\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                    ref={this.newUserRef}\r\n                    required={true}\r\n                    value={this.state.accountName}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n\r\n                <label>\r\n                  Password:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountPassword\"\r\n                    type=\"password\"\r\n                    size=\"35\"\r\n                    placeholder=\"Enter Password\"\r\n                    pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                    required={true}\r\n                    ref={this.repeatPassRef}\r\n                    value={this.state.accountPassword}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n\r\n                <label>\r\n                  Repeat Password:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountPasswordRepeat\"\r\n                    type=\"password\"\r\n                    size=\"35\"\r\n                    placeholder=\"Repeat Password\"\r\n                    required={true}\r\n                    ref={this.repeatPassRef}\r\n                    value={this.state.accountPasswordRepeat}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n\r\n                <label>\r\n                  Security Question:\r\n                  <textarea\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountSecurityQuestion\"\r\n                    size=\"35\"\r\n                    placeholder=\"Security Question\"\r\n                    rows=\"2\"\r\n                    cols=\"35\"\r\n                    maxLength=\"100\"\r\n                    required={true}\r\n                    value={this.state.accountSecurityQuestion}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Answer to Security Question:\r\n                  <textarea\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountSecurityAnswer\"\r\n                    type=\"text\"\r\n                    placeholder=\"Answer\"\r\n                    rows=\"2\"\r\n                    cols=\"35\"\r\n                    maxLength=\"100\"\r\n                    required={true}\r\n                    value={this.state.accountSecurityAnswer}\r\n                    onChange={this.handleNewAccountChange}\r\n                  />\r\n                </label>\r\n                <button\r\n                  role=\"submit\"\r\n                  className=\"loginBtn btn btn-primary\r\n                  btn-block btncolortheme\"\r\n                >\r\n                  <span className=\"fa fa-user-plus\"></span>&nbsp;Create Account\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\r\n  //button, we check whether the account exists. If it does, we update the state,\r\n  //setting the resetEmail var to the email entered, hiding the current dialog box\r\n  //and showing the security question dialog box.\r\n  handleLookUpAccount = async event => {\r\n    event.preventDefault();\r\n    let url = \"/users/\" + this.accountEmailRef.current.value;\r\n    let res = await fetch(url, { method: \"GET\" });\r\n    let body;\r\n    if (res.status != 200) {\r\n      alert(\"Sorry, there is no account associated with this email address.\");\r\n      this.accountEmailRef.current.focus();\r\n      return;\r\n    }\r\n    body = await res.json();\r\n    body = JSON.parse(body);\r\n    alert(\"Body: \" + body)\r\n    //if here, account exists -- user account info and push to state vars\r\n    this.setState({resetEmail: this.accountEmailRef.current.value, \r\n                   resetQuestion:  body.securityQuestion,\r\n                   resetAnswer: body.securityAnswer,\r\n                   showLookUpAccountDialog: false, \r\n                   showSecurityQuestionDialog: true});\r\n    this.emailInputRef.current.value = \"\"; //clear out field\r\n  };\r\n\r\n  //renderLookUpAccountDialog -- Present a dialog box for user to enter the email address\r\n  //associated with their account in case where they want to reset password\r\n  renderLookUpAccountDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Look Up Account</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({ showLookUpAccountDialog: false });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleLookUpAccount}>\r\n                <label>\r\n                  Account Email Address:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    type=\"email\"\r\n                    size=\"35\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                    ref={this.accountEmailRef}\r\n                    required={true}\r\n                  />\r\n                </label>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"loginBtn btn btn-primary\r\n                  btn-block btncolortheme\"\r\n                >\r\n                  <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //handleSecurityQuestionResponse: When the user clicks on the \"Check Answer\" dialog box\r\n  //button, we check whether the security question answer is correct. If it is,\r\n  //present dialog box for resetting the password.\r\n  handleSecurityQuestionResponse = async event => {\r\n    event.preventDefault();\r\n    if (this.securityAnswerRef.current.value != this.state.resetAnswer) {\r\n      alert(\"Sorry, that is not the correct answer to the security question.\");\r\n      this.securityAnswerRef.current.select();\r\n      return;\r\n    } \r\n    this.setState({showSecurityQuestionDialog: false, \r\n                showPasswordResetDialog: true});\r\n    this.securityAnswerRef.current.value = \"\"; //clear out field\r\n  };\r\n\r\n  //renderSecurityQuestionDialog -- Present a dialog box for user to enter answer\r\n  //to their security question.\r\n  renderSecurityQuestionDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Answer Security Question</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      resetEmail: \"\",\r\n                      resetQuestion: \"\",\r\n                      resetAnswer: \"\",\r\n                      showSecurityQuestionDialog: false\r\n                    });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleSecurityQuestionResponse}>\r\n                <label>\r\n                  Security Question:\r\n                  <textarea\r\n                    readOnly={true}\r\n                    value={this.state.resetQuestion}\r\n                    className=\"form-control form-text\"\r\n                    rows=\"3\"\r\n                    cols=\"35\"\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Security Answer:\r\n                  <textarea\r\n                    className=\"form-control form-text\"\r\n                    placeholder=\"Enter Security Question Answer\"\r\n                    ref={this.securityAnswerRef}\r\n                    rows=\"3\"\r\n                    cols=\"35\"\r\n                  />\r\n                </label>\r\n                <p></p>\r\n                <button\r\n                  role=\"submit\"\r\n                  className=\"loginBtn btn btn-primary btn-color-theme form-submit-btn\"\r\n                >\r\n                  <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //handleResetPassword: When the user clicks on the \"Reset Password\" dialog box\r\n  //button, we need check whether the passwords match. If they do,\r\n  //we reset the password and log the user in.\r\n  handleResetPassword = async event => {\r\n    event.preventDefault();\r\n    if (\r\n      this.resetPasswordRef.current.value !=\r\n      this.resetPasswordRepeatRef.current.value\r\n    ) {\r\n      alert(\"Sorry, The passwords you entered do not match. Please try again.\");\r\n      this.resetPasswordRepeatRef.current.select();\r\n      return;\r\n    }\r\n    const url = '/users/' + this.state.resetEmail;\r\n    const resetInfo = {password: this.resetPasswordRef.current.value};\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        'Accept': \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(resetInfo)\r\n    });\r\n    const text = await res.text();\r\n    alert(text);\r\n    this.resetPasswordRef.current.value = \"\";\r\n    this.resetPasswordRepeatRef.current.value = \"\";\r\n    this.setState({ showPasswordResetDialog: false });\r\n  };\r\n\r\n  //renderPasswordResetDialog -- Present a dialog box for user to enter answer\r\n  //to their security question.\r\n  renderPasswordResetDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Reset Password</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      resetEmail: \"\",\r\n                      resetQuestion: \"\",\r\n                      resetAnswer: \"\",\r\n                      showPasswordResetDialog: false\r\n                    });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleResetPassword}>\r\n                <label>\r\n                  New Password:\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter new password\"\r\n                    pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                    className=\"form-control form-text\"\r\n                    ref={this.resetPasswordRef}\r\n                  />\r\n                </label>\r\n                &nbsp;&nbsp;\r\n                <label>\r\n                  Repeat New Password:\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Repeat new password\"\r\n                    className=\"form-control form-text\"\r\n                    ref={this.resetPasswordRepeatRef}\r\n                  />\r\n                </label>\r\n                &nbsp;&nbsp;\r\n                <button\r\n                  role=\"submit\"\r\n                  className=\"loginBtn btn btn-primary\r\n                  btn-block btncolortheme\"\r\n                >\r\n                  <span className=\"fa fa-key\"></span>&nbsp;Reset Password\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"login-mode-div\" className=\"padded-page\">\r\n        <center>\r\n          <form id=\"loginForm\" onSubmit={this.handleLoginSubmit}>\r\n            <p className=\"greeting\">Welcome To Your Recipe App</p>\r\n            <label htmlFor=\"emailInput\">\r\n              Email:\r\n              <input\r\n                ref={this.emailInputRef}\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                id=\"emailInput\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n              />\r\n            </label>\r\n            <p></p>\r\n            <label htmlFor=\"passwordInput\">\r\n              Password:\r\n              <input\r\n                ref={this.passwordInputRef}\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                id=\"passwordInput\"\r\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                required={true}\r\n              />\r\n            </label>\r\n            <p className=\"login-error-msg-text\">{this.state.loginMsg}</p>\r\n            <button\r\n              type=\"submit\"\r\n              id=\"loginBtn\"\r\n              className=\"loginBtn btn btn-primary\r\n             btn-block btncolortheme\"\r\n            >\r\n              <span id=\"loginBtnIcon\"></span>\r\n              Log In\r\n            </button>\r\n            <br />\r\n            <p>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn account-link\"\r\n                onClick={() => {\r\n                  this.setState({ showAccountDialog: true });\r\n                }}\r\n              >\r\n                Create an account\r\n              </button>{\" \"}\r\n              |\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn account-link\"\r\n                onClick={() => {\r\n                  this.setState({ showLookUpAccountDialog: true });\r\n                }}\r\n              >\r\n                Reset your password\r\n              </button>\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"loginBtn btn btn-primary\r\n              btn-block btncolortheme\"\r\n              onClick={() => this.handleOAuthLoginClick(\"google\")}\r\n            >\r\n              <span className={this.state.googleIcon}></span>&nbsp;\r\n              {this.state.googleLabel}\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"loginBtn btn btn-primary\r\n              btn-block btncolortheme\"\r\n              onClick={() => this.handleOAuthLoginClick(\"github\")}\r\n            >\r\n              <span className={this.state.githubIcon}></span>&nbsp;\r\n              {this.state.githubLabel}\r\n            </button>\r\n\r\n          </form>\r\n          {this.state.showAccountDialog ? this.renderAccountDialog() : null}\r\n          {this.state.showLookUpAccountDialog\r\n            ? this.renderLookUpAccountDialog()\r\n            : null}\r\n          {this.state.showSecurityQuestionDialog\r\n            ? this.renderSecurityQuestionDialog()\r\n            : null}\r\n          {this.state.showPasswordResetDialog\r\n            ? this.renderPasswordResetDialog()\r\n            : null}\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\nclass FloatingButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a className=\"floatbtn\" onClick={this.props.handleClick}>\r\n          <span className={\"floatbtn-icon \" + this.props.icon}></span>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FloatingButton;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass RecipeSearch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // visible represents whether the search text input is shown or not\r\n    this.state = {\r\n      visible: false,\r\n      filter: \"\",\r\n    };\r\n  }\r\n\r\n  // adds the event listener for handling a click outside of the component\r\n  componentDidMount() {\r\n    document.addEventListener(\"click\", this.handleClickOutside, true);\r\n  }\r\n\r\n  // removes the event listener for handling a click outside of the component\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"click\", this.handleClickOutside, true);\r\n  }\r\n\r\n  toggleVisible = () => {\r\n    this.setState((prevState) => ({ visible: !prevState.visible }));\r\n  };\r\n\r\n  handleChangeFilter = (e) => {\r\n    // this.state.filter = e.target.value;\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  // updates the filtered recipes upon search input change\r\n  handleSearchChange = (e) => {\r\n    let search = e.target.value;\r\n    let filteredList = [];\r\n    // can add search caching in the future for faster searches\r\n    if (this.state.filter == \"Recipes\") {\r\n      if (search !== \"\") {\r\n        // convert search term and item names to lowercase because includes is case sensitve\r\n        let lowerSearch = search.toLowerCase();\r\n        filteredList = this.props.allRecipes.filter((item) => {\r\n          let lowerItem = item.name.toLowerCase();\r\n          return lowerItem.includes(lowerSearch);\r\n        });\r\n      }\r\n    } else if (this.state.filter == \"Ingredients\") {\r\n      let i = 0;\r\n      let x = 0;\r\n      if (search !== \"\") {\r\n        let lowerSearch = search.toLowerCase();\r\n        filteredList = this.props.allRecipes.filter((item) => {\r\n          for (\r\n            i = 0;\r\n            i < item.ingredients.length;\r\n            ++i // searches through all the ingredients\r\n          ) {\r\n            let lowerItem = item.ingredients[i].name.toLowerCase();\r\n            if (lowerItem.includes(lowerSearch)) {\r\n              // returns true, and shows the whole recipe if there is an ingredient match\r\n              return lowerItem.includes(lowerSearch);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } // search term is empty\r\n    else {\r\n      filteredList = this.props.allRecipes;\r\n    }\r\n\r\n    this.props.updateFilteredRecipes(filteredList);\r\n  };\r\n\r\n  // closes search bar upon click outside of the component\r\n  handleClickOutside = (e) => {\r\n    let domNode = ReactDOM.findDOMNode(this);\r\n\r\n    if (!domNode || (!domNode.contains(e.target) && this.state.visible))\r\n      this.setState({ visible: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"inline-block\" }}>\r\n        <button\r\n          onClick={this.toggleVisible}\r\n          className=\"recipe-search-icon fa fa-search\"\r\n          id=\"searchButton\"\r\n          style={{\r\n            background: \"none\",\r\n            border: \"none\",\r\n            fontSize: \"25px\",\r\n            paddingBottom: \"20px\",\r\n            paddingTop: \"10px\",\r\n            paddingRight: \"15px\",\r\n          }}\r\n        />\r\n        <input\r\n          type=\"search\"\r\n          onChange={this.handleSearchChange}\r\n          hidden={!this.state.visible}\r\n          placeholder=\"Search...\"\r\n          id=\"searchBar\"\r\n          style={{\r\n            borderRadius: \"10px\",\r\n            border: \"1.4px solid\",\r\n            paddingLeft: \"8px\",\r\n            width: \"15vw\",\r\n            outline: \"none\",\r\n          }}\r\n        />\r\n        <input\r\n          placeholder=\"Filter Search\"\r\n          className=\"ingredient-input-filter\"\r\n          type=\"text\"\r\n          list=\"filters\"\r\n          id=\"filterSearch\"\r\n          onChange={this.handleChangeFilter}\r\n          value={this.state.filter}\r\n        />\r\n        <datalist id=\"filters\">\r\n          <option>Recipes</option>\r\n          <option>Ingredients</option>\r\n        </datalist>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeSearch;\r\n","import React from \"react\";\r\nimport AppMode from \"../AppMode.js\"\r\n\r\n// This component is for a card of a recipe that is displayed on the\r\n// home page of the site.\r\nclass Card extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.props.data;\r\n  }\r\n  \r\n  //Update the favorited field in database\r\n  favoriteClicked = (event) => {\r\n    event.stopPropagation();\r\n    var newData = this.state;\r\n    if (this.state.favorited) {\r\n      this.setState({ favorited: false });\r\n      newData.favorited = false;\r\n    } \r\n    else \r\n    {\r\n      this.setState({ favorited: true });\r\n      newData.favorited = true;\r\n    }\r\n\r\n    this.props.saveRecipe(newData, this.props.id, AppMode.RECIPES);\r\n  };\r\n\r\n  // changes the source to a default image if the provided recipe image is not found\r\n  renderRecipeImageError = (e) =>{\r\n    e.target.src = 'https://www.boilersupplies.com/img/no_image.png'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"recipe-card shadow mb-5 bg-white rounded\">\r\n    {/* shows the image of the recipe on the page */}\r\n        <img\r\n          className=\"recipe-card-img\"\r\n          src={this.state.pictureURL}\r\n          height=\"230\"\r\n          width=\"270\"\r\n          className=\"rounded-top\"\r\n          alt=\"No Image Found\"\r\n          onError={this.renderRecipeImageError}\r\n        />\r\n    {/* shows the name of recipe */}\r\n        <p className=\"recipe-card-name\">{this.state.name}</p>\r\n    {/* shows favorite button */}\r\n        <h2>\r\n        <span \r\n          className={\"fav-btn fa fa-star recipe-card-favorite \" + (this.state.favorited ? \"favorited\" : \"unfavorited\")}\r\n          onClick={(event) => this.favoriteClicked(event)}></span>\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react'\r\n\r\n// each button the user will be able to click on to sort\r\nclass SortBtn extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    // keeps track of if sorting is ascending or descending\r\n    asc = true\r\n    \r\n    onClick = () => {\r\n        if (this.props.selected)\r\n            this.asc = !this.asc // toggle asc\r\n\r\n        // call the parents onClick function and the sort function for this button\r\n        this.props.onClick()\r\n        this.props.sortFunction(this.asc)\r\n    }\r\n\r\n    // styling in index.css for selected and visible\r\n    render() {\r\n        this.asc = !this.props.selected ? true : this.asc\r\n        return (\r\n            <button\r\n                className={`recipe-sort-button ${this.props.icon}${this.asc ? this.props.switch[0] : this.props.switch[1]}` + \r\n                            `${this.props.selected ? \" selected\" : \"\"}` + \r\n                            `${this.props.visible ? \" visible\" : \"\"}` + `${this.props.customIcon ? \" custom\" : \"\"}`}\r\n                onClick={this.onClick}\r\n                disabled={!this.props.visible}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n// wrapper component for sorting buttons \r\nclass RecipeSort extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedSort: null,\r\n            visible: false\r\n        }\r\n    }\r\n\r\n    // sorts by the name of the recipes\r\n    nameSort = (asc) => {\r\n        // create a deep copy of the recipe list\r\n        let recipes = [...this.props.recipeList]\r\n        \r\n        recipes.sort((a, b) =>{\r\n            let nameA = a.name.toLowerCase();\r\n            let nameB = b.name.toLowerCase();\r\n            \r\n            let result = 0\r\n            if(nameA < nameB)\r\n                result = -1\r\n            if(nameA > nameB)\r\n                result = 1\r\n            if(!asc) // flip the order if sorting is descending\r\n                result *= -1\r\n            \r\n            return result\r\n        })\r\n\r\n        // update recipes in recipe table to reflect sorted list\r\n        this.props.updateFilteredRecipes(recipes)\r\n    }\r\n\r\n    // sorts by the time of the recipes\r\n    timeSort = (asc) => {\r\n        // create a deep copy of the recipe list\r\n        let recipes = [...this.props.recipeList]\r\n        \r\n        recipes.sort((a, b) => {\r\n            let timeA = a.cookTime;\r\n            let timeB = b.cookTime;\r\n\r\n            let result = 0\r\n            if (timeA < timeB)\r\n                result = -1\r\n            if (timeA > timeB)\r\n                result = 1\r\n            if (!asc) // flip the order if sorting is descending\r\n                result *= -1\r\n\r\n            return result\r\n        })\r\n\r\n        // update recipes in recipe table to reflect sorted list\r\n        this.props.updateFilteredRecipes(recipes)\r\n    }\r\n\r\n    // sorts by whether a recipe is favorited or not\r\n    favoriteSort = (asc) => {\r\n        // create a deep copy of the recipe list\r\n        let recipes = [...this.props.recipeList]\r\n\r\n        recipes.sort((a, b) => {\r\n            let favA = a.favorited;\r\n            let favB = b.favorited;\r\n\r\n            let result = 0\r\n            if (favA && !favB)\r\n                result = -1\r\n            if (!favA && favB)\r\n                result = 1\r\n            if (!asc) // flip the order if sorting is descending\r\n                result *= -1\r\n\r\n            return result\r\n        })\r\n\r\n        // update recipes in recipe table to reflect sorted list\r\n        this.props.updateFilteredRecipes(recipes)\r\n    }\r\n\r\n    // switches the selected sort button index on click \r\n    onBtnClick = (btnIndex) => {\r\n        this.setState({selectedSort: btnIndex})\r\n    }\r\n\r\n    // toggles the visibility of the sort buttons (animated in css)\r\n    toggleVisible = () => {\r\n        this.setState(prevState => ({ visible: !prevState.visible }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display: \"inline-block\", float: \"right\"}}>\r\n                <SortBtn\r\n                    selected={this.state.selectedSort === 0}\r\n                    icon=\"fa fa-sort-alpha\"\r\n                    switch={[\"-asc\", \"-desc\"]}\r\n                    onClick={() => { this.onBtnClick(0) }}\r\n                    sortFunction={this.nameSort}\r\n                    visible={this.state.visible}\r\n                />\r\n                <SortBtn\r\n                    selected={this.state.selectedSort === 1}\r\n                    icon=\"custom-icon-sort-time\"\r\n                    switch={[\"-asc\", \"-desc\"]}\r\n                    onClick={() => { this.onBtnClick(1) }}\r\n                    sortFunction={this.timeSort}\r\n                    visible={this.state.visible}\r\n                    customIcon={true}\r\n                />\r\n                <SortBtn\r\n                    selected={this.state.selectedSort === 2}\r\n                    icon=\"fa fa-star\"\r\n                    switch={[\"\", \"-o\"]}\r\n                    onClick={() => { this.onBtnClick(2) }}\r\n                    sortFunction={this.favoriteSort}\r\n                    visible={this.state.visible}\r\n                />\r\n                <button className=\"recipe-sort-toggle fa fa-filter\" onClick={this.toggleVisible}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecipeSort","import React from \"react\";\r\nimport AppMode from \"../AppMode.js\";\r\n\r\nclass RecipeForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (this.props.mode === AppMode.RECIPES_ADDRECIPE) {\r\n      this.state = {\r\n        name: \"\",\r\n        ingredients: [],\r\n        directions: [],\r\n        cookTime: 0,\r\n        pictureURL: \"\",\r\n        dateAdded: \"\",\r\n        expiration: \"\",\r\n        favorited: false,\r\n        faIcon: \"fa fa-save\",\r\n        btnLabel: \"Save Recipe\",\r\n      };\r\n    } else {\r\n      this.state = this.props.startData;\r\n      this.state.faIcon = \"fa fa-edit\";\r\n      this.state.btnLabel = \"Update Recipe\";\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const name = event.target.name;\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    //start spinner\r\n    this.setState({\r\n      faIcon: \"fa fa-spin fa-spinner\",\r\n      btnLabel:\r\n        this.props.mode === AppMode.RECIPES_ADDRECIPE\r\n          ? \"Saving...\"\r\n          : \"Updating...\",\r\n    });\r\n    //to be saved\r\n    let recipeData = this.state;\r\n    delete recipeData.faIcon;\r\n    delete recipeData.btnLabel;\r\n    delete recipeData.confirmDelete;\r\n    //1 second delay to show spinning icon\r\n    setTimeout(this.props.saveRecipe, 1000, recipeData);\r\n    event.preventDefault();\r\n  };\r\n\r\n  addDirection(e) {\r\n    e.preventDefault();\r\n    this.setState({ directions: [...this.state.directions, \"\"] });\r\n  }\r\n\r\n  addIngredient(e) {\r\n    e.preventDefault();\r\n    let ingredientObj = {};\r\n    ingredientObj.name = \"\";\r\n    ingredientObj.quantity = null;\r\n    ingredientObj.unit = \"\";\r\n    ingredientObj.calories = null;\r\n    ingredientObj.expiration = \"\";\r\n    this.setState({\r\n      ingredients: [...this.state.ingredients, ingredientObj],\r\n    });\r\n  }\r\n\r\n  handleChangeDirection(e, index) {\r\n    this.state.directions[index] = e.target.value;\r\n    this.setState({ directions: this.state.directions });\r\n  }\r\n\r\n  handleChangeIngredientName(e, index) {\r\n    this.state.ingredients[index].name = e.target.value;\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  handleChangeIngredientexpiration(e, index) {\r\n    this.state.ingredients[index].expiration = e.target.value;\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  handleChangeIngredientQuantity(e, index) {\r\n    this.state.ingredients[index].quantity = parseFloat(e.target.value);\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  handleChangeIngredientUnit(e, index) {\r\n    this.state.ingredients[index].unit = e.target.value;\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  handleRemoveDirection(e, index) {\r\n    e.preventDefault();\r\n    this.state.directions.splice(index, 1);\r\n    this.setState({ directions: this.state.directions });\r\n  }\r\n\r\n  handleRemoveIngredient(e, index) {\r\n    e.preventDefault();\r\n    this.state.ingredients.splice(index, 1);\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n  handleChangeIngredientCalories(e, index) {\r\n    e.preventDefault();\r\n    this.state.ingredients[index].calories = e.target.value;\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"paddedPage\">\r\n        <form id=\"pantryForm\" onSubmit={this.handleSubmit}>\r\n          <p></p>\r\n          <center>\r\n            <label htmlFor=\"name\">\r\n              Recipe Name:\r\n              <input\r\n                value={this.state.name}\r\n                name=\"name\"\r\n                id=\"name\"\r\n                className=\"form-control form-center \"\r\n                type=\"text\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <p />\r\n            <label htmlFor=\"cookTime\">\r\n              Cook Time (minutes):\r\n              <input\r\n                value={this.state.cookTime}\r\n                name=\"cookTime\"\r\n                id=\"cookTime\"\r\n                className=\"form-control form-center\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <p />\r\n            <div className=\"list-groupings\">\r\n              <div className=\"ingredient-grouping\">\r\n                <label>Ingredients:</label>\r\n                {this.state.ingredients.map((step, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <div className=\"direction-item\">\r\n                        <input\r\n                          placeholder=\"ingredient name\"\r\n                          className=\"ingredient-input-name\"\r\n                          onChange={(e) =>\r\n                            this.handleChangeIngredientName(e, index)\r\n                          }\r\n                          value={step.name}\r\n                        />\r\n                        <input\r\n                          placeholder=\"ingredient expiration\"\r\n                          className=\"ingredient-input-expiration\"\r\n                          onChange={(e) =>\r\n                            this.handleChangeIngredientexpiration(e, index)\r\n                          }\r\n                          value={step.expiration}\r\n                        />\r\n                        <input\r\n                          placeholder=\"quantity\"\r\n                          type=\"number\"\r\n                          className=\"ingredient-input-quantity\"\r\n                          onChange={(e) =>\r\n                            this.handleChangeIngredientQuantity(e, index)\r\n                          }\r\n                          value={step.quantity}\r\n                          step=\"0.1\"\r\n                          min=\"0\"\r\n                        />\r\n                        <input\r\n                          placeholder=\"unit\"\r\n                          className=\"ingredient-input-unit\"\r\n                          type=\"text\"\r\n                          list=\"units\"\r\n                          onChange={(e) =>\r\n                            this.handleChangeIngredientUnit(e, index)\r\n                          }\r\n                          value={step.unit}\r\n                        />\r\n                        <input\r\n                          placeholder=\"calories\"\r\n                          type=\"number\"\r\n                          className=\"ingredient-input-calories\"\r\n                          onChange={(e) =>\r\n                            this.handleChangeIngredientCalories(e, index)\r\n                          }\r\n                          value={step.calories}\r\n                          step=\"5\"\r\n                          min=\"0\"\r\n                        />\r\n                        <datalist id=\"units\">\r\n                          <option>whole</option>\r\n                          <option>teaspoon</option>\r\n                          <option>tablespoon</option>\r\n                          <option>cup</option>\r\n                          <option>gallon</option>\r\n                          <option>pound</option>\r\n                          <options>ounce</options>\r\n                          <options>quart</options>\r\n                          <options>pint</options>\r\n                        </datalist>\r\n                        &nbsp;&nbsp;\r\n                        <button\r\n                          className=\"loginBtn btn\r\n                    btn-block btncolortheme\"\r\n                          onClick={(e) => this.handleRemoveIngredient(e, index)}\r\n                        >\r\n                          X\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n\r\n                <button\r\n                  className=\"addBtn\"\r\n                  onClick={(e) => this.addIngredient(e)}\r\n                >\r\n                  <span className=\"fa fa-plus\"></span>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"direction-grouping\">\r\n                <label>Directions:</label>\r\n                {this.state.directions.map((step, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <div className=\"direction-item\">\r\n                        {index + 1}.&nbsp;\r\n                        <div className=\"direction-textdiv\">\r\n                          <textarea \r\n                            className=\"direction-textarea\"\r\n                            onChange={(e) => this.handleChangeDirection(e, index)}\r\n                            value={step}\r\n                          />\r\n                        </div>\r\n                        <button\r\n                          className=\"loginBtn btn\r\n                          btn-block btncolortheme\"\r\n                          onClick={(e) => this.handleRemoveDirection(e, index)}\r\n                        >\r\n                          X\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <button\r\n                  className=\"addBtn\"\r\n                  onClick={(e) => this.addDirection(e)}\r\n                >\r\n                  <span className=\"fa fa-plus\"></span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <p />\r\n            <label className=\"pictureURL-form\" htmlFor=\"pictureURL\">\r\n              Picture URL:\r\n              <input\r\n                value={this.state.pictureURL}\r\n                name=\"pictureURL\"\r\n                id=\"pictureURL\"\r\n                className=\"form-control form-center\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <p />\r\n            <button\r\n              type=\"submit\"\r\n              onClick={this.props.handleChange}\r\n              className=\"loginBtn btn btn-primary\r\n                    btn-block btncolortheme\"\r\n              style={{ width: \"230px\", fontSize: \"20px\", zindex: 110 }}\r\n            >\r\n              <span className={this.state.faIcon} />\r\n              &nbsp;{this.state.btnLabel}\r\n            </button>\r\n          </center>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeForm;\r\n","import React from \"react\";\r\nimport \"../styles/modal.css\";\r\nimport AppMode from \"../AppMode.js\";\r\nimport RecipeSearch from \"./RecipeSearch.js\";\r\nimport Card from \"./Card.jsx\"; \r\nimport RecipeSort from \"./RecipeSort.js\";\r\nimport RecipeForm from \"./RecipeForm.js\";\r\n\r\nclass RecipesTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //confirmDelete state variable determines whether to show or hide the\r\n    //confirm delete dialog box\r\n    //filtered represents the filtered list of user recipes\r\n    this.state = {\r\n      filtered: this.props.recipes,\r\n    };\r\n  }\r\n\r\n  // called when this component receives new props.\r\n  // initializes the filtered recipes list since this component is constructed and mounted\r\n  //  before the recipe componenet is finished fetching the users recipes\r\n  componentWillReceiveProps() {\r\n    this.setState({ filtered: this.props.recipes });\r\n  }\r\n\r\n  viewRecipe = (id) => {\r\n    this.props.setViewId(id);\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.RECIPES_VIEWRECIPE);\r\n  };\r\n\r\n  renderCards = () => {\r\n    let col = [];\r\n    for (let b = 0; b < this.state.filtered.length; b += 1) {\r\n      const id = \"recipe-\" + b;\r\n      col.push(\r\n        <div className=\"recipe-card-div\" id={id}>\r\n          <span\r\n            className=\"recipe-card-span\"\r\n            key={this.props.recipes.indexOf(this.state.filtered[b])}\r\n            onClick={this.props.menuOpen ? null : () => this.viewRecipe(this.props.recipes.indexOf(this.state.filtered[b]))}\r\n          >\r\n            {\" \"}\r\n            <Card\r\n              data={this.state.filtered[b]}\r\n              id={this.props.recipes.indexOf(this.state.filtered[b])}\r\n              saveRecipe={this.props.saveRecipe}\r\n            />\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return col;\r\n  };\r\n\r\n  updateFilteredRecipes = (newFilteredList) => {\r\n    this.setState({ filtered: newFilteredList });\r\n    //Force update of component so that Recipes will display correctly.\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"recipe-table-page\" className=\"paddedPage\">\r\n        <RecipeSearch\r\n          updateFilteredRecipes={this.updateFilteredRecipes}\r\n          allRecipes={this.props.recipes}\r\n        />\r\n        <h1\r\n          style={{\r\n            display: \"inline-block\",\r\n            textAlign: \"center\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            marginLeft: \"-135px\",\r\n          }}\r\n        >\r\n          Your Recipes\r\n        </h1>\r\n        <RecipeSort\r\n          updateFilteredRecipes={this.updateFilteredRecipes}\r\n          recipeList={this.state.filtered}\r\n        />\r\n\r\n        <div>\r\n          {Object.keys(this.state.filtered).length === 0 ? (\r\n            <p id=\"norecipes\">No recipes found</p>\r\n          ) : (\r\n            <div className=\"recipe-cards-container\">\r\n                {this.renderCards()}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipesTable;\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/modal.css\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport AppMode from \"../AppMode.js\";\r\n\r\nclass ViewRecipePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //confirmDelete state variable determines whether to show or hide the\r\n    //confirm delete dialog box\r\n    this.state = this.props.data;\r\n    this.state.confirmDelete = false;\r\n    this.state.viewMode = true;\r\n    this.state.servings = 1;\r\n    //let totalCal = 0;\r\n  }\r\n\r\n  // Handles the general changes to an input box\r\n  handleChange = (event) => {\r\n    const name = event.target.name;\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  // confirms the decision to delete a recipe\r\n  confirmDelete = () => {\r\n    this.setState({ confirmDelete: true });\r\n  };\r\n\r\n  // performs the delete\r\n  doDelete = () => {\r\n    this.props.deleteRecipe(this.props.id);\r\n    this.setState({ confirmDelete: false });\r\n  };\r\n\r\n  //cancelDelete -- Triggered when the user chooses to cancel a delete\r\n  //operation. We just need to update state to toggle confirmDelete to false\r\n  cancelDelete = () => {\r\n    this.setState({ confirmDelete: false });\r\n  };\r\n\r\n  //Update the favorited field in database\r\n  favoriteClicked = (e) => {\r\n    e.preventDefault();\r\n    let newData = this.state;\r\n    if (this.state.favorited) {\r\n      this.setState({ favorited: false });\r\n      newData.favorited = false;\r\n    } else {\r\n      this.setState({ favorited: true });\r\n      newData.favorited = true;\r\n    }\r\n\r\n    delete newData.confirmDelete;\r\n    delete newData.viewMode;\r\n    this.props.saveRecipe(newData, this.props.id, AppMode.RECIPES_VIEWRECIPE);\r\n  };\r\n\r\n  // Lets the page know if we are viewing or editing a recipe\r\n  changeToEditMode = (e) => {\r\n    if (this.state.viewMode) {\r\n      this.setState({ viewMode: false });\r\n    }\r\n    // if we were in edit mode, but are going back\r\n    // to view mode, we will want to save any changes\r\n    else {\r\n      let recipeData = this.state;\r\n      delete recipeData.confirmDelete;\r\n      delete recipeData.viewMode;\r\n      delete recipeData.servings;\r\n\r\n      // NOTE: A random empty obj was being added. Don't remove this.\r\n      delete recipeData[\"\"];\r\n      setTimeout(this.props.saveRecipe, 1000, recipeData);\r\n      e.preventDefault();\r\n      this.setState({ viewMode: true, servings: 1 });\r\n    }\r\n  };\r\n\r\n  getTotalCalories = () => {\r\n    let totalCals = 0;\r\n    let ingredients = this.state.ingredients;\r\n    for (var i = 0; i < ingredients.length; i++) {\r\n      let cals = ingredients[i].calories * this.state.servings;\r\n      if (cals != null && cals != NaN && cals > 0)\r\n        totalCals = totalCals + parseInt(cals);\r\n    }\r\n    return totalCals;\r\n  };\r\n\r\n  addServing = () => {\r\n    this.setState({ servings: this.state.servings + 1 });\r\n  };\r\n\r\n  removeServing = () => {\r\n    if (this.state.servings > 1) {\r\n      this.setState({ servings: this.state.servings - 1 });\r\n    }\r\n  };\r\n\r\n  // Generates the dialog to confirm deleting a recipe\r\n  renderConfirmDeleteDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <p className=\"modal-title\">Confirm Recipe Deletion</p>\r\n            <button className=\"close-modal-button\" onClick={this.cancelDelete}>\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <center>\r\n              <h4>Are you sure that you want to delete this recipe?</h4>\r\n            </center>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"loginBtn btn confirm-delete-btn\"\r\n                onClick={this.doDelete}\r\n              >\r\n                YES\r\n              </button>\r\n              <button\r\n                className=\"loginBtn btn confirm-delete-btn\"\r\n                onClick={this.cancelDelete}\r\n              >\r\n                NO\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // changes the source to a default image if the provided recipe image is not found\r\n  renderRecipeImageError = (e) => {\r\n    e.target.src = \"https://www.boilersupplies.com/img/no_image.png\";\r\n  };\r\n\r\n  // renders the image for a recipe on the page\r\n  renderRecipeImage = () => {\r\n    return (\r\n      <img\r\n        src={this.state.pictureURL}\r\n        height=\"200\"\r\n        style={{ float: \"left\" }}\r\n        // ensures something shows even if the image is not\r\n        // found\r\n        alt=\"No Image Found\"\r\n        onError={this.renderRecipeImageError}\r\n      />\r\n    );\r\n  };\r\n\r\n  // Adds a direction to the recipe (blank)\r\n  addDirection(e) {\r\n    e.preventDefault();\r\n    this.setState({ directions: [...this.state.directions, \"\"] });\r\n  }\r\n\r\n  // Adds an ingredient to the recipe (blank)\r\n  addIngredient(e) {\r\n    e.preventDefault();\r\n    let ingredientObj = {};\r\n    ingredientObj.name = \"\";\r\n    ingredientObj.quantity = 0;\r\n    ingredientObj.unit = \"\";\r\n    ingredientObj.calories = 0;\r\n    ingredientObj.expiration = \"\";\r\n    this.setState({\r\n      ingredients: [...this.state.ingredients, ingredientObj],\r\n    });\r\n  }\r\n  ingredientCalories = (index) => {\r\n    let calories = this.state.ingredients[index].calories;\r\n    return calories == null || calories == NaN || calories < 1 ? 0 : calories * this.state.servings;\r\n  };\r\n  // renders the ingredient list in view mode\r\n  renderIngredients = () => {\r\n    let ingredients = [];\r\n    //if the data are ingredients objects\r\n    for (let i = 0; i < this.state.ingredients.length; ++i) {\r\n      const ingredientid = \"ingredient-\" + i;\r\n      ingredients.push(\r\n        <tr key={i}>\r\n          <td>{this.state.ingredients[i].name}</td>\r\n          <td>{this.state.ingredients[i].expiration}</td>\r\n          <td>\r\n            {this.state.ingredients[i].quantity * this.state.servings}{\" \"}\r\n            {this.state.ingredients[i].unit.toLowerCase() == \"whole\"\r\n              ? null\r\n              : this.state.ingredients[i].quantity > 1\r\n              ? this.state.ingredients[i].unit + \"s\"\r\n              : this.state.ingredients[i].unit}\r\n          </td>\r\n          <td id={ingredientid}>\r\n            {this.ingredientCalories(i)}\r\n            {\"   calories\"}\r\n          </td>\r\n          {this.state.ingredients[i].pictureURL && (\r\n            <td>\r\n              <img\r\n                src={this.state.ingredients[i].pictureURL}\r\n                height=\"40\"\r\n                width=\"40\"\r\n              />\r\n            </td>\r\n          )}\r\n        </tr>\r\n      );\r\n    }\r\n    return <tbody>{ingredients}</tbody>;\r\n  };\r\n\r\n  // handles the change to ingredient name\r\n  handleChangeIngredientName(e, index) {\r\n    this.state.ingredients[index].name = e.target.value;\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  handleChangeIngredientexpiration(e, index) {\r\n    this.state.ingredients[index].expiration = e.target.value;\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  // handles the change to ingredient quantity\r\n  handleChangeIngredientQuantity(e, index) {\r\n    this.state.ingredients[index].quantity = parseFloat(e.target.value);\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  // handles the change to ingredient unit\r\n  handleChangeIngredientUnit(e, index) {\r\n    this.state.ingredients[index].unit = parseInt(e.target.value);\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  handleChangeIngredientCalories(e, index) {\r\n    this.state.ingredients[index].calories = e.target.value;\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  updateIngredientOrder = (newOrder) => {\r\n    let i = 0;\r\n    let ingrArr = [];\r\n    for (i = 0; i < newOrder.length; ++i) {\r\n      ingrArr.push(newOrder[i].value);\r\n    }\r\n    this.setState({ ingredients: ingrArr });\r\n  };\r\n\r\n  // render the ingredients in edit mode with inputs\r\n  renderIngredientsEditMode = () => {\r\n    let i = 0;\r\n    let ingrArr = [];\r\n    for (i = 0; i < this.state.ingredients.length; ++i) {\r\n      ingrArr.push({\r\n        value: this.state.ingredients[i],\r\n        id: i,\r\n      });\r\n    }\r\n\r\n    return (\r\n      <ReactSortable\r\n        handle=\".handle\"\r\n        tag=\"tbody\"\r\n        list={ingrArr}\r\n        setList={(newState) => this.updateIngredientOrder(newState)}\r\n      >\r\n        {ingrArr.map((ingredient) => (\r\n          <tr key={ingredient.id}>\r\n            <td>\r\n              <span className=\"fa fa-bars handle\"></span>\r\n            </td>\r\n            <td className=\"view-name-grouping\">\r\n              {\" \"}\r\n              <input\r\n                className=\"ingredient-input-name-edit form-control\"\r\n                onChange={(e) =>\r\n                  this.handleChangeIngredientName(e, ingredient.id)\r\n                }\r\n                value={ingredient.value.name}\r\n                placeholder=\"Ingredient Name\"\r\n              />\r\n              <input\r\n                className=\"ingredient-input-expiration-edit form-control\"\r\n                onChange={(e) =>\r\n                  this.handleChangeIngredientName(e, ingredient.id)\r\n                }\r\n                value={ingredient.value.expiration}\r\n                placeholder=\"Ingredient Expiration\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control ingredient-input-quantity-edit\"\r\n                onChange={(e) =>\r\n                  this.handleChangeIngredientQuantity(e, ingredient.id)\r\n                }\r\n                value={ingredient.value.quantity}\r\n                placeholder=\"Quantity\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n              />\r\n              <input\r\n                className=\"form-control ingredient-input-unit-edit\"\r\n                list=\"units\"\r\n                onChange={(e) =>\r\n                  this.handleChangeIngredientUnit(e, ingredient.id)\r\n                }\r\n                value={ingredient.value.unit}\r\n                placeholder=\"Ingredient Unit\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control ingredient-input-calories-edit\"\r\n                onChange={(e) =>\r\n                  this.handleChangeIngredientCalories(e, ingredient.id)\r\n                }\r\n                value={ingredient.value.calories}\r\n                placeholder=\"Calories\"\r\n                step=\"5\"\r\n                min=\"0\"\r\n              />\r\n              <datalist id=\"units\">\r\n                <option>whole</option>\r\n                <option>teaspoon</option>\r\n                <option>tablespoon</option>\r\n                <option>cup</option>\r\n                <option>gallon</option>\r\n                <option>pound</option>\r\n                <options>ounce</options>\r\n                <options>quart</options>\r\n                <options>pint</options>\r\n              </datalist>\r\n            </td>\r\n            {ingredient.value.pictureURL && (\r\n              <td>\r\n                <img src={ingredient.value.pictureURL} height=\"40\" width=\"40\" />\r\n              </td>\r\n            )}\r\n            <td className=\"x-table-col\">\r\n              <button\r\n                className=\"loginBtn btn\"\r\n                onClick={(e) => this.handleRemoveIngredient(e, ingredient.id)}\r\n              >\r\n                X\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </ReactSortable>\r\n    );\r\n  };\r\n\r\n  // removes a direction and changes the numbers to match\r\n  handleRemoveDirection(e, index) {\r\n    e.preventDefault();\r\n    this.state.directions.splice(index, 1);\r\n    this.setState({ directions: this.state.directions });\r\n  }\r\n\r\n  // removes an ingredient from the recipe\r\n  handleRemoveIngredient(e, index) {\r\n    e.preventDefault();\r\n    this.state.ingredients.splice(index, 1);\r\n    this.setState({ ingredients: this.state.ingredients });\r\n  }\r\n\r\n  // renders the directions in view mode\r\n  renderDirections = () => {\r\n    let directions = [];\r\n    for (let i = 0; i < this.state.directions.length; ++i) {\r\n      directions.push(\r\n        <tr key={i}>\r\n          <td>{i + 1}</td>\r\n          <td>{this.state.directions[i]}</td>\r\n        </tr>\r\n      );\r\n    }\r\n    return <tbody>{directions}</tbody>;\r\n  };\r\n\r\n  // handes a change to a direction input\r\n  handleChangeDirection(e, index) {\r\n    this.state.directions[index] = e.target.value;\r\n    this.setState({ directions: this.state.directions });\r\n  }\r\n\r\n  updateDirectionOrder = (newOrder) => {\r\n    let i = 0;\r\n    let dirArr = [];\r\n    for (i = 0; i < newOrder.length; ++i) {\r\n      dirArr.push(newOrder[i].value);\r\n    }\r\n    this.setState({ directions: dirArr });\r\n  };\r\n\r\n  // renders the directions as inputs for edit mode\r\n  renderDirectionsEditMode = () => {\r\n    let i = 0;\r\n    let dirArr = [];\r\n    for (i = 0; i < this.state.directions.length; ++i) {\r\n      dirArr.push({\r\n        value: this.state.directions[i],\r\n        id: i,\r\n      });\r\n    }\r\n\r\n    return (\r\n      <ReactSortable\r\n        handle=\".handle\"\r\n        tag=\"tbody\"\r\n        list={dirArr}\r\n        setList={(newState) => this.updateDirectionOrder(newState)}\r\n      >\r\n        {dirArr.map((direction) => (\r\n          <tr key={direction.id} className=\"direction-row\">\r\n            <td>\r\n              <span className=\"fa fa-bars handle\"></span>\r\n            </td>\r\n            <td>{direction.id + 1}</td>\r\n            <td>\r\n              {\" \"}\r\n              <div>\r\n                <textarea\r\n                  className=\"form-control direction-textarea-edit\"\r\n                  onChange={(e) => this.handleChangeDirection(e, direction.id)}\r\n                  value={direction.value}\r\n                />\r\n              </div>\r\n            </td>\r\n            <td className=\"x-table-col\">\r\n              <button\r\n                className=\"loginBtn btn\"\r\n                style={{ height: \"5%\" }}\r\n                onClick={(e) => this.handleRemoveDirection(e, direction.id)}\r\n              >\r\n                X\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </ReactSortable>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"paddedPage\">\r\n        <div className=\"recipeContent\">\r\n          <div>\r\n            {this.state.pictureURL ? this.renderRecipeImage() : null}\r\n            <div className=\"recipeContentTitleInfo\">\r\n              <div>\r\n                {/* conditionally renders the name of the recipe based on mode */}\r\n                <h1 className=\"view-name-grouping\">\r\n                  {this.state.viewMode ? (\r\n                    <p>{this.state.name} </p>\r\n                  ) : (\r\n                    <label htmlFor=\"name\">\r\n                      <input\r\n                        value={this.state.name}\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        className=\"name-edit-input form-control\"\r\n                        type=\"text\"\r\n                        required\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </label>\r\n                  )}\r\n                  <span\r\n                    className={\r\n                      \"fav-btn fa fa-star \" +\r\n                      (this.state.favorited ? \"favorited\" : \"unfavorited\")\r\n                    }\r\n                    onClick={(e) => this.favoriteClicked(e)}\r\n                  ></span>\r\n                </h1>\r\n              </div>\r\n              <h3 className=\"recipeContentTitleInfoSubInfo\">\r\n                Added: {this.state.dateAdded}\r\n              </h3>\r\n              <h3 className=\"recipeContentTitleInfoSubInfo\">\r\n                {/* conditionally renders the cook time of the recipe based on mode */}\r\n                {this.state.viewMode ? (\r\n                  <span>Cook Time: {this.state.cookTime} minutes</span>\r\n                ) : (\r\n                  <label htmlFor=\"cookTime\">\r\n                    Cook Time:\r\n                    <input\r\n                      name=\"cookTime\"\r\n                      id=\"cookTime\"\r\n                      type=\"text\"\r\n                      value={this.state.cookTime}\r\n                      className=\"cooktime-edit-input form-control input-style\"\r\n                      required\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    minutes\r\n                  </label>\r\n                )}\r\n              </h3>\r\n              <h3 className=\"recipeContentTitleInfoSubInfo\">\r\n                Total Calories:{\" \"}\r\n                {isNaN(this.getTotalCalories()) ? 0 : this.getTotalCalories()}\r\n              </h3>\r\n              {this.state.viewMode && <h3 className=\"recipeContentTitleInfoSubInfo\">\r\n                Servings:&nbsp;\r\n                <i id=\"removeservingbutton\" class=\"fa fa-minus-circle\" onClick={this.removeServing}></i>\r\n                &nbsp;<span id=\"servings\">{this.state.servings}</span>&nbsp;\r\n                <i id=\"addservingbutton\" class=\"fa fa-plus-circle\" onClick={this.addServing}></i>\r\n              </h3>}\r\n              {/* If we are in edit mode, we want to allow re-entering a new url */}\r\n              {!this.state.viewMode && (\r\n                <label htmlFor=\"pictureURL\">\r\n                  Picture URL:\r\n                  <input\r\n                    name=\"pictureURL\"\r\n                    id=\"pictureURL\"\r\n                    type=\"text\"\r\n                    className=\"picture-url-input form-control input-style\"\r\n                    value={this.state.pictureURL}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n              )}\r\n            </div>\r\n            <div className=\"view-recipe-btn-family\">\r\n              <div>\r\n                {/* toggles the edit/save button depending on mode */}\r\n                <span\r\n                  className={\r\n                    this.state.viewMode\r\n                      ? \"view-recipe-btn view-recipe-btn-edit fa fa-edit\"\r\n                      : \"view-recipe-btn view-recipe-btn-edit fa fa-save\"\r\n                  }\r\n                  onClick={(e) => this.changeToEditMode(e)}\r\n                ></span>\r\n              </div>\r\n              <div>\r\n                <span\r\n                  className=\"view-recipe-btn fa fa-trash\"\r\n                  onClick={this.confirmDelete}\r\n                ></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"recipeContentListInfo\">\r\n            <h4>Ingredients </h4>\r\n            <table className=\"table table-hover ingredientsTable\">\r\n              {this.state.viewMode\r\n                ? this.renderIngredients()\r\n                : this.renderIngredientsEditMode()}\r\n            </table>\r\n            <h4>\r\n              <center>\r\n                {!this.state.viewMode && (\r\n                  <button\r\n                    className=\"addBtn\"\r\n                    onClick={(e) => this.addIngredient(e)}\r\n                  >\r\n                    <span className=\"fa fa-plus\"></span>\r\n                  </button>\r\n                )}\r\n              </center>\r\n            </h4>\r\n\r\n            <h4>Directions </h4>\r\n            <table className=\"table table-hover directionsTable\">\r\n              {this.state.viewMode\r\n                ? this.renderDirections()\r\n                : this.renderDirectionsEditMode()}\r\n            </table>\r\n            <h4>\r\n              <center>\r\n                {!this.state.viewMode && (\r\n                  <button\r\n                    className=\"addBtn\"\r\n                    onClick={(e) => this.addDirection(e)}\r\n                  >\r\n                    <span className=\"fa fa-plus\"></span>\r\n                  </button>\r\n                )}\r\n              </center>\r\n            </h4>\r\n          </div>\r\n\r\n          {this.state.confirmDelete ? this.renderConfirmDeleteDialog() : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewRecipePage;\r\n","import React from \"react\";\r\nimport FloatingButton from \"./FloatingButton.js\";\r\nimport AppMode from \"../AppMode.js\";\r\nimport RecipesTable from \"./RecipesTable.js\";\r\nimport RecipeForm from \"./RecipeForm.js\";\r\nimport ViewRecipePage from \"./ViewRecipePage.js\"\r\n\r\nclass Recipes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      recipes: [],\r\n      deleteId: \"\",\r\n      editId: \"\",\r\n      viewId: \"\"\r\n    };\r\n  }\r\n\r\n  fetchRecipes = async (redirectPage=null) => {\r\n    let url = \"/recipes/\" + this.props.user.id;\r\n    let res = await fetch(url, { method: \"GET\" });\r\n    if (res.status != 200) {\r\n      let msg = await res.text();\r\n      alert(\r\n        \"Sorry, there was an error obtaining books data for this user: \" + msg\r\n      );\r\n      return;\r\n    }\r\n    let body = await res.json();\r\n    this.setState(\r\n      { recipes: JSON.parse(body) },\r\n      \r\n    );\r\n    if (redirectPage){\r\n      this.props.changeMode(redirectPage)\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchRecipes(AppMode.RECIPES);\r\n  }\r\n\r\n  //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n  //the user is considering deleting.\r\n  setDeleteId = (val) => {\r\n    this.setState({ deleteId: val });\r\n  };\r\n\r\n  //setEditId -- Capture in this.state.editId the unique id of the item\r\n  //the user is considering editing.\r\n  setEditId = (val) => {\r\n    this.setState({ editId: val });\r\n  };\r\n\r\n  setViewId = (val) => {\r\n    this.setState({viewId: val});\r\n  }\r\n\r\n  editRecipe = async (newData, editId=this.state.editId, redirectPage=null) => {\r\n    let url =\r\n      \"/recipes/\" +\r\n      this.props.user.id +\r\n      \"/\" +\r\n      this.state.recipes[editId]._id;\r\n    let res = await fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(newData),\r\n    });\r\n    let msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to update a recipe in the database: \" +\r\n          msg\r\n      );\r\n    } else {\r\n      //Push update into component state:\r\n      this.fetchRecipes(redirectPage);\r\n    }\r\n  };\r\n\r\n  deleteRecipe = async (deleteId=this.state.deleteId) => {\r\n    let url =\r\n      \"/recipes/\" +\r\n      this.props.user.id +\r\n      \"/\" +\r\n      this.state.recipes[deleteId]._id;\r\n    let res = await fetch(url, { method: \"DELETE\" });\r\n    let msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to delete recipe from database: \" +\r\n          msg\r\n      );\r\n    }\r\n    this.fetchRecipes(AppMode.RECIPES); \r\n  };\r\n\r\n  addRecipe = async (newData) => {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, \"0\");\r\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    today = mm + \"/\" + dd + \"/\" + yyyy;\r\n    newData.dateAdded = today;\r\n    \r\n    const url = \"/recipes/\" + this.props.user.id;\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(newData),\r\n    });\r\n    const msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to add new recipe to database: \" +\r\n          msg\r\n      );\r\n    } else {\r\n      //Push update into component state:\r\n      this.fetchRecipes(AppMode.RECIPES);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    switch (this.props.mode) {\r\n      case AppMode.RECIPES:\r\n        return (\r\n          <React.Fragment>\r\n            <RecipesTable\r\n              recipes={this.state.recipes}\r\n              setEditId={this.setEditId}\r\n              setViewId={this.setViewId}\r\n              saveRecipe={this.editRecipe}\r\n              changeMode={this.props.changeMode}\r\n              menuOpen={this.props.menuOpen}\r\n            />\r\n            <div className=\"floatbtn-location\">\r\n              <FloatingButton\r\n                handleClick={() =>\r\n                  this.props.changeMode(AppMode.RECIPES_ADDRECIPE)\r\n                }\r\n                icon={\"fa fa-plus\"}\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      case AppMode.RECIPES_ADDRECIPE:\r\n        return (\r\n          <RecipeForm mode={this.props.mode} saveRecipe={this.addRecipe} />\r\n        );\r\n      case AppMode.RECIPES_VIEWRECIPE:\r\n        return ( \r\n          <ViewRecipePage\r\n            mode={this.props.mode}\r\n            id={this.state.viewId}\r\n            data={this.state.recipes[this.state.viewId]}\r\n            changeMode={this.props.changeMode}\r\n            saveRecipe={this.editRecipe}\r\n            deleteRecipe={this.deleteRecipe}\r\n          />\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Recipes;\r\n","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass PantryTable extends React.Component {\r\n\r\n  editPantry = (id) => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.PANTRY_EDITINGREDIENT);\r\n  }\r\n  confirmDelete = (id) => {\r\n    this.props.setDeleteId(id);\r\n  }\r\n  renderTable = () => {\r\n  let table = [];\r\n  for (let r = 0; r < this.props.pantry.length; ++r) {\r\n    table.push(\r\n      <tr id={\"tableRow-\"+ r}key={r}>\r\n        <td>{this.props.pantry[r].name}</td>\r\n    <td>{this.props.pantry[r].quantity}{this.props.pantry[r].unit}</td>\r\n        <td><button id={\"button2-\"+r}onClick={() => this.editPantry(r)}>\r\n              <span className=\"fa fa-eye\"></span></button></td>\r\n        <td><button id={\"button3-\"+r}onClick={() => this.confirmDelete(r)}>\r\n              <span className=\"fa fa-trash\"></span></button></td>\r\n      </tr> \r\n    );\r\n  }\r\n  return table;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <div id=\"pantryTablePage\" className=\"padded-page\">\r\n      <h1></h1>\r\n      <table id=\"pantryTable\" className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Ingredient</th>\r\n          <th>Quantity</th>\r\n          <th>View/Edit...</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(this.props.pantry).length === 0 ? \r\n          <tr>\r\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No Ingredients Added</td>\r\n          </tr> : this.renderTable()\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PantryTable;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass GroceryTable extends React.Component {\r\n\r\n  confirmDelete = (id) => {\r\n    this.props.setDeleteId(id);\r\n  }\r\n\r\n  renderTable = () => {\r\n  let table = [];\r\n  for (let r = 0; r < this.props.shopCart.length; ++r) {\r\n    table.push(\r\n      <tr id={\"tableRow-\"+ r} key={r}>\r\n        <td>{this.props.shopCart[r].name}</td>\r\n        <td>{this.props.shopCart[r].quantity}{this.props.shopCart[r].units}</td>\r\n        <td><button id={\"button-\"+r} onClick={() => this.confirmDelete(r)}>\r\n              <span className=\"fa fa-trash\"></span></button></td>\r\n      </tr> \r\n    );\r\n  }\r\n  return table;\r\n  }\r\n  render() {\r\n    return(\r\n    <div id=\"groceryTablePage\" className=\"padded-page\">\r\n      <h1></h1>\r\n      <table id=\"groceryTable\" className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Ingredient</th>\r\n          <th>Quantity</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(this.props.shopCart).length === 0 ? \r\n          <tr>\r\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No Items Added to the Shopping cart</td>\r\n          </tr> : this.renderTable()\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroceryTable;","import React from \"react\";\r\nimport AppMode from \"../AppMode\";\r\n\r\nclass PantryForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        if (this.props.mode === AppMode.PANTRY_ADDINGREDIENT) {\r\n            this.state = {\r\n              name: \"\",\r\n              calories: \"\",\r\n              pictureURL: \"\",\r\n              unit: \"units\",\r\n              expiration: \"\",\r\n              quantity: \"\",\r\n              faIcon: \"fa fa-save\",\r\n              btnLabel: \"Save Ingredient\"\r\n            };\r\n          }\r\n          else if (this.props.mode === AppMode.GROCERY_ADDINGREDIENT){\r\n            this.state = {\r\n                name: \"\",\r\n                calories: \"\",\r\n                pictureURL: \"\",\r\n                unit: \"units\",\r\n                expiration: \"\",\r\n                quantity: \"\",\r\n                faIcon: \"fa fa-save\",\r\n                btnLabel: \"Add to Cart\"\r\n              };\r\n        }\r\n        else if (this.props.mode === AppMode.PANTRY_EDITINGREDIENT){\r\n            this.state = this.props.startData;\r\n            this.state.faIcon = \"fa fa-edit\";\r\n            this.state.btnLabel = \"Update Ingredient\";\r\n          }\r\n    }\r\n\r\n    //handle change\r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        this.setState({[name]: event.target.value});\r\n    };\r\n\r\n    //handling Submit\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({\r\n          faIcon: \"fa fa-spin fa-spinner\",\r\n          btnLabel:\r\n            this.props.mode === AppMode.PANTRY_ADDINGREDIENT\r\n              ? \"Saving...\"\r\n              : \"Updating...\",\r\n        });\r\n        //to be saved\r\n        let pantryData = this.state;\r\n        delete pantryData.faIcon;\r\n        delete pantryData.btnLabel;\r\n        delete pantryData.confirmDelete;\r\n        //1 second delay to show spinning icon\r\n        setTimeout(this.props.savePantry, 1000, pantryData);\r\n        event.preventDefault();\r\n      };\r\n\r\n    //render function\r\n    render(){\r\n        return(\r\n        <div className=\"paddedPage\">\r\n            <form onSubmit={this.handleSubmit}>\r\n                <p></p>\r\n                <center>\r\n                <label htmlFor=\"name\">Ingredient Name:\r\n                <input\r\n                value={this.state.name}\r\n                name=\"name\"\r\n                id=\"name\"\r\n                className=\"form-control form-center \"\r\n                type=\"text\"\r\n                required\r\n                onChange={this.handleChange}\r\n              /> </label>\r\n              <p />\r\n               <label htmlFor=\"calories\">\r\n              Calories:\r\n              <input\r\n                value={this.state.calories}\r\n                name=\"calories\"\r\n                id=\"calories\"\r\n                className=\"form-control form-center\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <p />\r\n            <label className=\"pictureURL-form\" htmlFor=\"pictureURL\">\r\n              Picture URL:\r\n              <input\r\n                value={this.state.pictureURL}\r\n                name=\"pictureURL\"\r\n                id=\"pictureURL\"\r\n                className=\"form-control form-center\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <p />\r\n            <label htmlFor=\"calories\">\r\n              Quantity:\r\n              <input\r\n                value={this.state.quantity}\r\n                name=\"quantity\"\r\n                id=\"quantity\"\r\n                className=\"form-control form-center\"\r\n                onChange={this.handleChange}\r\n              />\r\n            <label htmlFor=\"unit\">\r\n                Units: \r\n              <input\r\n                value={this.state.unit}\r\n                name=\"unit\"\r\n                id=\"unit\"\r\n                className=\"form-control form-center\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            </label>\r\n            <p />\r\n            <label htmlFor=\"expiration\">\r\n              Expiration Date:\r\n              <input\r\n                value={this.state.expiration}\r\n                name=\"expiration\"\r\n                id=\"expiration\"\r\n                className=\"form-control form-center\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <button\r\n              id=\"pantrySubmit\"\r\n              type=\"submit\"\r\n              onClick={this.props.handleChange}\r\n              className=\"loginBtn btn btn-primary\r\n                    btn-block btncolortheme\"\r\n              style={{ width: \"230px\", fontSize: \"20px\", zindex: 110 }}\r\n            >\r\n              <span className={this.state.faIcon} />\r\n              &nbsp;{this.state.btnLabel}\r\n            </button>\r\n            </center>\r\n            </form>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PantryForm;","import React from \"react\";\r\nimport PantryTable from \"./PantryTable.js\";\r\nimport GroceryTable from \"./GroceryTable.js\";\r\nimport PantryForm from \"./PantryForm.js\";\r\nimport AppMode from \"../AppMode.js\";\r\nimport FloatingButton from \"./FloatingButton.js\";\r\nclass PantryPage extends React.Component {\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      pantry: [],\r\n      groceryList: [],\r\n      deleteId: \"\",\r\n      editId: \"\",\r\n      groceryDeleteId: \"\"\r\n    };\r\n  }\r\n\r\n  fetchPantry = async (redirectPage=null) => {\r\n    let url = \"/pantry/\" + this.props.user.id;\r\n    let res = await fetch(url, { method: \"GET\" });\r\n    if (res.status != 200) {\r\n      let msg = await res.text();\r\n      alert(\r\n        \"Sorry, there was an error obtaining books data for this user: \" + msg\r\n      );\r\n      return;\r\n    }\r\n    let body = await res.json();\r\n    this.setState(\r\n      { pantry: JSON.parse(body) },\r\n      \r\n    );\r\n    if (redirectPage){\r\n      this.props.changeMode(redirectPage)\r\n    }\r\n  };\r\n\r\n  fetchGroceryList = async (redirectPage=null) => {\r\n    let url = \"/groceryList/\" + this.props.user.id;\r\n    let res = await fetch(url, { method: \"GET\" });\r\n    if (res.status != 200) {\r\n      let msg = await res.text();\r\n      alert(\r\n        \"Sorry, there was an error obtaining books data for this user: \" + msg\r\n      );\r\n      return;\r\n    }\r\n    let body = await res.json();\r\n    this.setState(\r\n      { groceryList: JSON.parse(body) },\r\n      \r\n    );\r\n    if (redirectPage){\r\n      this.props.changeMode(redirectPage)\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchPantry(AppMode.PANTRY);\r\n    this.fetchGroceryList(AppMode.PANTRY);\r\n  }\r\n\r\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n  //the user is considering deleting.\r\n  setDeleteId = (val) => {\r\n    this.setState({ deleteId: val });\r\n    this.deleteIngredient();\r\n  };\r\n  setDeleteId2 = (val) => {\r\n    alert(val);\r\n    this.setState({ groceryDeleteId: val });\r\n    this.deleteGrocery();\r\n  };\r\n  //setEditId -- Capture in this.state.editId the unique id of the item\r\n  //the user is considering editing.\r\n  setEditId = (val) => {\r\n    this.setState({ editId: val });\r\n  };\r\n\r\n  editIngredient = async (newData, editId=this.state.editId, redirectPage=null) => {\r\n    let url =\r\n      \"/pantry/\" +\r\n      this.props.user.id +\r\n      \"/\" +\r\n      this.state.pantry[editId]._id;\r\n    let res = await fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(newData),\r\n    });\r\n    let msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to update a recipe in the database: \" +\r\n          msg\r\n      );\r\n    } else {\r\n      //Push update into component state:\r\n      this.fetchPantry(AppMode.PANTRY);\r\n    }\r\n  };\r\n\r\n  deleteIngredient = async (deleteId) => {\r\n    let url =\r\n      \"/pantry/\" +\r\n      this.props.user.id +\r\n      \"/\" +\r\n      this.state.pantry[deleteId]._id;\r\n    let res = await fetch(url, { method: \"DELETE\" });\r\n    let msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to delete recipe from database: \" +\r\n          msg\r\n      );\r\n    }\r\n    this.fetchPantry(AppMode.PANTRY); \r\n  };\r\n\r\n  deleteGrocery = async (deleteId) => {\r\n    let url =\r\n      \"/groceryList/\" +\r\n      this.props.user.id +\r\n      \"/\" +\r\n      this.state.groceryList[deleteId]._id;\r\n    let res = await fetch(url, { method: \"DELETE\" });\r\n    let msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to delete recipe from database: \" +\r\n          msg\r\n      );\r\n    }\r\n    this.fetchGroceryList(AppMode.PANTRY); \r\n  };\r\n\r\n\r\n  addIngredient = async (newData) => {\r\n\r\n    this.state.pantry.push(newData);\r\n    \r\n    const url = \"/pantry/\" + this.props.user.id;\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(this.state.pantry),\r\n    });\r\n    const msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to add new recipe to database: \" +\r\n          msg\r\n      );\r\n    } else {\r\n      //Push update into component state:\r\n      this.fetchPantry(AppMode.PANTRY);\r\n    }\r\n  };\r\n\r\n  addGrocery = async (newData) => {\r\n    const url = \"/groceryList/\" + this.props.user.id;\r\n    this.state.groceryList.push(newData);\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(this.state.groceryList),\r\n    });\r\n    const msg = await res.text();\r\n    if (res.status != 200) {\r\n      alert(\r\n        \"An error occurred when attempting to add new recipe to database: \" +\r\n          msg\r\n      );\r\n    } else {\r\n      //Push update into component state:\r\n      this.fetchPantry(AppMode.PANTRY);\r\n    }\r\n  };\r\n  render() {\r\n    switch (this.props.mode)\r\n    {\r\n      case AppMode.PANTRY:\r\n        return (\r\n        <React.Fragment>\r\n        <div className=\"paddedPage center\">\r\n          <h1 id=\"Header1\" align=\"center\">Grocery Management</h1>\r\n          <h2 align=\"center\">Pantry</h2>\r\n          <button id=\"pantryButton\" onClick={() => this.props.changeMode(AppMode.PANTRY_ADDINGREDIENT)}>\r\n              Add to Pantry</button>\r\n          <PantryTable \r\n            pantry={this.state.pantry} \r\n            changeMode={this.props.changeMode}\r\n            setEditId={this.setEditId}\r\n            setDeleteId={this.deleteIngredient}\r\n            savePantry={this.editIngredient}\r\n            menuOpen={this.props.menuOpen}\r\n            />\r\n        <h2 align=\"center\">Groceries</h2>\r\n        <button id=\"groceryButton\" onClick={() => this.props.changeMode(AppMode.GROCERY_ADDINGREDIENT)}>\r\n              Add to Shopping Cart</button>\r\n        <GroceryTable \r\n            shopCart={this.state.groceryList} \r\n            changeMode={this.props.changeMode}\r\n            setDeleteId={this.deleteGrocery}\r\n            saveGrocery={this.addGrocery}\r\n            menuOpen={this.props.menuOpen}\r\n            />\r\n      </div>\r\n      </React.Fragment>\r\n      );\r\n      case AppMode.PANTRY_ADDINGREDIENT:\r\n        return (\r\n          <PantryForm mode={this.props.mode} savePantry={this.addIngredient} />\r\n        );\r\n        case AppMode.GROCERY_ADDINGREDIENT:\r\n          return (\r\n            <PantryForm mode={this.props.mode} savePantry={this.addGrocery} />\r\n          );\r\n      case AppMode.PANTRY_EDITINGREDIENT:\r\n        return (\r\n          <PantryForm mode={this.props.mode} savePantry={this.editIngredient} startData={this.state.pantry[this.state.editId]} />\r\n        );\r\n  }\r\n}\r\n}\r\n\r\nexport default PantryPage;\r\n","import React from \"react\";\r\nimport NavBar from \"./NavBar.js\";\r\nimport LoginPage from \"./LoginPage.js\";\r\nimport Recipes from \"./Recipes.js\";\r\nimport PantryPage from \"./PantryPage.js\";\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome to Your Library\";\r\nmodeTitle[AppMode.RECIPES] = \"Your Recipes\";\r\nmodeTitle[AppMode.RECIPES_ADDRECIPE] = \"Add New Recipe\";\r\nmodeTitle[AppMode.RECIPES_EDITRECIPE] = \"Edit Recipe\";\r\nmodeTitle[AppMode.PANTRY] = \"Grocery Management\";\r\nmodeTitle[AppMode.PANTRY_EDITINGREDIENT] = \"Edit Ingredient\";\r\nmodeTitle[AppMode.PANTRY_ADDINGREDIENT] = \"Add Ingredient\";\r\nmodeTitle[AppMode.GROCERY_ADDINGREDIENT] = \"Add to Shopping Cart\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.RECIPES] = Recipes;\r\nmodeToPage[AppMode.RECIPES_ADDRECIPE] = Recipes;\r\nmodeToPage[AppMode.RECIPES_EDITRECIPE] = Recipes;\r\nmodeToPage[AppMode.RECIPES_VIEWRECIPE] = Recipes;\r\nmodeToPage[AppMode.PANTRY] = PantryPage;\r\nmodeToPage[AppMode.PANTRY_EDITINGREDIENT] = PantryPage;\r\nmodeToPage[AppMode.PANTRY_ADDINGREDIENT] = PantryPage;\r\nmodeToPage[AppMode.GROCERY_ADDINGREDIENT] = PantryPage;\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: AppMode.LOGIN,\r\n      menuOpen: false,\r\n      user: \"\",\r\n      showAbout: false,\r\n      authenticated: false,\r\n      showEditUser: false\r\n    };\r\n  }\r\n\r\n  handleChangeMode = newMode => {\r\n    this.setState({ mode: newMode });\r\n  };\r\n\r\n  openMenu = () => {\r\n    this.setState({ menuOpen: true });\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({ menuOpen: false });\r\n  };\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({ menuOpen: !prevState.menuOpen }));\r\n  };\r\n\r\n  setUser = (userObj) => {\r\n    this.setState({ user: userObj });\r\n  };\r\n\r\n  showEditDialog = () => {\r\n    this.setState({showEditUser: true});\r\n  };\r\n\r\n   //setAuthenticated -- Given auth (true or false), update authentication state.\r\n   setAuthenticated = (auth) => {\r\n    this.setState({authenticated: auth});\r\n  }\r\n\r\n  handleNewEditChange = (event) =>\r\n  {\r\n    let userData = this.state.user;\r\n    userData[event.target.name] = event.target.value;\r\n    this.setState({user: userData});\r\n}\r\n\r\n  //When App component mounts, add a window-level click handler to close the\r\n  //side menu if it is open. This event should fire only if no other lower-level\r\n  //events intercept the click.\r\n  componentDidMount() {\r\n    window.addEventListener(\"click\", this.handleClick);\r\n\r\n    if (!this.state.authenticated) {\r\n      //Use /auth/test route to (re)-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then(response => response.json())\r\n        .then(obj => {\r\n          if (obj.isAuthenticated) {\r\n            let data = JSON.parse(localStorage.getItem(\"yourRecipeUserData\"));\r\n            if (data == null) {\r\n              data = {}; //create empty database (localStorage)\r\n            }\r\n\r\n            if (!data.hasOwnProperty(obj.user.id)) {\r\n              //create new user with this id in database (localStorage)\r\n              data[obj.user.id] = {\r\n                accountInfo: {\r\n                  provider: obj.user.provider,\r\n                  password: \"\",\r\n                  securityQuestion: \"\",\r\n                  securityAnswer: \"\"\r\n                },\r\n\r\n                Recipes: {},\r\n              };\r\n\r\n              //Commit to localStorage:\r\n              localStorage.setItem(\"yourLibraryUserData\", JSON.stringify(data));\r\n            }\r\n\r\n            //Update current user\r\n            this.setState({\r\n              authenticated: true,\r\n              user: obj.user,\r\n              mode: AppMode.RECIPES //We're authenticated so can get into the app.\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  //We remove the event listener when the component\r\n  //unmounts. This is a best practice.\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"click\", this.handleClick);\r\n  }\r\n\r\n  //When the user clicks anywhere on the app and the menu is open, close it.\r\n  //This function takes advantage of event bubbling.\r\n  handleClick = event => {\r\n    if (this.state.menuOpen) {\r\n      this.closeMenu();\r\n    }\r\n    event.stopPropagation();\r\n  };\r\n\r\n  toggleAbout = () => {\r\n    this.setState(prevState => ({ showAbout: !prevState.showAbout }));\r\n  };\r\n\r\n  handleEditAccount = async(event) => {\r\n    event.preventDefault();\r\n    //Initialize user account\r\n    let userData = {\r\n        displayName: this.state.user['displayName'],\r\n        securityQuestion: this.state.user['securityQuestion'],\r\n        securityAnswer: this.state.user['securityAnswer']\r\n    };\r\n\r\n    const url = '/users/' + this.state.user['id'];\r\n    const res = await fetch(url, {\r\n      headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n      },\r\n      method: 'PUT',\r\n      userId: this.state.user['id'],\r\n      body: JSON.stringify(userData)});\r\n    //Commit to local storage\r\n    if (res.status !== 200)\r\n    {\r\n        alert('userNotedited');\r\n    }\r\n    this.setState({showEditUser: false});\r\n  }\r\n\r\n  renderEditAccountDialog = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>Edit Account</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={() => {\r\n                    this.setState({ showEditUser: false });\r\n                  }}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={this.handleEditAccount}>\r\n                <label>\r\n                  Email:\r\n                  <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"id\"\r\n                    type=\"email\"\r\n                    size=\"35\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                    readOnly = {true}\r\n                    required={true}\r\n                    value={this.state.user[\"id\"]}\r\n                    onChange={this.handleNewEditChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  DisplayName:\r\n                  <textarea\r\n                    className=\"form-control form-text\"\r\n                    name=\"displayName\"\r\n                    size=\"35\"\r\n                    placeholder=\"Security Question\"\r\n                    rows=\"2\"\r\n                    cols=\"35\"\r\n                    maxLength=\"100\"\r\n                    required={true}\r\n                    value={this.state.user[\"displayName\"]}\r\n                    onChange={this.handleNewEditChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Security Question:\r\n                  <textarea\r\n                    className=\"form-control form-text\"\r\n                    name=\"securityQuestion\"\r\n                    size=\"35\"\r\n                    placeholder=\"Security Question\"\r\n                    rows=\"2\"\r\n                    cols=\"35\"\r\n                    maxLength=\"100\"\r\n                    required={true}\r\n                    readOnly = {this.state.user['authStrategy'] != 'local' ? true: false}\r\n                    value={this.state.user[\"securityQuestion\"]}\r\n                    onChange={this.handleNewEditChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Answer to Security Question:\r\n                  <textarea\r\n                    className=\"form-control form-text\"\r\n                    name=\"securityAnswer\"\r\n                    type=\"text\"\r\n                    placeholder=\"Answer\"\r\n                    rows=\"2\"\r\n                    cols=\"35\"\r\n                    maxLength=\"100\"\r\n                    required={true}\r\n                    readOnly = {this.state.user['authStrategy'] != 'local' ? true: false}\r\n                    value={this.state.user[\"securityAnswer\"]}\r\n                    onChange={this.handleNewEditChange}\r\n                  />\r\n                </label>\r\n                <button\r\n                  role=\"submit\"\r\n                  className=\"loginBtn btn btn-primary\r\n                  btn-block btncolortheme\"\r\n                >\r\n                  <span className=\"fa fa-user-plus\"></span>&nbsp;Edit Account\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderAbout = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\">\r\n                <b>About Your Recipe App</b>\r\n                <button\r\n                  className=\"close-modal-button\"\r\n                  onClick={this.toggleAbout}\r\n                >\r\n                  &times;\r\n                </button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body \">\r\n              <center>\r\n                <img\r\n                  src={require(\"./../styles/pancakes.jpg\")}\r\n                  height=\"280px\"\r\n                  width=\"370px\"\r\n                  className=\"aboutBody\"\r\n                />\r\n                <h3>Store Your Recipes Online!</h3>\r\n                <p>\r\n                  <em>\r\n                    Version 1 (Live), Build 20.6.2018 <br />\r\n                    &copy; 2020 Recipe Team. All rights reserved.\r\n                  </em>\r\n                </p>\r\n              </center>\r\n              <p>\r\n                <b>Your Recipe App supports</b>\r\n              </p>\r\n              <ul className=\"yourRecipesSupports\">\r\n                <li>Adding and removing recipes in your personal cook book</li>\r\n                <li>Managing your groceries</li>\r\n              </ul>\r\n              <br/>\r\n              <p>\r\n                Your Recipe App was first developed by The Recipe Team, which is\r\n                composed of two teams. They are doing this for a CptS 489 project.\r\n              </p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"loginBtn btn btn-primary btn-color-theme\"\r\n                onClick={this.toggleAbout}\r\n              >\r\n                OK\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div onClick={this.handleClick}>\r\n        {this.state.mode != AppMode.LOGIN &&\r\n          <NavBar\r\n          title={modeTitle[this.state.mode]}\r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          user={this.state.user}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}\r\n          showAbout={this.toggleAbout}\r\n          showEditDialog={this.showEditDialog}\r\n        />}\r\n        <ModePage\r\n          menuOpen={this.state.menuOpen}\r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          setAuthenticated={this.setAuthenticated}\r\n          user={this.state.user}\r\n          setUser={this.setUser}\r\n        />\r\n        {this.state.showAbout ? this.renderAbout() : null}\r\n        {this.state.showEditUser ? this.renderEditAccountDialog(): null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './styles/index.css';\r\nimport './styles/modal.css';\r\nimport './styles/CustomFont.css'\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}